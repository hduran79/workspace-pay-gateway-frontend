/**
 * Toolkit Styles
 */

/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */

html {
  line-height: 1.15; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */

figcaption,
figure,
main { /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */

details, /* 1 */
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */

template {
  display: none;
}

/* Hidden
   ========================================================================== */

/**
 * Add the correct display in IE 10-.
 */

[hidden] {
  display: none;
}

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * 1. Prevent padding and border from affecting element width
 * https://goo.gl/pYtbK7
 * 2. Change the default font family in all browsers (opinionated)
 */

html {
  box-sizing: border-box; /* 1 */
  font-family: sans-serif; /* 2 */
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0;
}

button {
  background: transparent;
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

iframe {
  border: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex="-1"]:focus {
  outline: none !important;
}

/**
 * Force body to always meet viewport height
 */

html {
  height: 100%;
}

body {
  min-height: 100%;
}

/**
 * Prevent media from overflowing its container horizontally
 */

img,
svg,
iframe,
input {
  max-width: 100%;
}

/**
 * Prevent some media from detaching width from height in supported browsers
 */

img,
svg {
  height: auto;
}

/**
 * Tables
 */

/**
 * 1. Prevent double borders
 * 2. Without this, th elements won't inherit their alignment predictably in
 *    Safari. Setting alignment here makes it easier to override on the
 *    containing element (if desired).
 */

table {
  border-collapse: collapse; /* 1 */
  text-align: left; /* 2 */
}

/**
 * Make th alignment consistent with td alignment
 */

th {
  text-align: inherit;
}

/**
 * PostCSS Plugins
 */

/**
 * Colors
 *
 * Where possible, color names should map to standard webcolors.
 * See: https://zaim.github.io/webcolors/
 *
 * For adjustments to existing colors (lightening, darkening) use the
 * `color` function: https://github.com/postcss/postcss-color-function
 */

/**
 * Typography
 *
 * @see http://www.modularscale.com/?1&em&1.2
 * @see https://github.com/erikjung/postcss-modular-scale-unit
 */

/**
 * Motion Duration
 *
 * Expressed as single-decimal-point numbers so that they always evenly divide
 * the targeted 60 frames-per-second required for smooth animation.
 */

/**
 * Motion Easing
 *
 * @see http://easings.net/
 */

/**
 * Animations
 */

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

/**
 * Box Properties
 */

/**
 * Page Layout Properties
 */

/**
 * Selectors
 */

/**
 * Viewports
 */

/**
 * Fluid root font size
 *
 * @see https://zellwk.com/blog/viewport-based-typography/
 * @see https://www.smashingmagazine.com/2016/05/fluid-typography/
 */

html {
  font-size: 16px;
}

@media (min-width: 47em) {
  html {
    font-size: calc(16px + 0.2vw);
  }
}

/**
 * 1. Base font style.
 * 2. Stylized appearance.
 * 3. Prevent unexpected `font-size` changes when device is rotated
 * 4. Allow long words (links) to break at arbitrary points
 */

body {
  color: #2c2a29;
  font: 1em / 1.44 "Helvetica Neue", Helvetica, Arial, sans-serif; /* 1 */
  letter-spacing: 0.01em; /* 2 */
  -webkit-text-size-adjust: none;
     -moz-text-size-adjust: none;
      -ms-text-size-adjust: none;
          text-size-adjust: none; /* 3 */
  word-wrap: break-word; /* 4 */
}

/**
 * Links
 */

:link,:visited {
  color: #009ca6;
  text-decoration: none;
}

/**
 * Headings
 *
 * 1. Condensed (unitless) line-height for balance.
 */

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1; /* 1 */
}

/**
 * Lists
 */

ol,
ul {
  padding-left: 1.2em;
}

ol {
  list-style-type: decimal;
}

ul {
  list-style-type: circle;
}

/**
 * Blockquotes
 */

blockquote {
  padding-left: 1.2em;
}

/**
 * Form elements
 *
 * 1. Override body word-wrap, which is inherited by form elements in Safari
 */

input,
textarea,
select {
  word-wrap: normal; /* 1 */
}

/**
 * Code
 */

code,
pre {
  font-family: "Source Code Pro", "Andale Mono", "Lucida Console", Monaco, Consolas, monospace;
}

*:not(pre) > code {
  background-color: #2c2a29;
  background-color: rgba(44, 42, 41, 0.075);
  border-radius: 2px;
  border-radius: 0.125em;
  color: #003865;
  padding-left: 0.402em;
  padding-right: 0.482em;
  word-wrap: normal;
}

/**
 * Abbreviations
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr
 */

/**
 * Some browsers use "small caps" by default.
 */

abbr {
  -webkit-font-feature-settings: "kern" off;
          font-feature-settings: "kern" off;
  font-variant: none;
}

/**
 * Reset text decoration (if any) except on interaction states.
 */

abbr[title]:not(:hover):not(:focus) {
  text-decoration: none;
}

/*
        This font software is the property of Commercial Type.

        You may not modify the font software, use it on another
        website, or install it on a computer.

        License information is available at http://commercialtype.com/eula
        For more information please visit Commercial Type at http://commercialtype.com or email us at info[at]commercialtype.com

        Copyright (C) 2018 Schwartzco Inc.
        License: 1804-UHKGVM
*/

@font-face {
  font-family: "Canela Web";
  font-stretch: normal;
  font-style: normal;
  font-weight: 100;
  src: url("/fonts/Canela-Thin-Web.eot");
  src:
    url("/fonts/Canela-Thin-Web.eot?#iefix") format("embedded-opentype"),
    url("/fonts/Canela-Thin-Web.woff2") format("woff2"),
    url("/fonts/Canela-Thin-Web.woff") format("woff");
}

/**
 * @define Alert
 */

.Alert {
  border: 1px solid #d73043;
  color: #d73043;
  padding: 0.694em;
}

/**
 * @define Button
 */

/**
 * Default Button styles
 *
 * 1. We set border even if it's transparent to avoid alignment issues when
 *    buttons are next to bordered elements (like inputs) or other buttons with
 *    visible outlines.
 * 2. Inherit base font styles from ancestor to overcome inconsistencies across
 *    various platforms.
 * 3. Certain input elements require this value, so we use the same here to
 *    promote alignment.
 * 4. Prevent button text from being selectable.
 */

.Button {
  background: #2c2a29;
  border: 1px solid transparent; /* 1 */
  border-radius: 0.125em !important;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font: inherit; /* 2 */
  font-weight: 700;
  letter-spacing: 0.0625em;
  line-height: normal; /* 3 */
  margin: 0;
  padding: 0.579em 0.833em;
  text-align: center;
  text-transform: uppercase;
  -webkit-transition-duration: 0.2s;
          transition-duration: 0.2s;
  -webkit-transition-property: background-color, border-color, box-shadow, color, opacity, -webkit-filter;
  transition-property: background-color, border-color, box-shadow, color, opacity, -webkit-filter;
  transition-property: background-color, border-color, box-shadow, color, filter, opacity;
  transition-property: background-color, border-color, box-shadow, color, filter, opacity, -webkit-filter;
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 4 */
}

/**
 * Some overrides need to be applied to both the base class and states because
 * specificity is a tricky thing.
 *
 * 1. Override default focus styles because we'll be adding our own.
 * 2. Override link defaults.
 */

.Button,
.Button:hover,
.Button:focus,
.Button:active {
  outline: 0; /* 1 */
  text-decoration: none; /* 2 */
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.Button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * States
 *
 * We negate disabled selectors so effects won't be visible when a button isn't
 * actionable.
 */

.Button:hover:not(:disabled):not(.is-disabled) {
  background-color: rgb(72, 68, 66);
}

.Button:focus:not(:active):not(:disabled):not(.is-disabled) {
  border-color: #2c2a29;
  box-shadow: inset 0 0 0 1px #fff;
}

.Button:active:not(:disabled):not(.is-disabled) {
  color: #ffffff;
  color: rgba(255, 255, 255, 0.6);
}

.Button:disabled,
.Button.is-disabled {
  cursor: not-allowed;
  filter: url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg"><filter id="filter"><feColorMatrix type="matrix" color-interpolation-filters="sRGB" values="0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0" /></filter></svg>#filter');
  -webkit-filter: grayscale(100%);
          filter: grayscale(100%);
  opacity: 0.6;
}

/**
 * Modifiers
 */

/**
 * On dark backgrounds
 *
 * Inverts focus effect of typical Button so it will show up better on dark
 * backgrounds.
 */

.Button--onDark:focus:not(:active):not(:disabled):not(.is-disabled) {
  border-color: #fff;
  box-shadow: inset 0 0 0 1px #2c2a29;
}

/**
 * Mixins to make color modifiers easier to make. Nesting syntax violates
 * guidelines, hence the temporary disable.
 */

/* stylelint-disable plugin/selector-bem-pattern */

/* stylelint-enable */

/**
 * Modifier: Success
 *
 * 1. Slightly increase lightness of green for contrast as background color.
 * 2. Use darker text color for contrast.
 */

.Button--success {
  background-color: rgb(153, 204, 92);
}

.Button--success:hover:not(:disabled):not(.is-disabled) {
  background-color: rgb(166, 210, 112);
}

.Button--success:active:not(:disabled):not(.is-disabled) {
  background-color: rgb(129, 186, 59);
}

.Button--success {/*1
 */
  color: #2c2a29;/*2
 */
}

/**
 * Mimic typical color transition on press-down state, but inverted given
 * that this is a dark color instead of white
 */

.Button--success:active:not(:disabled):not(.is-disabled) {
  color: #2c2a29;
  color: rgba(44, 42, 41, 0.8);
}

/**
 * Modifier: Passion
 */

.Button--passion {
  background-color: #d73043;
}

.Button--passion:hover:not(:disabled):not(.is-disabled) {
  background-color: rgb(220, 71, 88);
}

.Button--passion:active:not(:disabled):not(.is-disabled) {
  background-color: rgb(180, 34, 51);
}

/**
 * Modifier: Loyalty
 */

.Button--loyalty {
  background-color: #6f6da8;
}

.Button--loyalty:hover:not(:disabled):not(.is-disabled) {
  background-color: rgb(126, 124, 177);
}

.Button--loyalty:active:not(:disabled):not(.is-disabled) {
  background-color: rgb(86, 84, 140);
}

/**
 * Modifier: Inverted
 *
 * 1. Use current color and transparent background to blend into surroundings.
 * 2. Make border visible.
 */

.Button--inverted,
.Button--inverted:hover:not(:disabled):not(.is-disabled),
.Button--inverted:focus:not(:active):not(:disabled):not(.is-disabled),
.Button--inverted:active:not(:disabled):not(.is-disabled) {
  background-color: transparent;
  color: inherit;
}

.Button--inverted:hover:not(:disabled):not(.is-disabled) {
  opacity: 0.85;
}

.Button--inverted:active:not(:disabled):not(.is-disabled) {
  opacity: 0.6;
}

.Button--inverted {/*1
 */
  border-color: currentColor;/*2
 */
}

/**
 * Make focus state visible by using same color for inset border
 */

.Button--inverted:focus:not(:active):not(:disabled):not(.is-disabled) {
  box-shadow: inset 0 0 0 1px currentColor;
}

/**
 * Modifier: Transparent
 */

.Button--transparent,
.Button--transparent:hover:not(:disabled):not(.is-disabled),
.Button--transparent:focus:not(:active):not(:disabled):not(.is-disabled),
.Button--transparent:active:not(:disabled):not(.is-disabled) {
  background-color: transparent;
  color: inherit;
}

.Button--transparent:hover:not(:disabled):not(.is-disabled) {
  opacity: 0.85;
}

.Button--transparent:active:not(:disabled):not(.is-disabled) {
  opacity: 0.6;
}

/**
 * Modifier: Modest
 *
 * In addition to typical transparent styles, reset some aspects of font styles
 * so it appears more like surrounding text
 */

.Button--modest,
.Button--modest:hover:not(:disabled):not(.is-disabled),
.Button--modest:focus:not(:active):not(:disabled):not(.is-disabled),
.Button--modest:active:not(:disabled):not(.is-disabled) {
  background-color: transparent;
  color: inherit;
}

.Button--modest:hover:not(:disabled):not(.is-disabled) {
  opacity: 0.85;
}

.Button--modest:active:not(:disabled):not(.is-disabled) {
  opacity: 0.6;
}

.Button--modest {
  font-family: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  text-transform: inherit;
}

/**
 * @define DividerText
 */

.DividerText {
  -webkit-box-align: center;
          align-items: center;
  display: -webkit-box;
  display: flex;
}

.DividerText:before,
.DividerText:after {
  background-color: #eee;
  content: "";
  display: block;
  -webkit-box-flex: 1;
          flex: 1 0 0%;
  height: 1px;
}

.DividerText:before {
  margin-right: 1em;
  margin-right: 2ch;
}

.DividerText:after {
  margin-left: 1em;
  margin-left: 2ch;
}

/**
 * @define FlexEmbed
 */

/** @define FlexEmbed */

/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */

.FlexEmbed {
  display: block;
  overflow: hidden;
  position: relative;
}

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */

.FlexEmbed-ratio {
  display: block;
  padding-bottom: 100%;
  width: 100%;
}

/**
 * Modifier: 3:1 aspect ratio
 */

.FlexEmbed-ratio--3by1 {
  padding-bottom: 33.33333%;
}

/**
 * Modifier: 2:1 aspect ratio
 */

.FlexEmbed-ratio--2by1 {
  padding-bottom: 50%;
}

/**
 * Modifier: 16:9 aspect ratio
 */

.FlexEmbed-ratio--16by9 {
  padding-bottom: 56.25%;
}

/**
 * Modifier: 4:3 aspect ratio
 */

.FlexEmbed-ratio--4by3 {
  padding-bottom: 75%;
}

/**
 * Fit the content to the aspect ratio
 */

.FlexEmbed-content {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/**
 * Modifier: 4:5 aspect ratio
 *
 * Ideal for product imagery and thumbnails.
 */

.FlexEmbed-ratio--4by5 {
  padding-bottom: 125%;
}

/**
 * @define Folio
 */

.Folio {
  -webkit-column-gap: 1.728em;
          column-gap: 1.728em;
}

/* stylelint-disable plugin/selector-bem-pattern */

/**
 * Avoid breaking to a new column in the middle of a child element.
 *
 * 1. Technique for most browsers.
 * 2. Fallback technique for Firefox.
 */

.Folio--avoidBreaks > * {
  -webkit-column-break-inside: avoid;
          break-inside: avoid; /* 1 */
  page-break-inside: avoid; /* 2 */
}

/* stylelint-enable */

/**
 * @define Grid
 */

/** @define Grid */

/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.Grid {
  box-sizing: border-box;
  display: -webkit-box;
  display: flex; /* 1 */
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
          flex-flow: row wrap;
  margin: 0; /* 1 */
  padding: 0; /* 1 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  -webkit-box-pack: center;
          justify-content: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  -webkit-box-pack: end;
          justify-content: flex-end;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle {
  -webkit-box-align: center;
          align-items: center;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom {
  -webkit-box-align: end;
          align-items: flex-end;
}

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */

.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
          flex: 1 1 0%; /* 1 */
}

/**
 * Modifier: all cells match height of tallest cell in a row
 */

.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: flex;
}

/**
 * Modifier: gutters
 */

.Grid--withGutter {
  margin: 0 -11.52px;
  margin: 0 -0.72rem;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 11.52px;
  padding: 0 0.72rem;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */

.Grid-cell {
  box-sizing: inherit;
  flex-basis: 100%; /* 1 */
  min-width: 0; /* 2 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  margin: 0 auto;
}

/**
 * Modifier: gaps
 *
 * Works like Grid--withGutter, but with gaps all the way around adjacent cells
 * (not just left and right).
 */

.Grid--withGap {
  margin: -11.52px;
  margin: -0.72rem;
}

.Grid--withGap > .Grid-cell {
  padding: 11.52px;
  padding: 0.72rem;
}

/**
 * @define Icon
 */

/**
 * 1. Flow inline with text while retaining layout.
 * 2. Most SVG elements default to `fill="black"`. This is a friendlier
 *    default which inherits parent element text color.
 * 3. Size based on parent element font size.
 * 4. Treat icons more like text, don't constrain their width.
 * 5. Default to no stroke. When stroke-width is defined within an icon it
 *    will override this, and the currentColor definition (2) won't result in
 *    strokes being inadvertently visible.
 * 6. Prevent icons from unexpected 'warping' if within a flex container
 */

.Icon {
  display: inline-block; /* 1 */
  fill: currentColor; /* 2 */
  -webkit-box-flex: 0;
          flex: 0 0 auto; /* 6 */
  height: 1em; /* 3 */
  max-width: none; /* 4 */
  position: relative;
  stroke: currentColor; /* 2 */
  stroke-width: 0; /* 5 */
  width: 1em; /* 3 */
}

/**
 * Unfortunately there's no great vertical-align property for aligning with
 * the x-height of adjacent text. The issue becomes less prominent the larger
 * the text and/or icon, so this applies a small adjustment using the root
 * font-size (which won't scale with text).
 */

.Icon:not(.Icon--block) {
  top: -2px;
  top: -0.125rem;
  vertical-align: middle;
}

/**
 * Modifier: Block
 *
 * Most of this is handled on the core .Icon class via the :not() selector
 * above, but we might as well change the display type as well for convenience.
 */

.Icon--block {
  display: block;
}

/**
 * @define Input
 */

/**
 * 1. Reset default element appearance. Useful for overriding some rather
 *    opinionated styles in mobile browsers (inner shadows, etc.)
 * 2. Use block display and occupy full width to encourage large, tappable
 *    elements and alignment in form using some sort of grid.
 * 3. Normalize `line-height`. For `input`, it can't be changed from `normal` in
 *    Firefox 4+.
 * 4. Disable default focus styles (we'll apply our own later).
 * 5. In case this is used on an unexpected element (for example, a `<button>`),
 *    set a default text alignment.
 * 6. Transition non-geometric properties for visual delight.
 */

.Input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; /* 1 */
  background: #fff;
  border: 1px solid #2c2a29;
  border-radius: 0.125em;
  color: #2c2a29;
  display: block; /* 2 */
  font: inherit;
  line-height: normal; /* 3 */
  outline: 0; /* 4 */
  padding: 0.402em 0.579em;
  text-align: left; /* 5 */
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s; /* 6 */
  -webkit-transition-property: background-color, border-color, box-shadow, color;
  transition-property: background-color, border-color, box-shadow, color; /* 6 */
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1); /* 6 */
  width: 100%; /* 2 */
}

/**
 * For everything but textarea, set a minimum height. In some browsers, input
 * elements with certain types (such as "date") do not render at predictable
 * heights unless this is present.
 */

.Input:not(textarea) {
  min-height: 2.488em;
}

/**
 * For certain single-line, text-based input types without any additional
 * controls, use text indentation instead of padding so long values will carry
 * all the way to the nearest border.
 */

.Input[type="text"],
.Input[type="search"],
.Input[type="email"],
.Input[type="url"] {
  padding-left: 0;
  padding-right: 0;
  text-indent: 0.579em;
}

/**
 * The following element-specific tweaks violate our BEM guidelines, but I don't
 * believe they are any different on principle from the previous type-specific
 * adjustments.
 */

/* stylelint-disable plugin/selector-bem-pattern */

/**
 * Change cursor style when applied to elements that don't allow text input.
 */

select.Input:not(:disabled), button.Input:not(:disabled), a.Input:not(:disabled) {
  cursor: pointer;
}

/**
 * 1. Custom caret (dropdown) icon.
 * 2. Position icon (1).
 * 3. The icon's natural dimensions are in line with other compact icons,
 *    but a little big for a select input.
 */

select.Input:not(:disabled) {
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='26' height='26' viewBox='0 0 26 26' stroke='%232c2a29'%3E %3Cpolyline points='2,8 13,18 24,8' fill='none' stroke-linecap='round' stroke-linejoin='round' stroke-width='4'/%3E %3C/svg%3E"); /* 1 */
  background-position: right 0.579em center; /* 2 */
  background-repeat: no-repeat;
  background-size: 0.833em; /* 3 */
  padding-right: 2.158em;
}

/**
 * Restrict resizing of textarea to the y-axis to prevent breaking of layout
 * containers for this element.
 */

textarea.Input {
  resize: vertical;
}

/* stylelint-enable */

/**
 * States
 */

/**
 * 1. On focus, transition to a thicker border by changing the outline color.
 * 2. In some browsers, we need to repeat the outline override in this state
 *    in case the class is applied to a less common element (like a `<button>`).
 */

.Input:focus {
  box-shadow: inset 0 0 0 1px #2c2a29; /* 1 */
  outline: 0; /* 2 */
}

/**
 * Give non-editable inputs a more muted appearance.
 */

.Input:disabled,
.Input[readonly] {
  background-color: #eee;
}

.Input:disabled,
.Input[readonly]:not(:hover):not(:focus) {
  border-color: #63666a;
  color: rgb(128, 130, 133);
}

/**
 * Reinforce the disabled state with an appropriate cursor.
 */

.Input:disabled {
  cursor: not-allowed;
}

/**
 * Make placeholder text more visually distinct from an editable text value.
 */

.Input::-webkit-input-placeholder {
  color: rgb(128, 130, 133);
}

.Input:-ms-input-placeholder {
  color: rgb(128, 130, 133);
}

.Input::-ms-input-placeholder {
  color: rgb(128, 130, 133);
}

.Input::placeholder {
  color: rgb(128, 130, 133);
}

/**
 * Hide any expansion indicators in IE/Edge.
 */

.Input::-ms-expand {
  display: none;
}

/**
 * Hide spinner controls in numeric inputs
 *
 * Disabling stylelint because the use of a vendor prefix is necessary to
 * maintain desired appearance across browsers. Specifically, no spinners in
 * Firefox, and no inner shadows in iOS Safari.
 */

/* stylelint-disable property-no-vendor-prefix */

.Input[type="number"] {
  -moz-appearance: textfield
}

.Input[type="number"]::-webkit-inner-spin-button,
  .Input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
          appearance: none;
  margin: 0;
}

/* stylelint-enable */

/**
 * Modifier: Compact
 */

.Input--compact {
  padding-bottom: 0.335em;
  padding-top: 0.335em;
}

.Input--compact:not(textarea) {
  min-height: 1.728em;
}

/**
 * Modifier: Modest
 */

.Input--modest:not(:focus):not(:disabled):not([readonly]) {
  border-color: #eee;
}

/**
 * Modifier: Credit Card
 */

/**
 * 1. Default icon.
 * 2. Because we need the card height to account for padding and we need to
 *    make sure the card width is consistent with the right padding of the
 *    input, we enforce the size and aspect ratio a bit more aggressively than
 *    we normally would.
 */

.Input--creditCard {
  background-image: url("data:image/svg+xml,%3Csvg width='780' height='500' viewBox='0 0 780 500' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform='translate(0 -269)'%3E%3Crect y='269' width='780' height='500' rx='40' fill='%23393939'/%3E%3Crect x='48.71' y='422.58' width='110.32' height='99.679' rx='20.323' fill='%23FFF' fill-opacity='.75'/%3E%3Cpath d='m78.102 579.37v-3.795h-5.117v-11.27h-4.198l-0.402 11.27h-11.443l10.58-25.07-3.967-1.725-11.673 27.14v3.45h16.445v9.66h4.658v-9.66h5.117zm19.586-30.59c-4.025 0-7.878 1.38-11.213 4.6l2.588 2.933c2.645-2.473 5.002-3.68 8.395-3.68 4.197 0 7.532 2.357 7.532 6.727 0 4.773-3.737 6.958-7.532 6.958h-2.358l-0.575 3.795h3.335c4.658 0 8.223 1.84 8.223 7.532 0 4.945-3.278 8.108-8.855 8.108-3.22 0-6.555-1.323-8.798-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.133 5.233 8.165 0 13.742-5.175 13.742-12.018 0-6.152-4.37-9.372-9.027-9.717 4.197-0.805 7.762-4.428 7.762-9.2 0-5.405-4.715-9.948-12.132-9.948zm34.477 0c-5.347 0-8.912 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.658-4.198 8.568-4.198 4.427 0 7.072 2.76 7.072 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91h23.518l0.575-4.082h-18.63c13.052-11.903 17.71-17.825 17.71-25.07 0-6.325-4.428-11.098-11.903-11.098zm48.738 36.34h-8.28v-35.65h-4.198l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.828v-3.91zm69.587-5.75v-3.795h-5.117v-11.27h-4.198l-0.402 11.27h-11.443l10.58-25.07-3.967-1.725-11.673 27.14v3.45h16.445v9.66h4.658v-9.66h5.117zm19.585-30.59c-4.025 0-7.877 1.38-11.212 4.6l2.587 2.933c2.645-2.473 5.003-3.68 8.395-3.68 4.198 0 7.533 2.357 7.533 6.727 0 4.773-3.738 6.958-7.533 6.958h-2.357l-0.575 3.795h3.335c4.657 0 8.222 1.84 8.222 7.532 0 4.945-3.277 8.108-8.855 8.108-3.22 0-6.555-1.323-8.797-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.132 5.233 8.165 0 13.743-5.175 13.743-12.018 0-6.152-4.37-9.372-9.028-9.717 4.198-0.805 7.763-4.428 7.763-9.2 0-5.405-4.715-9.948-12.133-9.948zm34.478 0c-5.348 0-8.913 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.657-4.198 8.567-4.198 4.428 0 7.073 2.76 7.073 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91h23.517l0.575-4.082h-18.63c13.053-11.903 17.71-17.825 17.71-25.07 0-6.325-4.427-11.098-11.902-11.098zm48.737 36.34h-8.28v-35.65h-4.197l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.827v-3.91zm69.588-5.75v-3.795h-5.118v-11.27h-4.197l-0.403 11.27h-11.442l10.58-25.07-3.968-1.725-11.672 27.14v3.45h16.445v9.66h4.657v-9.66h5.118zm19.585-30.59c-4.025 0-7.878 1.38-11.213 4.6l2.588 2.933c2.645-2.473 5.002-3.68 8.395-3.68 4.197 0 7.532 2.357 7.532 6.727 0 4.773-3.737 6.958-7.532 6.958h-2.358l-0.575 3.795h3.335c4.658 0 8.223 1.84 8.223 7.532 0 4.945-3.278 8.108-8.855 8.108-3.22 0-6.555-1.323-8.798-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.133 5.233 8.165 0 13.742-5.175 13.742-12.018 0-6.152-4.37-9.372-9.027-9.717 4.197-0.805 7.762-4.428 7.762-9.2 0-5.405-4.715-9.948-12.132-9.948zm34.477 0c-5.347 0-8.912 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.658-4.198 8.568-4.198 4.427 0 7.072 2.76 7.072 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91h23.518l0.575-4.082h-18.63c13.052-11.903 17.71-17.825 17.71-25.07 0-6.325-4.428-11.098-11.903-11.098zm48.738 36.34h-8.28v-35.65h-4.198l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.828v-3.91zm69.588-5.75v-3.795h-5.118v-11.27h-4.197l-0.403 11.27h-11.442l10.58-25.07-3.968-1.725-11.672 27.14v3.45h16.445v9.66h4.657v-9.66h5.118zm19.584-30.59c-4.024 0-7.877 1.38-11.212 4.6l2.588 2.933c2.645-2.473 5.002-3.68 8.395-3.68 4.197 0 7.532 2.357 7.532 6.727 0 4.773-3.737 6.958-7.532 6.958h-2.358l-0.575 3.795h3.335c4.658 0 8.223 1.84 8.223 7.532 0 4.945-3.278 8.108-8.855 8.108-3.22 0-6.555-1.323-8.798-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.133 5.233 8.165 0 13.742-5.175 13.742-12.018 0-6.152-4.37-9.372-9.027-9.717 4.197-0.805 7.762-4.428 7.762-9.2 0-5.405-4.715-9.948-12.132-9.948zm34.478 0c-5.347 0-8.912 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.658-4.198 8.568-4.198 4.427 0 7.072 2.76 7.072 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91h23.518l0.575-4.082h-18.63c13.052-11.903 17.71-17.825 17.71-25.07 0-6.325-4.428-11.098-11.903-11.098zm48.738 36.34h-8.28v-35.65h-4.198l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.828v-3.91z' fill='%23FFF'/%3E%3Cpath d='M55.607 684.42h6.445v-22.245l-7.012 1.406v-3.594l6.973-1.406h3.945v25.84h6.446v3.32H55.607zM81.075 684.42h6.446v-22.245l-7.012 1.406v-3.594l6.973-1.406h3.945v25.84h6.445v3.32H81.075zM121.993 684.42h13.77v3.321h-18.516v-3.32a762.619 762.619 0 0 1 6.114-6.23c2.59-2.618 4.218-4.304 4.882-5.06 1.263-1.418 2.142-2.616 2.637-3.593.508-.99.762-1.96.762-2.91 0-1.55-.547-2.813-1.64-3.79-1.082-.976-2.494-1.464-4.24-1.464-1.236 0-2.545.215-3.925.645-1.367.43-2.832 1.08-4.394 1.953v-3.985c1.588-.638 3.073-1.12 4.453-1.445 1.38-.326 2.643-.488 3.789-.488 3.02 0 5.43.755 7.226 2.265 1.797 1.51 2.696 3.529 2.696 6.055a8.707 8.707 0 0 1-.684 3.418c-.443 1.068-1.256 2.33-2.441 3.789-.326.378-1.361 1.471-3.106 3.281a2473.283 2473.283 0 0 1-7.383 7.559zM156.017 672.019c1.888.403 3.36 1.243 4.414 2.52 1.068 1.275 1.601 2.85 1.601 4.726 0 2.877-.99 5.104-2.968 6.68-1.98 1.575-4.792 2.363-8.438 2.363-1.224 0-2.487-.124-3.789-.372a26.623 26.623 0 0 1-4.004-1.074v-3.808a13.669 13.669 0 0 0 3.594 1.445 16.77 16.77 0 0 0 4.082.488c2.474 0 4.355-.488 5.645-1.465 1.302-.976 1.953-2.395 1.953-4.257 0-1.72-.606-3.06-1.817-4.024-1.198-.976-2.87-1.465-5.02-1.465h-3.398v-3.242h3.555c1.94 0 3.424-.384 4.453-1.152 1.029-.781 1.543-1.901 1.543-3.36 0-1.497-.534-2.643-1.601-3.437-1.055-.807-2.572-1.211-4.551-1.211-1.081 0-2.24.117-3.477.352-1.237.234-2.597.599-4.082 1.093v-3.515a38.347 38.347 0 0 1 4.2-.938 23.777 23.777 0 0 1 3.71-.312c2.995 0 5.365.683 7.11 2.05 1.744 1.355 2.617 3.19 2.617 5.508 0 1.615-.462 2.982-1.387 4.102-.924 1.107-2.24 1.875-3.945 2.305zM182.306 658.581h15.488v3.32H185.92v7.149a10.371 10.371 0 0 1 1.719-.43 9.59 9.59 0 0 1 1.719-.156c3.255 0 5.833.892 7.734 2.676 1.901 1.783 2.852 4.199 2.852 7.246 0 3.138-.977 5.58-2.93 7.324-1.953 1.732-4.707 2.598-8.262 2.598-1.224 0-2.474-.105-3.75-.313a29.94 29.94 0 0 1-3.926-.937v-3.965a15.373 15.373 0 0 0 3.633 1.426c1.25.312 2.572.468 3.965.468 2.253 0 4.037-.592 5.352-1.777 1.315-1.185 1.972-2.793 1.972-4.824 0-2.032-.657-3.64-1.972-4.825-1.315-1.184-3.1-1.777-5.352-1.777-1.055 0-2.11.117-3.164.352a16.66 16.66 0 0 0-3.203 1.093v-14.648zM216.173 673.894c-1.875 0-3.353.5-4.434 1.503-1.067 1.003-1.601 2.383-1.601 4.141s.534 3.138 1.601 4.14c1.081 1.003 2.56 1.505 4.434 1.505 1.875 0 3.353-.502 4.434-1.504 1.08-1.016 1.62-2.396 1.62-4.14 0-1.759-.54-3.139-1.62-4.142-1.068-1.002-2.546-1.503-4.434-1.503zm-3.945-1.68c-1.693-.417-3.015-1.205-3.965-2.363-.938-1.16-1.406-2.572-1.406-4.239 0-2.33.827-4.173 2.48-5.527 1.667-1.354 3.945-2.031 6.836-2.031 2.904 0 5.182.677 6.836 2.03 1.654 1.355 2.48 3.198 2.48 5.528 0 1.667-.475 3.08-1.425 4.239-.938 1.158-2.246 1.946-3.926 2.363 1.901.443 3.379 1.308 4.434 2.597 1.067 1.29 1.601 2.865 1.601 4.727 0 2.826-.866 4.994-2.598 6.504-1.718 1.51-4.186 2.266-7.402 2.266s-5.69-.756-7.422-2.266c-1.719-1.51-2.578-3.678-2.578-6.504 0-1.862.534-3.437 1.602-4.727 1.067-1.289 2.552-2.154 4.453-2.597zm-1.446-6.23c0 1.51.47 2.688 1.407 3.535.95.846 2.278 1.27 3.984 1.27 1.693 0 3.014-.424 3.965-1.27.963-.847 1.445-2.025 1.445-3.536 0-1.51-.482-2.688-1.445-3.535-.95-.846-2.272-1.27-3.965-1.27-1.706 0-3.034.424-3.984 1.27-.938.847-1.407 2.025-1.407 3.535z' fill='%23FFF' fill-opacity='.76'/%3E%3Cpath d='M308.836 683.453h6.445v-22.246l-7.011 1.406v-3.593l6.972-1.407h3.946v25.84h6.445v3.32h-16.797zM345.574 671.05c1.888.404 3.36 1.244 4.415 2.52 1.067 1.276 1.601 2.852 1.601 4.727 0 2.877-.99 5.104-2.969 6.68-1.979 1.575-4.791 2.363-8.437 2.363-1.224 0-2.487-.124-3.79-.371a26.623 26.623 0 0 1-4.003-1.074v-3.81a13.669 13.669 0 0 0 3.594 1.446 16.77 16.77 0 0 0 4.082.489c2.474 0 4.355-.489 5.644-1.465 1.302-.977 1.953-2.396 1.953-4.258 0-1.719-.605-3.06-1.816-4.024-1.198-.976-2.871-1.464-5.02-1.464h-3.398v-3.243h3.555c1.94 0 3.424-.384 4.453-1.152 1.028-.781 1.543-1.901 1.543-3.36 0-1.497-.534-2.643-1.602-3.437-1.055-.807-2.571-1.21-4.55-1.21-1.081 0-2.24.116-3.477.35-1.237.235-2.598.6-4.082 1.095v-3.516a38.348 38.348 0 0 1 4.199-.938 23.777 23.777 0 0 1 3.71-.312c2.996 0 5.366.684 7.11 2.05 1.745 1.355 2.617 3.19 2.617 5.509 0 1.614-.462 2.981-1.386 4.101-.925 1.107-2.24 1.875-3.946 2.305zM362.489 683.453h13.77v3.32h-18.517v-3.32a762.755 762.755 0 0 1 6.114-6.23c2.59-2.618 4.218-4.304 4.883-5.059 1.263-1.42 2.141-2.617 2.636-3.594.508-.99.762-1.96.762-2.91 0-1.55-.547-2.812-1.64-3.789-1.081-.976-2.494-1.465-4.239-1.465-1.237 0-2.546.215-3.926.645-1.367.43-2.832 1.08-4.394 1.953v-3.984c1.588-.638 3.073-1.12 4.453-1.446 1.38-.325 2.643-.488 3.789-.488 3.02 0 5.43.755 7.226 2.266 1.797 1.51 2.696 3.528 2.696 6.054a8.707 8.707 0 0 1-.684 3.418c-.442 1.068-1.256 2.33-2.441 3.79-.326.377-1.36 1.47-3.106 3.28a2474.291 2474.291 0 0 1-7.382 7.56zM385.242 683.453h6.446v-22.246l-7.012 1.406v-3.593l6.973-1.407h3.945v25.84h6.445v3.32h-16.797zM434.715 671.05c1.888.404 3.36 1.244 4.414 2.52 1.068 1.276 1.602 2.852 1.602 4.727 0 2.877-.99 5.104-2.969 6.68-1.98 1.575-4.792 2.363-8.438 2.363-1.223 0-2.487-.124-3.789-.371a26.623 26.623 0 0 1-4.004-1.074v-3.81a13.669 13.669 0 0 0 3.594 1.446 16.77 16.77 0 0 0 4.082.489c2.474 0 4.356-.489 5.645-1.465 1.302-.977 1.953-2.396 1.953-4.258 0-1.719-.606-3.06-1.816-4.024-1.198-.976-2.872-1.464-5.02-1.464h-3.398v-3.243h3.554c1.94 0 3.425-.384 4.453-1.152 1.029-.781 1.543-1.901 1.543-3.36 0-1.497-.534-2.643-1.601-3.437-1.055-.807-2.572-1.21-4.551-1.21-1.08 0-2.24.116-3.477.35-1.237.235-2.597.6-4.082 1.095v-3.516a38.347 38.347 0 0 1 4.2-.938 23.777 23.777 0 0 1 3.71-.312c2.995 0 5.365.684 7.11 2.05 1.745 1.355 2.617 3.19 2.617 5.509 0 1.614-.462 2.981-1.387 4.101-.924 1.107-2.24 1.875-3.945 2.305zM459.07 661.05l-9.96 15.567h9.96v-15.566zm-1.035-3.437h4.961v19.004h4.16v3.281h-4.16v6.875h-3.925v-6.875h-13.165v-3.808l12.13-18.477zM473.739 657.613h15.488v3.32h-11.875v7.149a10.37 10.37 0 0 1 1.719-.43 9.59 9.59 0 0 1 1.718-.156c3.256 0 5.834.892 7.735 2.676 1.9 1.784 2.851 4.2 2.851 7.246 0 3.138-.976 5.58-2.93 7.324-1.953 1.732-4.706 2.598-8.261 2.598-1.224 0-2.474-.104-3.75-.313a29.94 29.94 0 0 1-3.926-.937v-3.965a15.373 15.373 0 0 0 3.633 1.426c1.25.312 2.571.469 3.965.469 2.252 0 4.036-.593 5.351-1.778 1.315-1.185 1.973-2.793 1.973-4.824 0-2.031-.658-3.64-1.973-4.824-1.315-1.185-3.099-1.778-5.351-1.778-1.055 0-2.11.118-3.164.352a16.66 16.66 0 0 0-3.203 1.094v-14.649zM499.207 657.613h15.489v3.32H502.82v7.149a10.37 10.37 0 0 1 1.718-.43 9.59 9.59 0 0 1 1.72-.156c3.254 0 5.832.892 7.733 2.676 1.901 1.784 2.852 4.2 2.852 7.246 0 3.138-.977 5.58-2.93 7.324-1.953 1.732-4.707 2.598-8.261 2.598-1.224 0-2.474-.104-3.75-.313a29.94 29.94 0 0 1-3.926-.937v-3.965a15.373 15.373 0 0 0 3.633 1.426c1.25.312 2.571.469 3.964.469 2.253 0 4.037-.593 5.352-1.778 1.315-1.185 1.973-2.793 1.973-4.824 0-2.031-.658-3.64-1.973-4.824-1.315-1.185-3.099-1.778-5.352-1.778-1.054 0-2.109.118-3.164.352a16.66 16.66 0 0 0-3.203 1.094v-14.649z' fill='%23FFF' fill-opacity='.784'/%3E%3C/g%3E%3C/svg%3E%0A");
  background-position: right 0.579em center;
  background-repeat: no-repeat;
  background-size: 2.0748em 1.33em; /* 2 */
}

/**
 * Make sure there's enough padding for the image so the input value doesn't
 * overlap the card image. We do this in a separate selector to make sure we
 * override all right padding values (CSS specificity is a bear).
 */

.Input--creditCard,
.Input--creditCard[type="text"],
.Input--creditCard[type="search"],
.Input--creditCard[type="email"],
.Input--creditCard[type="url"] {
  padding-right: 3.2328em;
}

/**
 * Supported credit card values
 *
 * Please match the format of possible `type` values of the `credit-card-type`
 * module when adding more. This will make the pattern easy to integrate with
 * client-side validation.
 *
 * @see https://github.com/braintree/credit-card-type#api
 */

.Input--creditCard[data-credit-card-type="american-express"] {
  background-image: url("/cms/icons/c4/payment/amex.svg");
}

.Input--creditCard[data-credit-card-type="discover"] {
  background-image: url("/cms/icons/c4/payment/discover.svg");
}

.Input--creditCard[data-credit-card-type="master-card"] {
  background-image: url("/cms/icons/c4/payment/mastercard.svg");
}

.Input--creditCard[data-credit-card-type="visa"] {
  background-image: url("/cms/icons/c4/payment/visa.svg");
}

/**
 * Modifier: Dark backgrounds
 *
 * Allows light input BG to show through, which makes it stand out better on
 * darker backgrounds.
 */

.Input--onDark,
.Input--onDark:disabled,
.Input--onDark[readonly],
.Input--onDark[readonly]:not(:hover):not(:focus) {
  border-color: transparent;
}

/**
 * Validation states
 *
 * Only applying a style to the :invalid pseudoclass as all non-required inputs
 * qualify as :valid.
 *
 * We negate the `ng-pristine` class from some selectors to improve the initial
 * visual state in Angular applications.
 *
 * @see https://getbootstrap.com/docs/4.0/components/forms/#how-it-works
 */

.Input:invalid:not(.ng-pristine),
.Input.is-invalid {
  border-color: #d73043;
}

.Input:invalid:focus:not(.ng-pristine),
.Input.is-invalid:focus {
  box-shadow: inset 0 0 0 1px #d73043;
}

.Input.is-valid {
  border-color: #8ec549;
}

.Input.is-valid:focus {
  box-shadow: inset 0 0 0 1px #8ec549;
}

/**
 * @define InputDecoration
 */

/**
 * Allow label and/or controls to position themselves relative to the containing
 * element, visually overlaying the input.
 */

.InputDecoration {
  position: relative;
}

/**
 * The input should occupy the full element width so sizing is managed on the
 * container. This simplifies layout adjustments by focusing them on just the
 * parent.
 */

.InputDecoration-input {
  display: block;
  width: 100%;
}

/**
 * When there is a left control present, add padding to avoid the text flowing
 * underneath and disable any conflicting text-indent.
 */

.InputDecoration--withLeftControl .InputDecoration-input,
.InputDecoration--withSideControls .InputDecoration-input {
  padding-left: 2.488em;
  text-indent: 0;
}

/**
 * For right-hand controls, only the padding adjustment is needed.
 */

.InputDecoration--withRightControl .InputDecoration-input,
.InputDecoration--withSideControls .InputDecoration-input {
  padding-right: 2.488em;
}

/**
 * When both controls are present, change the default text alignment of the
 * input to balance the value between both.
 */

.InputDecoration--withLeftControl.InputDecoration--withRightControl .InputDecoration-input,
.InputDecoration--withSideControls .InputDecoration-input {
  text-align: center;
}

/**
 * Labels mimic placeholder text in appearance. This is more accessible than
 * using a placeholder as a label.
 *
 * 1. Occupy full height and center visually.
 * 2. Apply an invisible border. This makes the layout of the label more
 *    consistent with the input element.
 * 3. We want this to behave similarly to placeholders. For some browsers, the
 *    best way to do this is to mimic the cursor style and count on accurate
 *    `for` attributes being set. For others, `pointer-events` disables the
 *    label acting as a mouse/touch target in and of itself.
 * 4. Push away from left to mimic input text-indent or padding.
 * 5. Same as Input.
 * 6. Prevent from exceeding the element width.
 */

.InputDecoration-label {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  border: 1px solid transparent; /* 2 */
  color: rgb(128, 130, 133);
  cursor: text; /* 3 */
  display: -webkit-box;
  display: flex; /* 1 */
  height: 100%; /* 1 */
  left: 0.579em; /* 4 */
  line-height: normal; /* 5 */
  max-width: 100%; /* 6 */
  overflow: hidden; /* 6 */
  pointer-events: none; /* 3 */
  position: absolute;
  top: 0;
}

/**
 * Unless we've used JavaScript to verify that the input is indeed empty, we
 * don't want to show the label. But we want to retain its availability to
 * assistive technology like screen readers, so we hide it using the same
 * method as the `u-hiddenVisually` utility class.
 *
 * @see https://github.com/suitcss/utils-display
 */

.InputDecoration:not(.is-empty) .InputDecoration-label {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

/**
 * Iconographic controls.
 *
 * 1. Center icon visually within the element.
 * 2. Reset some possible default element styles.
 * 3. Controls should have a more interactive pointer style.
 * 4. Don't allow text selection because it looks funky.
 */

.InputDecoration-control {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  background: transparent; /* 2 */
  border: 1px solid transparent;
  border-radius: 0.125em;
  color: #2c2a29;
  cursor: pointer; /* 3 */
  display: -webkit-box;
  display: flex; /* 1 */
  font: inherit; /* 2 */
  height: 100%;
  -webkit-box-pack: center;
          justify-content: center; /* 1 */
  line-height: normal; /* 2 */
  margin: 0; /* 2 */
  padding: 0; /* 2 */
  position: absolute;
  right: 0;
  top: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 4 */
  width: 2.488em;
}

/**
 * On focus, mimic the outline style of Input elements instead of default
 * button focus rings.
 */

.InputDecoration-control:focus {
  border-color: currentColor;
  box-shadow: inset 0 0 0 1px currentColor;
  outline: 0;
}

/**
 * When dark BG modifier is applied, mimic the focus style of `Input--onDark`
 */

.InputDecoration--onDark .InputDecoration-control:focus {
  border-color: transparent;
}

/**
 * When disabled, change the cursor style and mimic an `Input` element's
 * disabled text color.
 */

.InputDecoration-control:disabled,
.InputDecoration-control.is-disabled {
  color: rgb(128, 130, 133);
  cursor: not-allowed;
}

/**
 * Modifier: Left-aligned control
 */

.InputDecoration-control--left {
  left: 0;
  right: auto;
}

/**
 * @define InputGroup
 */

/**
 * Arrange all child elements into a single row. Also stretches those elements
 * vertically by default, which makes them look even more "joined."
 */

.InputGroup {
  display: -webkit-box;
  display: flex; /* 1 */
}

/**
 * 1. Allows us to manage these elements' z-index later, which will be helpful
 *    for interaction states.
 * 2. Have everything start at its natural width. This establishes a common
 *    starting point, we'll ask certain elements to stretch later.
 */

.InputGroup-input,
.InputGroup-control {
  position: relative;
  width: auto;
}

/**
 * Some elements may have focus states, and because they overlap slightly they
 * may look strange unless we make sure the element with focus is on top of its
 * sibling elements.
 */

.InputGroup-input:focus,
.InputGroup-control:focus {
  z-index: 1;
}

/**
 * 1. If this item isn't the first, remove its left rounded corners (if any) to
 *    make it continue seamlessly into whatever element precedes it.
 * 2. Overlap this element as well so any vertical borders don't "double up" in
 *    a way that will draw the eye compared to the outer border.
 */

.InputGroup-input:not(:first-child),
.InputGroup-control:not(:first-child) {
  border-bottom-left-radius: 0; /* 1 */
  border-top-left-radius: 0; /* 1 */
  margin-left: -1px; /* 2 */
}

/**
 * Omit right rounded corners from all but the last element, again to avoid
 * unsightly double borders.
 */

.InputGroup-input:not(:last-child),
.InputGroup-control:not(:last-child) {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

/**
 * 1. Elements allowing text input should grow to fill empty space, giving the
 *    user as much room as possible to type.
 * 2. But because these are the "stretchiest" elements, we also need them to
 *    shrink. We can't do that unless there's no min-width, which some browsers
 *    set by default.
 */

.InputGroup-input {
  -webkit-box-flex: 1;
          flex: 1 1 100%; /* 1 */
  min-width: 0; /* 2 */
}

/**
 * Controls do not stretch, but retain their natural size.
 */

.InputGroup-control {
  -webkit-box-flex: 0;
          flex: 0 0 auto;
}

/**
 * @define Label
 */

/**
 * Label
 *
 * 1. Allows labels to exist inline with other content.
 */

.Label {
  background-color: #d73043;
  border-radius: 0.1875em;
  color: #fff;
  display: inline-block; /* 1 */
  font-size: 0.694em;
  font-weight: 500;
  letter-spacing: 0.05556em;
  padding: 0.335em 0.694em;
}

/**
 * @define StarRating
 */

.StarRating,
.StarRating-fill {
  background-position: left;
  background-repeat: no-repeat;
  background-size: auto 100%;
}

.StarRating {
  background-image: url("/cms/icons/c4/stars/stars.svg");
  display: inline-block;
  height: 1em;
  position: relative;
  width: 5em;
}

.StarRating-fill {
  background-image: url("/cms/icons/c4/stars/stars-fill.svg");
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/**
 * @define Swatch
 */

/**
 * 1. Flow inline with other content by default so this will behave predictably
 *    in new contexts.
 * 2. Prevent from overflowing container. This makes it a bit easier to use in
 *    flexible elements.
 * 3. Allow child elements to position themselves absolutely relative to this
 *    container.
 * 4. Align with other inline elements along the middle, which makes it more
 *    likely that any inset text will align well.
 * 5. Establish a default width, ideally in relative units (em) so its size can
 *    controlled via `font-size`.
 */

.Swatch {
  display: inline-block; /* 1 */
  max-width: 100%; /* 2 */
  position: relative; /* 3 */
  vertical-align: middle; /* 4 */
  width: 2.986em; /* 5 */
}

/**
 * We style this pseudo element to maintain a square aspect ratio regardless of
 * size, similar to the technique used by the SUIT CSS `FlexEmbed` component.
 *
 * @see http://alistapart.com/article/creating-intrinsic-ratios-for-video
 * @see https://github.com/suitcss/components-flex-embed
 */

.Swatch:before {
  content: "";
  display: block;
  padding-bottom: 100%;
  width: 100%;
}

/**
 * The `<input>` element that controls the state of its neighbors. We hide this
 * in a way that doesn't disable keyboard focus.
 *
 * 1. Certain browsers will cause this to impact layout on state change unless
 *    we specify a absolute position _and_ set a vertical position (since the
 *    padding adjustment is vertical). We also set it on the opposite axis just
 *    to be safe.
 * 2. Make invisible.
 * 3. Don't overlap adjacent elements.
 */

.Swatch-state {
  left: 0; /* 1 */
  opacity: 0; /* 2 */
  position: absolute; /* 1 */
  top: 0; /* 1 */
  z-index: -1; /* 3 */
}

/**
 * The actual visual indicator.
 *
 * 1. Center-align content therein on both axes.
 * 2. Fill the container.
 * 3. Prevent text from wrapping, which doesn't work well visually with the
 *    enforced square aspect ratio.
 */

.Swatch-indicator {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  background-color: #fff;
  border: 1px solid #bbb;
  border-radius: 0.1875em;
  color: #2c2a29;
  cursor: pointer;
  display: -webkit-box;
  display: flex; /* 1 */
  height: 100%; /* 2 */
  -webkit-box-pack: center;
          justify-content: center; /* 1 */
  left: 0; /* 2 */
  line-height: 1.2;
  overflow: hidden;
  position: absolute; /* 2 */
  top: 0; /* 2 */
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s;
  -webkit-transition-property: background-color, border-color, box-shadow;
  transition-property: background-color, border-color, box-shadow;
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
  white-space: nowrap; /* 3 */
  width: 100%; /* 2 */
}

/**
 * State: Hover/Focus
 *
 * 1. We use `box-shadow` to visually enlarge the border so it won't impact
 *    layout and will also be easier to differentiate from "checked" state for
 *    keyboard users.
 */

.Swatch:hover .Swatch-indicator,
.Swatch:focus .Swatch-indicator,
.Swatch-state:focus ~ .Swatch-indicator {
  border-color: #2c2a29;
  box-shadow: 0 0 0 1px #2c2a29; /* 1 */
}

/**
 * State: Checked
 */

.Swatch.is-checked .Swatch-indicator,
.Swatch-state:checked ~ .Swatch-indicator {
  background-color: #2c2a29;
  border-color: #2c2a29;
  color: #fff;
}

/**
 * When the swatch contains an object, make its container circular in shape...
 */

.Swatch--withObject .Swatch-indicator {
  border-radius: 50%;
}

/**
 * ...don't reset the background color when checked...
 */

.Swatch--withObject.is-checked .Swatch-indicator,
.Swatch--withObject .Swatch-state:checked ~ .Swatch-indicator {
  background-color: #fff;
}

/**
 * ...and display a check icon when checked. We do this via a pseudo element
 * so it will show on top of any visual object therein.
 *
 * 1. Show the checkmark icon with a shadow underneath to visually offset it
 *    from content below.
 * 2. Cap the size of the icon but allow the shadow to cover everything below.
 */

.Swatch--withObject.is-checked .Swatch-indicator:before,
.Swatch--withObject .Swatch-state:checked ~ .Swatch-indicator:before {
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='26' height='26' viewBox='0 0 26 26' stroke='%23fff'%3E %3Cpolyline points='2,13 9,20 24,5' stroke-width='4' fill='none'/%3E %3C/svg%3E"), -webkit-radial-gradient(rgba(44, 42, 41, 0.3), rgba(44, 42, 41, 0) 66.66667%);
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='26' height='26' viewBox='0 0 26 26' stroke='%23fff'%3E %3Cpolyline points='2,13 9,20 24,5' stroke-width='4' fill='none'/%3E %3C/svg%3E"), radial-gradient(rgba(44, 42, 41, 0.3), rgba(44, 42, 41, 0) 66.66667%); /* 1 */
  background-position: center;
  background-repeat: no-repeat;
  background-size: 1.44em, cover; /* 2 */
  content: "";
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/**
 * State: Disabled
 */

.Swatch.is-disabled .Swatch-indicator,
.Swatch-state:disabled ~ .Swatch-indicator {
  border-color: #eee;
  box-shadow: none;
  color: #ccc;
  cursor: not-allowed;
}

/**
 * Show a diagonal slash (\) over content when disabled.
 *
 * 1. Longer than 100% because otherwise it won't reach opposite corners when
 *    rotated.
 */

.Swatch.is-disabled .Swatch-indicator:after,
.Swatch-state:disabled ~ .Swatch-indicator:after {
  background-color: #bbb;
  box-shadow: 0 0 1em rgba(44, 42, 41, 0.3);
  content: "";
  height: 2px;
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%) rotate(45deg);
          transform: translate(-50%, -50%) rotate(45deg);
  -webkit-transform-origin: center;
          transform-origin: center;
  width: 150%; /* 1 */
}

/**
 * Visual objects as content.
 *
 * 1. Stretch to fill container.
 * 2. Where supported, avoid distorting the image.
 */

.Swatch-object {
  align-self: stretch; /* 1 */
  border: 2px solid transparent;
  border-radius: inherit;
  -o-object-fit: cover;
     object-fit: cover; /* 2 */
  width: 100%; /* 1 */
}

/**
 * @define SwatchList
 */

/**
 * Default behavior is a simple wrapping flex container.
 *
 * 1. Arrange items in a horizontal row.
 * 2. Allow items to wrap to new lines.
 * 3. Override default list appearance.
 * 4. Apply half of gap to allow elements to have even whitespace all the way
 *    around, with the inverse applied to the outside margin to promote
 *    alignment with the parent element.
 */

.SwatchList {
  display: -webkit-box;
  display: flex; /* 1, 2 */
  flex-wrap: wrap; /* 2 */
  list-style: none; /* 3 */
  margin: -0.347em; /* 4 */
  padding: 0.347em; /* 4 */
  position: relative; /* 4 */
}

/**
 * When grid is displayed, we change our technique.
 *
 * 1. Apply the gap and override our previous complicated way of accomplishing
 *    this spacing.
 * 2. Allow items to extend from a minimum size to available space, breaking
 *    onto new lines only when necessary.
 */

@supports (display: grid) {
  .SwatchList {
    display: grid;
    grid-gap: 0.694em; /* 1 */
    grid-template-columns: repeat(auto-fill, minmax(2.986em, 1fr)); /* 2 */
    margin: 0; /* 1 */
    padding: 0; /* 1 */
  }
}

/**
 * Apply half-gaps to child elements so they will have even spacing all the way
 * around.
 */

.SwatchList-item {
  margin: 0.347em;
}

/**
 * Undo these half-gaps in supported browsers, as `grid-gap` takes care of this
 * for us. 🎉
 */

@supports (display: grid) {
  .SwatchList-item {
    margin: 0;
  }
}

/**
 * In supported browsers, allow swatches to occupy the full width of the
 * container since we are controlling its size from the containing element.
 */

@supports (display: grid) {
  .SwatchList-swatch {
    width: 100%;
  }
}

/**
 * @define Table
 */

/**
 * Note: This class disables our selector rules more often than most. This is
 * because tables are particularly markup-heavy, so for usability of this class
 * the intent is to simplify its application and encourage semantic markup.
 */

/**
 * Tables aren't very responsive, but this at least makes them fill their
 * container as consistently as they can.
 */

.Table {
  max-width: 100%;
  width: 100%;
}

/**
 * Default cell styles
 *
 * 1. Our goal is for the cell contents to reach the edges of the table, so we
 *    apply half of the padding so it will add up to the intended number when
 *    the cells come together.
 */

.Table th,
.Table td {
  padding: 0.347em 0.6em; /* 1 */
  vertical-align: top;
}

/* stylelint-disable plugin/selector-bem-pattern */

.Table thead th {
  vertical-align: bottom;
}

/* stylelint-enable */

/**
 * First and last cells should have their far edge padding omitted so they touch
 * the container edges.
 *
 * If the table is striped so that row edges are more apparent, we do not make
 * this change.
 */

.Table:not(.Table--striped) th:first-child,
.Table:not(.Table--striped) td:first-child {
  padding-left: 0;
}

.Table:not(.Table--striped) th:last-child,
.Table:not(.Table--striped) td:last-child {
  padding-right: 0;
}

/**
 * The first and last rows should have extra padding so there's a visually even
 * amount of padding between sets of rows and row content.
 */

/* stylelint-disable plugin/selector-bem-pattern */

.Table tr:first-child th,
.Table tr:first-child td {
  padding-top: 0.694em;
}

.Table tr:last-child th,
.Table tr:last-child td {
  padding-bottom: 0.694em;
}

/* stylelint-enable */

/**
 * If a row is the first or last in the entire table, we omit its vertical
 * padding so its content reaches the edges of the table.
 */

/* stylelint-disable plugin/selector-bem-pattern */

.Table:not(.Table--ruled):not(.Table--striped) > thead:first-child > tr:first-child th,
.Table:not(.Table--ruled):not(.Table--striped) > tbody:first-child > tr:first-child th,
.Table:not(.Table--ruled):not(.Table--striped) > tfoot:first-child > tr:first-child th,
.Table:not(.Table--ruled):not(.Table--striped) > thead:first-child > tr:first-child td,
.Table:not(.Table--ruled):not(.Table--striped) > tbody:first-child > tr:first-child td,
.Table:not(.Table--ruled):not(.Table--striped) > tfoot:first-child > tr:first-child td,
.Table:not(.Table--ruled):not(.Table--striped) > tr:first-child th,
.Table:not(.Table--ruled):not(.Table--striped) > tr:first-child td {
  padding-top: 0;
}

.Table:not(.Table--ruled):not(.Table--striped) > thead:last-child > tr:last-child th,
.Table:not(.Table--ruled):not(.Table--striped) > tbody:last-child > tr:last-child th,
.Table:not(.Table--ruled):not(.Table--striped) > tfoot:last-child > tr:last-child th,
.Table:not(.Table--ruled):not(.Table--striped) > thead:last-child > tr:last-child td,
.Table:not(.Table--ruled):not(.Table--striped) > tbody:last-child > tr:last-child td,
.Table:not(.Table--ruled):not(.Table--striped) > tfoot:last-child > tr:last-child td,
.Table:not(.Table--ruled):not(.Table--striped) > tr:last-child th,
.Table:not(.Table--ruled):not(.Table--striped) > tr:last-child td {
  padding-bottom: 0;
}

/* stylelint-enable */

/**
 * Add dividers between adjacent sets
 */

.Table thead + thead,
.Table tbody + thead,
.Table tfoot + thead,
.Table thead + tbody,
.Table tbody + tbody,
.Table tfoot + tbody,
.Table thead + tfoot,
.Table tbody + tfoot,
.Table tfoot + tfoot {
  border-top: 1px solid #2c2a29;
}

/**
 * Style Modifiers
 */

/**
 * Ruled and striped tables both expose vertical edges of cells, so they must
 * have full vertical padding.
 */

.Table--ruled th,
.Table--ruled td,
.Table--striped th,
.Table--striped td {
  padding-bottom: 0.694em;
  padding-top: 0.694em;
}

/**
 * Ruled cells in the table body should have dividing borders.
 *
 * We apply this to the top and bottom edges in case the table does not have
 * a head or foot.
 */

/* stylelint-disable plugin/selector-bem-pattern */

.Table--ruled > tbody th,
.Table--ruled > tbody td,
.Table--ruled > tr th,
.Table--ruled > tr td {
  border-bottom: 1px solid #2c2a29;
}

/* stylelint-enable */

/**
 * To differentiate table sets from one another when rules are present, we
 * increase the size of the borders.
 */

.Table--ruled thead + thead,
.Table--ruled tbody + thead,
.Table--ruled tfoot + thead,
.Table--ruled thead + tbody,
.Table--ruled tbody + tbody,
.Table--ruled tfoot + tbody,
.Table--ruled thead + tfoot,
.Table--ruled tbody + tfoot,
.Table--ruled tfoot + tfoot {
  border-top-width: 2px;
}

/**
 * Striped cell backgrounds should alternate in color, but only in the body.
 */

/* stylelint-disable plugin/selector-bem-pattern */

.Table--striped > tbody tr:nth-child(even),
.Table--striped > tr:nth-child(even) {
  background: #eee;
}

/* stylelint-enable */

/**
 * @define Theme
 */

/**
 * 1. Default styles reinforce document defaults.
 * 2. Allow child elements to position themselves relative to this container.
 */

.Theme {
  background-color: #fff; /* 1 */
  color: #2c2a29; /* 1 */
  position: relative; /* 2 */
}

/**
 * Only links without a `class` attribute should be styled. This minimizes
 * specificity conflicts with other classes.
 */

.Theme :link:not([class]),.Theme :visited:not([class]) {
  color: #009ca6;
  text-decoration: none;
}

/**
 * Dark theme
 */

.Theme--dark {
  background-color: #2c2a29;
  color: #fff;
}

.Theme--dark :link:not([class]),.Theme--dark :visited:not([class]) {
  color: inherit;
  text-decoration: underline;
}

/**
 * LEO theme
 */

.Theme--leo :link:not([class]),.Theme--leo :visited:not([class]) {
  color: #2c2a29;
  text-decoration: underline;
}

.Theme--leo :link:hover,.Theme--leo :visited:hover {
  color: #009ca6;
}

/**
 * Optional "beauty mark" to visually offset
 */

.Theme--withBeautyMark:after {
  background: #d73043;
  content: "";
  height: 5.36px;
  height: 0.335rem;
  left: 50%;
  position: absolute;
  top: 0;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 23.04px;
  width: 1.44rem;
}

/**
 * @define Thumbnail
 */

/**
 * Thumbnail
 *
 * 1. Sets a styled border for all product thumbnails.
 * 2. Defines relative position which is required to allow labels to overlay
 *    thumbnail images.
 * 3. Transition the border color property if it changes, for example if a
 *    thumbnail enters or exits a current/selected state or the interactive
 *    modifier is applied.
 */

.Thumbnail {
  border: 1px solid #eee; /* 1 */
  box-shadow: 0 1px 2px rgba(44, 42, 41, 0.06); /* 1 */
  position: relative; /* 2 */
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s; /* 3 */
  -webkit-transition-property: border-color;
  transition-property: border-color; /* 3 */
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1); /* 3 */
}

/**
 * State: Current/Selected/Expanded
 */

.Thumbnail.is-current,
.Thumbnail[aria-expanded="true"] {
  border-color: #2c2a29;
}

/**
 * For this state, we use a pseudo element to apply an inset border. This
 * technique insures that there will be no impact on the computed box of the
 * image (or a change to its aspect ratio), with no visible "shifts" in the
 * image relative to its container.
 */

.Thumbnail.is-current:after,
.Thumbnail[aria-expanded="true"]:after {
  border: 2px solid #eee;
  content: "";
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/**
 * State: Loading
 *
 * Animates a "spinner" pseudo element. Not shown if also zooming.
 *
 * 1. Spin infinitely.
 * 2. Inject spinner into CSS so we don't introduce another asset load before
 *    communicating that assets are loading.
 * 3. Center within the thumbnail.
 * 4. Hack for forcing pseudo element visibility.
 * 5. Show on top of other elements within the parent.
 */

.Thumbnail.is-loading:not(.is-zoomed):before {
  -webkit-animation: spin 0.6s linear infinite;
          animation: spin 0.6s linear infinite; /* 1 */
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='26' height='26' viewBox='0 0 26 26' stroke='%232c2a29'%3E %3Cpath d='M13,2A11,11,0,1,0,24,13' fill='none' stroke-width='3'/%3E %3C/svg%3E"); /* 2 */
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  bottom: 0; /* 3 */
  content: ""; /* 4 */
  height: 27.648px;
  height: 1.728rem;
  left: 0; /* 3 */
  margin: auto; /* 3 */
  position: absolute; /* 3 */
  right: 0; /* 3 */
  top: 0; /* 3 */
  -webkit-transform-origin: center;
          transform-origin: center; /* 1 */
  width: 27.648px;
  width: 1.728rem;
  z-index: 1; /* 5 */
}

/**
 * Modifier: Interactive
 *
 * Adds interaction and selection states.
 */

.Thumbnail--interactive {
  cursor: pointer;
}

.Thumbnail--interactive:hover,
.Thumbnail--interactive:focus {
  border-color: #2c2a29;
}

/**
 * 1. Occupy all available space for thumbnail.
 * 2. Animate any opacity changes.
 */

.Thumbnail-object {
  display: block; /* 1 */
  height: auto; /* 1 */
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s; /* 2 */
  -webkit-transition-property: opacity;
  transition-property: opacity; /* 2 */
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1); /* 2 */
  width: 100%; /* 1 */
}

/**
 * When loading, lower the opacity of the current object. Only occurs when there
 * is no zoom.
 */

.Thumbnail.is-loading:not(.is-zoomed) .Thumbnail-object {
  opacity: 0.2;
}

/**
 * Overlap bottom-left
 *
 * 1. Absolute positioning an element inside its container.
 * 2. Sets z-index to ensure label is above thumbnail image.
 */

.Thumbnail-label {
  bottom: 1.2em; /* 1 */
  left: -0.579em; /* 1 */
  position: absolute; /* 1 */
  z-index: 1; /* 2 */
}

/**
 * @define Toggle
 */

/**
 * Containing element, typically a `<label>` to insure click and focus
 * interactions are maintained accurately.
 *
 * 1. Arrange child elements in a row but without occupying the full container
 *    width. This prevents accidental toggle clicks if the user clicks to the
 *    right of the label text.
 * 2. Allow elements within to position themselves absolutely. This makes the
 *    way we'll hide the actual `<input>` a bit less fragile.
 */

.Toggle {
  display: -webkit-inline-box;
  display: inline-flex; /* 1 */
  position: relative; /* 2 */
}

/**
 * The `<input>` element that controls the state of its neighbors. We hide this
 * in a way that doesn't disable keyboard focus.
 *
 * 1. Make invisible.
 * 2. Don't change the layout of surrounding elements.
 * 3. Don't overlap adjacent elements.
 */

.Toggle-state {
  opacity: 0; /* 1 */
  position: absolute; /* 2 */
  z-index: -1; /* 3 */
}

/**
 * The visible toggle element, what the user sees as the actual checkbox or
 * radio control.
 *
 * 1. Keep this element at its inherent size.
 * 2. We size this element based on its `font-size`, which allows the size to
 *    be easily customized using utilities later without having to override
 *    both width and height.
 * 3. We'll be using absolute positioning for the checked state, so this helps
 *    constrain that.
 */

.Toggle-indicator {
  background-color: #fff;
  border: 1px solid #2c2a29;
  cursor: pointer;
  -webkit-box-flex: 0;
          flex: 0 0 auto; /* 1 */
  font-size: 1.2em; /* 2 */
  height: 1em; /* 2 */
  position: relative; /* 3 */
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s;
  -webkit-transition-property: background-color, border-color, box-shadow;
  transition-property: background-color, border-color, box-shadow;
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
  width: 1em; /* 2 */
}

/**
 * States
 */

/**
 * Focus state
 *
 * Mimics an outline effect with box-shadow so `border-radius` is respected.
 * (Fun fact: This wouldn't be necessary if Mozilla's `outline-radius` were
 * adopted as a standard!)
 */

.Toggle-state:focus ~ .Toggle-indicator {
  box-shadow: 0 0 0 1px #2c2a29;
  outline: 0;
}

/**
 * Disabled state
 */

.Toggle-state:disabled ~ .Toggle-indicator {
  background-color: #eee;
  border-color: #63666a;
  cursor: not-allowed;
}

/**
 * Indicator "fills," for when checkboxes or radios are checked
 *
 * 1. Position background (if any) so that it is contained (not cropped),
 *    centered and not repeating on either axis.
 * 2. Position relative to indicator edges, with padding (if any).
 * 3. Animate in from these starting points.
 */

.Toggle-indicator:before {
  background-position: center; /* 1 */
  background-repeat: no-repeat; /* 1 */
  background-size: contain; /* 1 */
  border-radius: inherit;
  bottom: 3px; /* 2 */
  content: "";
  left: 3px; /* 2 */
  opacity: 0; /* 3 */
  position: absolute; /* 2 */
  right: 3px; /* 2 */
  top: 3px; /* 2 */
  -webkit-transform: scale(0);
          transform: scale(0); /* 3 */
  -webkit-transform-origin: center;
          transform-origin: center; /* 3 */
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s;
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: opacity, transform;
  transition-property: opacity, transform, -webkit-transform;
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
}

/**
 * Visible and full size when checked
 */

.Toggle-state:checked ~ .Toggle-indicator:before {
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}

/**
 * Checkbox indicator
 */

.Toggle-state[type="checkbox"]:checked ~ .Toggle-indicator {
  background-color: #2c2a29;
}

.Toggle-state[type="checkbox"]:checked:disabled ~ .Toggle-indicator {
  background-color: #63666a;
}

.Toggle-state[type="checkbox"] ~ .Toggle-indicator:before {
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='26' height='26' viewBox='0 0 26 26' stroke='%23fff'%3E %3Cpolyline points='2,13 9,20 24,5' stroke-width='4' fill='none'/%3E %3C/svg%3E");
}

/**
 * Radio indicator
 */

.Toggle-state[type="radio"] ~ .Toggle-indicator {
  border-radius: 50%;
}

.Toggle-state[type="radio"] ~ .Toggle-indicator:before {
  background-color: #2c2a29;
}

.Toggle-state[type="radio"]:disabled ~ .Toggle-indicator:before {
  background-color: #63666a;
}

/**
 * Adjacent label text
 */

.Toggle-text {
  cursor: pointer;
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s;
  -webkit-transition-property: opacity;
  transition-property: opacity;
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
}

.Toggle-state ~ .Toggle-text {
  margin-left: 0.402em;
}

.Toggle-state:disabled ~ .Toggle-text {
  cursor: not-allowed;
  opacity: 0.75;
}

/**
 * Validation states
 *
 * Only applying a style to the :invalid pseudoclass as all non-required inputs
 * qualify as :valid.
 *
 * @see: https://getbootstrap.com/docs/4.0/components/forms/#how-it-works
 */

.Toggle-state:invalid ~ .Toggle-indicator,
.Toggle-state.is-invalid ~ .Toggle-indicator {
  border-color: #d73043;
}

.Toggle-state:focus:invalid ~ .Toggle-indicator,
.Toggle-state.is-invalid:focus ~ .Toggle-indicator {
  box-shadow: 0 0 0 1px #d73043;
}

.Toggle-state[type="checkbox"]:checked:invalid ~ .Toggle-indicator,
.Toggle-state[type="checkbox"].is-invalid:checked ~ .Toggle-indicator,
.Toggle-state[type="radio"]:invalid ~ .Toggle-indicator:before,
.Toggle-state[type="radio"].is-invalid ~ .Toggle-indicator:before {
  background-color: #d73043;
}

.Toggle-state.is-valid ~ .Toggle-indicator {
  border-color: #8ec549;
}

.Toggle-state.is-valid:focus ~ .Toggle-indicator {
  box-shadow: 0 0 0 1px #8ec549;
}

.Toggle-state[type="checkbox"].is-valid:checked ~ .Toggle-indicator {
  background-color: #8ec549;
}

/**
 * @define Badge
 */

/**
 * Ensure that the parent element will allow the count to be positioned without
 * affecting its layout.
 */

.Badge {
  position: relative;
}

/**
 * The actual visible badge.
 *
 * 1. We clear any line-height, instead using vertical padding for vertical
 *    alignment. This technique is strange but was more consistent across
 *    different browsers for very small elements.
 * 2. We add a very small amount of padding in case the count exceeds the
 *    default width. This keeps the text from touching the edges.
 * 3. Position in the top right corner of the parent element.
 * 4. Finalize position with `transform`. We do this so that large counts will
 *    naturally compensate for their size rather than overlapping too much of
 *    the parent element content.
 * 5. Avoid unexpected text selection when count is within an interactive
 *    element, for example a button or link.
 */

.Badge-count {
  background-color: #3cdbc0;
  border-radius: 0.83334em;
  color: #2c2a29;
  font-size: 0.694em;
  font-weight: 700;
  height: 1.66667em;
  letter-spacing: -0.0625em;
  line-height: 0; /* 1 */
  min-width: 1.66667em;
  padding-left: 0.3125em; /* 2 */
  padding-right: 0.3125em; /* 2 */
  padding-top: 0.83334em; /* 1 */
  position: absolute; /* 3 */
  right: 0; /* 3 */
  text-align: center;
  top: 0; /* 3 */
  -webkit-transform: translate(33.33333%, -25%);
          transform: translate(33.33333%, -25%); /* 4 */
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 5 */
}

/**
 * @define Carousel
 */

/**
 * Carousel Image Properties
 *
 * It is very important that these are kept in sync with the dimensions of
 * carousel images!
 *
 * 1. Default aspect ratio of carousel images (1:1)
 * 2. Aspect ratio starting at the "medium" breakpoint (2:1)
 * 3. Aspect ratio starting at the "large" breakpoint (2.4:1)
 * 4. Maximum displayed width of carousel images
 */

:root { /* 1 */ /* 2 */ /* 3 */ /* 4 */
}

/**
 * Carousel Image Breakpoints
 *
 * These should match the `media` attribute used in "medium" and "large"
 * `<source>` elements in each slide!
 */

/**
 * Misc. Appearance Properties
 */

/**
 * The track is where the carousel will actually occur. We set the background
 * here so there won't be visible "seams" as slides transition.
 */

.Carousel-track {
  background: #fff;
}

/**
 * We use relative positioning on individual slides so we can position a spinner
 * within each one. This prevents loading indicators from covering slides that
 * have already loaded.
 */

.Carousel-slide {
  position: relative;
}

/**
 * If the Carousel JavaScript has not been initialized and the slide is not
 * the first, we should hide it so the user doesn't have to scroll past a stack
 * of slides.
 */

.Carousel:not(.is-initialized) .Carousel-slide:not(:first-child) {
  display: none;
}

/**
 * Loading Spinner
 *
 * Shown when slide is in a loading state.
 *
 * 1. Spin infinitely.
 * 2. Inject spinner into CSS so we don't introduce another asset load before
 *    communicating that assets are loading.
 * 3. Center within the thumbnail.
 * 4. Hack for forcing pseudo element visibility.
 */

.Carousel-slide.is-loading:before {
  -webkit-animation: spin 0.6s linear infinite;
          animation: spin 0.6s linear infinite; /* 1 */
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='26' height='26' viewBox='0 0 26 26' stroke='%232c2a29'%3E %3Cpath d='M13,2A11,11,0,1,0,24,13' fill='none' stroke-width='3'/%3E %3C/svg%3E"); /* 2 */
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  bottom: 0; /* 3 */
  content: ""; /* 4 */
  height: 27.648px;
  height: 1.728rem;
  left: 0; /* 3 */
  margin: auto; /* 3 */
  position: absolute; /* 3 */
  right: 0; /* 3 */
  top: 0; /* 3 */
  -webkit-transform-origin: center;
          transform-origin: center; /* 1 */
  width: 27.648px;
  width: 1.728rem;
}

/**
 * Banner
 *
 * This is the containing rectangle of a slide. Aspect ratio is maintained
 * from here. Frequently a link so that it can lead to a destination.
 *
 * 1. Fill available width up to max-width (3).
 * 2. Center horizontally.
 * 3. Limit the width based on available image sizes.
 * 4. Allow elements to position themselves absolutely relative to this. We'll
 *    use this later to enforce aspect ratio.
 * 5. We set up a transition on opacity so slides fade in when they finish
 *    loading.
 */

.Carousel-banner {
  display: block; /* 1 */
  margin: 0 auto; /* 2 */
  max-width: 1920px; /* 3 */
  position: relative; /* 4 */
  -webkit-transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1); /* 5 */
  width: 100%; /* 1 */
}

/**
 * Disable pointer events to avoid conflicts between swipe and click.
 *
 * @see https://github.com/pawelgrzybek/siema/issues/71
 */

/* stylelint-disable plugin/selector-bem-pattern */

.Carousel.is-initialized a.Carousel-banner > * {
  pointer-events: none;
}

/* stylelint-enable */

/**
 * Fade out slides that are loading
 */

.Carousel-slide.is-loading .Carousel-banner {
  opacity: 0;
}

/**
 * Enforce aspect ratios using the padding hack. We do not use Keith J. Grant's
 * technique because we want to enforce or cut off imagery that exceeds this
 * ratio.
 *
 * @see https://keithjgrant.com/posts/2017/03/aspect-ratios/
 */

.Carousel-banner:before {
  content: "";
  display: block;
  padding-bottom: 100%;
}

@media (min-width: 414px) {
  .Carousel-banner:before {
    padding-bottom: 100%;
  }
}

@media (min-width: 828px) {
  .Carousel-banner:before {
    padding-bottom: 35.71429%;
  }
}

/**
 * The element that fills the banner. Usually an image or a container.
 *
 * 1. Position to occupy all of containing element.
 * 2. If this is an image, fill available area rather than distorting.
 *
 * @see https://caniuse.com/#feat=object-fit
 */

.Carousel-bannerContent {
  height: 100%; /* 1 */
  left: 0; /* 1 */
  -o-object-fit: cover;
     object-fit: cover; /* 2 */
  position: absolute; /* 1 */
  top: 0; /* 1 */
  width: 100%; /* 1 */
}

/**
 * Navigation
 *
 * A containing element to help manage display and position of an optional
 * carousel navigation element below the track.
 *
 * Hidden until JS functionality is initialized. We avoid `display: none` so
 * its appearance won't cause a shift in layout.
 */

.Carousel:not(.is-initialized) .Carousel-nav {
  visibility: hidden;
}

/**
 * @define CarouselControl
 */

/**
 * 1. Display pages in a centered horizontal row.
 * 2. Allow pages to wrap.
 * 3. Override list default styles.
 * 4. Provide space around the pages so they won't run up against adjacent
 *    content. We use half the gap space so they'll have the same space around
 *    as they do in between.
 */

.CarouselControl {
  display: -webkit-box;
  display: flex; /* 1 */
  flex-wrap: wrap; /* 2 */
  -webkit-box-pack: center;
          justify-content: center; /* 1 */
  list-style: none; /* 3 */
  padding: 4.632px;
  padding: 0.2895rem; /* 3, 4 */
}

/**
 * The actual interactive elements, typically buttons.
 *
 * 1. Override browser defaults.
 * 2. Set an interactive cursor style to communicate hover state clearly.
 * 3. Apply half gaps as padding so buttons will be equal distances apart.
 */

.CarouselControl-action {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; /* 1 */
  background: transparent; /* 1 */
  border: 0; /* 1 */
  color: inherit; /* 1 */
  cursor: pointer; /* 2 */
  display: block; /* 1 */
  margin: 0; /* 1 */
  opacity: 0.25;
  padding: 4.632px;
  padding: 0.2895rem; /* 1, 3 */
  -webkit-transition: opacity 0.1s cubic-bezier(0.77, 0, 0.175, 1);
  transition: opacity 0.1s cubic-bezier(0.77, 0, 0.175, 1);
}

/**
 * Adjust opacity depending on state
 */

.CarouselControl-action.is-current,
.CarouselControl-action[aria-expanded="true"] {
  opacity: 0.75;
}

.CarouselControl-action:hover,
.CarouselControl-action:focus {
  opacity: 1;
}

/**
 * Remove browser default focus style, which we'll replace on the label element
 */

.CarouselControl-action:focus {
  outline: 0;
}

/**
 * Most of the appearance happens on the label. We do this so the buttons will
 * have a larger hit area.
 *
 * 1. Use parent text color as a fill, allowing easy customization.
 * 2. Force consistent layout and display.
 * 3. Hide inner text visually but not from assistive devices.
 */

.CarouselControl-label {
  background-color: currentColor; /* 1 */
  display: block; /* 2 */
  height: 7.712px;
  height: 0.482rem; /* 2 */
  overflow: hidden; /* 3 */
  text-indent: -999em; /* 3 */
  width: 57.328px;
  width: 3.583rem; /* 2 */
}

/**
 * On focus, add a small outline around the label to make it appear slightly
 * larger than before.
 */

.CarouselControl-action:focus .CarouselControl-label {
  outline: 1px solid currentColor;
}

/**
 * @define Collapsible
 */

.Collapsible.is-collapsed {
  display: none;
}

/**
 * @define GarmentIllustration
 */

/**
 * 1. Override default link colors.
 */

.GarmentIllustration {
  color: inherit; /* 1 */
  display: block;
  padding-bottom: 0.694em;
  padding-top: 0.694em;
  text-align: center;
}

/* Focus styles */

/**
 * 1. Removes default :focus style since we are transforming scale
 *    and color on :--enter.
 */

.GarmentIllustration:focus {
  outline: 0; /* 1 */
}

/**
 * 1. Centers origin for desired animation effect.
 * 2. Defines transform transition properties.
 */

.GarmentIllustration-item {
  -webkit-transform-origin: center;
          transform-origin: center; /* 1 */
  -webkit-transition-duration: 0.3s;
          transition-duration: 0.3s; /* 2 */
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform; /* 2 */
  -webkit-transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
          transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); /* 2 */
}

/* Hover Styles */

/**
 * 1. Increases scale of GarmentIllustration on :hover and :focus.
 */

.GarmentIllustration:hover .GarmentIllustration-item,
.GarmentIllustration:focus .GarmentIllustration-item {
  -webkit-transform: scale(1.1);
          transform: scale(1.1); /* 1 */
}

/**
 * 1. Sets our desired color for the item backdrop.
 * 2. Defines our desired opacity for the item backdrop.
 * 3. Centers origin for desired animation effect.
 * 4. Defines transform transition properties.
 */

.GarmentIllustration-backdrop {
  fill: #b4b5df; /* 1 */
  opacity: 0.25; /* 2 */
  -webkit-transform-origin: center;
          transform-origin: center; /* 3 */
  -webkit-transition: opacity 0.6s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.4s cubic-bezier(0.77, 0, 0.175, 1);
  transition: opacity 0.6s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.4s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.4s cubic-bezier(0.77, 0, 0.175, 1), opacity 0.6s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.4s cubic-bezier(0.77, 0, 0.175, 1), opacity 0.6s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.4s cubic-bezier(0.77, 0, 0.175, 1); /* 4 */
}

/**
 * 1. Lowers opacity of GarmentIllustration-backdrop on :hover and :focus
 * 2. Decreases scale of GarmentIllustration-backdrop on :hover and :focus.
 */

.GarmentIllustration:hover .GarmentIllustration-backdrop,
.GarmentIllustration:focus .GarmentIllustration-backdrop {
  opacity: 0.6; /* 1 */
  -webkit-transform: scale(0.9);
          transform: scale(0.9); /* 2 */
}

/* Active Style */

/**
 * 1. Lowers color alpha of GarmentIllustration-backdrop on :hover and :focus
 * 2. Decreases scale of GarmentIllustration-backdrop on :hover and :focus.
 */

.GarmentIllustration:active .GarmentIllustration-backdrop {
  opacity: 0.8; /* 1 */
  -webkit-transform: scale(0.85);
          transform: scale(0.85); /* 2 */
}

/**
 * Optional label element (below illustration)
 *
 * 1. Shift downward slightly so it won't appear as if the illustration has too
 *    much bottom whitespace with the label present.
 */

.GarmentIllustration-label {
  display: block;
  font-size: inherit;
  font-weight: 500;
  line-height: 1.2;
  margin-bottom: -0.694em; /* 1 */
  position: relative; /* 1 */
}

/**
 * @define Masthead
 */

/**
 * 1. Arrange children in a non-wrapping row.
 * 2. Cap the element height. This is important for maintaining alignment with
 *    adjacent elements, such as submenus and side menus.
 * 3. If there are multiple elements, add space in-between so they fill the
 *    entire bar.
 * 4. Also works as a lazy clearfix (just in case).
 * 5. Allow child elements to position themselves relative to this.
 */

.Masthead {
  display: -webkit-box;
  display: flex; /* 1 */
  height: 57.328px;
  height: 3.583rem; /* 2 */
  -webkit-box-pack: justify;
          justify-content: space-between; /* 3 */
  overflow: hidden; /* 2, 4 */
  position: relative; /* 5 */
}

/**
 * Dark Masthead
 */

.Masthead--dark {
  background-color: #2c2a29;
  color: #fff;
}

/**
 * Centered logo. Intended for use on a link.
 *
 * 1. Center child elements. Easier than having to adjust the display type of
 *    images or elements therein to avoid line-height bumps.
 * 2. Fill container height.
 * 3. Center horizontally.
 * 4. Establish a min and max for width so the logo can flex responsively.
 */

.Masthead-logo {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  display: -webkit-box;
  display: flex; /* 1 */
  height: 100%; /* 2 */
  -webkit-box-pack: center;
          justify-content: center; /* 1 */
  left: 0; /* 3 */
  margin: auto; /* 3 */
  max-width: 25%; /* 4 */
  position: absolute; /* 2, 3 */
  right: 0; /* 3 */
  top: 0; /* 2 */
  width: 132px;
  width: 8.25rem; /* 4 */
}

/**
 * Limit the logo object height. We handle this on the inner element so as not
 * to reduce the logo's click area, and also to work around some strangeness
 * when centering overflowing imagery in a flex container.
 */

.Masthead-logoObject {
  max-height: 55%;
}

/**
 * Container for groups of elements, actions or other content.
 *
 * 1. Arrange this content in a vertically-centered row.
 * 2. Override any list styles if this is a list.
 */

.Masthead-group {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  display: -webkit-box;
  display: flex; /* 1 */
  list-style: none; /* 2 */
  padding-left: 0; /* 2 */
}

/**
 * If a logo is present, cap the width of any groups so they won't collide.
 */

.Masthead-logo ~ .Masthead-group {
  max-width: 37.5%;
}

/**
 * The first group following a logo should have its order shifted earlier. This
 * fixes an IE11 bug where the first group did not align with flex-start.
 */

.Masthead-logo + .Masthead-group {
  -webkit-box-ordinal-group: 0;
          order: -1;
}

/**
 * Actions, typically buttons or links.
 *
 * 1. Mimic alignment of the component so far. The goal is for these to look
 *    like they're floating naturally in the bar, while extending their hit area
 *    to the element edges.
 * 2. Inherit and/or reset default styles to blend in more seamlessly.
 * 3. We set the height again on this element to encourage semantic markup,
 *    which may be too densely nested to consistently carry height through
 *    child elements via `align-items: stretch` or similar.
 * 4. Maintain horizontal hit areas and keep elements from running together.
 * 5. Prevent awkward text selection styles on click/tap.
 */

.Masthead-action {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  background: transparent; /* 2 */
  color: inherit; /* 2 */
  cursor: pointer;
  display: -webkit-box;
  display: flex; /* 1 */
  font: inherit; /* 2 */
  height: 57.328px;
  height: 3.583rem; /* 3 */
  line-height: normal; /* 2 */
  padding: 0 16px;
  padding: 0 1rem; /* 4 */
  -webkit-transition: color 0.1s cubic-bezier(0.77, 0, 0.175, 1);
  transition: color 0.1s cubic-bezier(0.77, 0, 0.175, 1);
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 5 */
}

/**
 * Change color on hover. This change felt too dramatic to also apply on focus,
 * where it would hang around on touch platforms.
 *
 * @todo Explore custom focus styles (if desired).
 */

.Masthead-action:hover:not(:active):not(:focus) {
  color: #009ca6;
}

/**
 * Modifies :hover color value for dark mastheads
 */

.Masthead--dark .Masthead-action:hover:not(:active):not(:focus) {
  color: #009ca6;
}

/**
 * @define MenuBar
 */

/**
 * Containing element.
 *
 * 1. Arrange items in a horizontal, non-wrapping row.
 * 2. Reset appearance if this is a list.
 * 3. Apply half-gap padding so actions will have equal gaps between, and the
 *    inverse amount of margin so element will meet the edges of its container,
 *    which simplifies layout.
 * 4. Respect negative margins.
 */

.MenuBar {
  display: -webkit-box;
  display: flex; /* 1 */
  list-style: none; /* 2 */
  margin-left: -19.2px;
  margin-left: -1.2rem; /* 3 */
  margin-right: -19.2px;
  margin-right: -1.2rem; /* 3 */
  padding-left: 9.6px;
  padding-left: 0.6rem; /* 2, 3 */
  padding-right: 9.6px;
  padding-right: 0.6rem; /* 3 */
  position: relative; /* 4 */
}

.MenuBar--dark {
  background-color: #2c2a29;
}

/**
 * Modifier: Spread elements to occupy all available width.
 */

.MenuBar--spread {
  -webkit-box-pack: justify;
          justify-content: space-between;
}

/**
 * Modifier: Fill or Tabs
 *
 * Either of these modifiers cause the action contents to be farther apart,
 * which removes the need to apply gaps in the same way. We remove the half-gap
 * steps for these cases to make them easier to style as blocks.
 */

.MenuBar--fill,
.MenuBar--tabs {
  margin-left: 0;
  margin-right: 0;
  padding-left: 0;
  padding-right: 0;
}

/**
 * In order to cause all elements to fill regardless of the bar structure, we
 * need to momentarily violate our selector guidelines.
 *
 * 1. Provide all Flex values to avoid shorthand-related bugs in IE, Safari.
 *    We specify 0% to avoid IE bug with unitless flex basis.
 */

/* stylelint-disable plugin/selector-bem-pattern */

.MenuBar--fill > * {
  -webkit-box-flex: 1;
          flex: 1 1 0%; /* 1 */
}

.MenuBar--tabs {
  background-color: #eee;
}

/* stylelint-enable */

/**
 * Action elements, typically links.
 *
 * 1. Center-align contents on both axes.
 * 2. Inherit color. This makes it easier to modify the default color without
 *    impacting color changes on interaction states.
 * 3. Set some sensible defaults in case this is a button or other less
 *    predictable element.
 * 4. Apply half-gap padding, which completes even gaps between adjacent
 *    siblings.
 * 5. This menu is not intended to wrap or exceed its set height, so we disable
 *    wrapping on its content as well.
 */

.MenuBar-action {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  color: inherit; /* 2 */
  cursor: pointer; /* 3 */
  display: -webkit-box;
  display: flex; /* 1 */
  font: inherit;
  font-weight: 500;
  height: 47.776px;
  height: 2.986rem;
  -webkit-box-pack: center;
          justify-content: center; /* 1 */
  line-height: 1.2;
  padding-left: 9.6px;
  padding-left: 0.6rem; /* 4 */
  padding-right: 9.6px;
  padding-right: 0.6rem; /* 4 */
  text-transform: uppercase;
  -webkit-transition: color 0.1s cubic-bezier(0.77, 0, 0.175, 1);
  transition: color 0.1s cubic-bezier(0.77, 0, 0.175, 1);
  white-space: nowrap; /* 5 */
  width: 100%; /* 3 */
}

.MenuBar--dark .MenuBar-action {
  color: #fff;
}

/**
 * State: Hover/focus/current/expanded
 */

.MenuBar-action:hover,
.MenuBar-action:focus,
.MenuBar-action.is-current,
.MenuBar-action[aria-expanded="true"] {
  color: #009ca6;
}

.MenuBar--leo .MenuBar-action:hover,
.MenuBar--leo .MenuBar-action:focus,
.MenuBar--leo .MenuBar-action.is-current,
.MenuBar--leo .MenuBar-action[aria-expanded="true"] {
  color: #009ca6;
}

/**
 * Modifier: Fill or Tabs
 *
 * In either case, the tabs are encased in fuller blocks and no longer need to
 * apply half-padding. To maintain a fair distance away from the container edge,
 * we apply the full gap to them.
 */

.MenuBar--fill .MenuBar-action,
.MenuBar--tabs .MenuBar-action {
  padding-left: 19.2px;
  padding-left: 1.2rem;
  padding-right: 19.2px;
  padding-right: 1.2rem;
}

.MenuBar--tabs .MenuBar-action {
  font-weight: 400;
  text-transform: inherit;
}

.MenuBar--tabs .MenuBar-action.is-current,
.MenuBar--tabs .MenuBar-action[aria-expanded="true"] {
  background-color: #fff;
  color: inherit;
}

/**
 * Optional inner element. Uses extra node to apply some more complex alternate
 * styles.
 *
 * 1. Apply invisible borders by default to both ends. This maintains even
 *    vertical positioning and minimizes subtle shifts on state change.
 * 2. Force element to enforce padding.
 * 3. Apply the same border width as padding to avoid the text running directly
 *    into it.
 */

.MenuBar-actionText {
  border-color: transparent; /* 1 */
  border-style: solid; /* 1 */
  border-width: 3px 0; /* 1 */
  display: block; /* 2 */
  font-weight: 400;
  padding: 3px 0; /* 3 */
}

/**
 * 1. Current action text should have visible underline.
 * 2. Current action text should retain default color, except on hover/focus.
 */

.MenuBar-action.is-current .MenuBar-actionText,
.MenuBar-action[aria-expanded="true"] .MenuBar-actionText {
  border-bottom-color: #009ca6; /* 1 */
  color: #2c2a29; /* 2 */
}

.MenuBar--leo .MenuBar-action.is-current .MenuBar-actionText,
.MenuBar--leo .MenuBar-action[aria-expanded="true"] .MenuBar-actionText {
  border-bottom-color: #bbb;
}

.MenuBar--dark .MenuBar-action.is-current .MenuBar-actionText,
.MenuBar--dark .MenuBar-action[aria-expanded="true"] .MenuBar-actionText {
  color: #fff;
}

/**
 * @define MenuGrid
 */

/**
 * 1. By default, arrange the items in a flexible row with wrapping.
 * 2. Override default list styles.
 * 3. Negate gutter gaps with inverse margins, which gives even space between
 *    all cells while lining up with parent element edges.
 */

.MenuGrid {
  display: -webkit-box;
  display: flex; /* 1 */
  flex-wrap: wrap; /* 1 */
  list-style: none; /* 2 */
  margin: -5.552px;
  margin: -0.347rem; /* 3 */
  padding-left: 0; /* 2 */
  position: relative; /* 3 */
}

/**
 * When grid is supported, use that for layout instead. This allows cells to
 * fill space more efficiently.
 */

@supports (display: grid) {
  .MenuGrid {
    display: grid;
    grid-gap: 0.694rem;
    grid-template-columns: repeat(auto-fill, minmax(6.375em, 1fr));
    margin: 0;
  }
}

/**
 * 1. Cause child items to stretch. This makes sure actions will match each
 *    others' height.
 * 2. Apply the other half of the gap here, which allows even spacing between
 *    items.
 * 3. When grid is disabled, we use this default size. While it would be cleaner
 *    to set this as a flex-basis (so we wouldn't need to override it), IE11
 *    would not calculate the width correctly (failing to factor in padding).
 */

.MenuGrid-item {
  display: -webkit-box;
  display: flex; /* 1 */
  padding: 5.552px;
  padding: 0.347rem; /* 2 */
  width: 33.33333%; /* 3 */
}

/**
 * 1. Remove gap when grid is supported, since in that case it will be defined
 *    on the containing element.
 * 2. Remove the fallback width (since grid will take care of this for us).
 */

@supports (display: grid) {
  .MenuGrid-item {
    padding: 0; /* 1 */
    width: auto; /* 2 */
  }
}

/**
 * Actions
 *
 * 1. Flex positioning is ineffectual in Firefox, but required to get the
 *    content to fill a button consistently in Chrome.
 * 2. Prevent awkward text selection on clumsy mouse actions.
 * 3. Without this, elements with small labels will not fill their item.
 * 4. Allow inner content to fill 100% of the elements height.
 */

.MenuGrid-action {
  background: #fff;
  border: 1px solid #bbb;
  border-radius: 0.125em;
  color: #2c2a29;
  cursor: pointer;
  display: block;
  font: inherit;
  font-weight: 500;
  height: 100%; /* 4 */
  line-height: 1;
  padding: 0;
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s;
  -webkit-transition-property: background-color, border-color, box-shadow, opacity;
  transition-property: background-color, border-color, box-shadow, opacity;
  -webkit-transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
          transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 2 */
  width: 100%; /* 3 */
}

/**
 * Disable default focus style (we'll apply our own later)
 */

.MenuGrid-action:focus {
  outline: 0;
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.MenuGrid-action::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * State: Current/Expanded
 */

.MenuGrid-action[aria-expanded="true"],
.MenuGrid-action.is-current {
  background-color: #2c2a29;
  border-color: #2c2a29;
  color: #fff;
}

/**
 * State: Disabled
 */

.MenuGrid-action:disabled,
.MenuGrid-action.is-disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

/**
 * State: Hover/Focus/Active
 */

.MenuGrid-action:not(.is-disabled):not(:disabled):hover {
  opacity: 0.85;
}

.MenuGrid-action:not(.is-disabled):not(:disabled):hover,
.MenuGrid-action:not(.is-disabled):not(:disabled):focus {
  border-color: #2c2a29;
  box-shadow: 0 0 0 1px #2c2a29;
}

.MenuGrid-action:not(.is-disabled):not(:disabled):active {
  opacity: 0.6;
}

/**
 * Content container
 *
 * This is required because of a Firefox bug involving flex columns on
 * `<button>` elements. Without this, long labels would disrupt the consistent
 * position of objects in the grid.
 *
 * 1. Arrange children in a vertical stack, centered on both axes.
 * 2. Fill containing element (Chrome, IE).
 * 3. Fill containing element (Firefox).
 *
 * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1397768
 */

.MenuGrid-content {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  display: -webkit-box;
  display: flex; /* 1 */
  -webkit-box-flex: 1;
          flex: 1 0 auto; /* 2 */
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; /* 1 */
  height: 100%; /* 3 */
  padding: 0.694em 0.335em;
  width: 100%; /* 3 */
}

/**
 * The visual object, ideally an `<svg>` or `<img>` element.
 *
 * 1. Cap height.
 * 2. Limit width to that of the container.
 * 3. Uncap width to a point (2). This allows non-square icons or imagery to
 *    be used, which can be helpful for wider objects (such as payment logos).
 */

.MenuGrid-object {
  height: 2.488em; /* 1 */
  max-width: 100%; /* 2 */
  width: auto; /* 3 */
}

/**
 * If the object is followed by a label, put some space between. We do this here
 * because we need `margin-top` on the label.
 */

.MenuGrid-object:not(:last-child) {
  margin-bottom: 0.402em;
}

/**
 * Expand margins of label to fill available space. This will cause every label
 * to be centered vertically with every other in a row.
 */

.MenuGrid-label {
  margin: auto;
  text-align: center;
}

/**
 * @define MenuList
 */

/**
 * Containing element
 *
 * 1. Reset default list styles as needed.
 */

.MenuList {
  background-color: #fff;
  color: #2c2a29;
  list-style: none; /* 1 */
  padding-left: 0; /* 1 */
}

/**
 * Containing element - loyalty background.
 */

.MenuList--loyalty {
  background-color: #e9d7e8;
}

/**
 * Adjacent list items should be separated by a divider.
 */

.MenuList-item + .MenuList-item {
  border-top: 1px solid #eee;
}

/**
 * Header elements used for semantic purposes should have their typographic
 * styles reset to avoid disrupting the consistent look and feel of each action.
 */

.MenuList-header {
  font: inherit;
}

/**
 * Actions, typically links or buttons
 *
 * 1. Align content vertically within container.
 * 2. Reset appearance to match surroundings or override quirky browser defaults
 *    for buttons, inputs.
 * 3. Cause adjacent children to push each other apart, which is useful for
 *    adding right-aligned icons or other affordances more easily.
 * 4. Override default text alignment for multi-line buttons.
 */

.MenuList-action {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  color: inherit; /* 2 */
  cursor: pointer; /* 2 */
  display: -webkit-box;
  display: flex; /* 1, 3 */
  font: inherit; /* 2 */
  font-weight: 700;
  -webkit-box-pack: justify;
          justify-content: space-between; /* 3 */
  line-height: 1.2;
  min-height: 47.776px;
  min-height: 2.986rem;
  padding: 13.328px 19.2px;
  padding: 0.833rem 1.2rem;
  text-align: left; /* 4 */
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 2 */
  width: 100%; /* 2 */
}

/**
 * Content should align with actions but without top padding, since actions
 * will already contain some visual whitespace.
 */

.MenuList-content {
  padding: 0 19.2px 19.2px;
  padding: 0 1.2rem 1.2rem;
}

/**
 * Content should align with actions and should have top padding, since the
 * background is different and will not have visual whitespace.
 */

.MenuList--loyalty .MenuList-content {
  background-color: #fafafa;
  padding: 19.2px 19.2px;
  padding: 1.2rem 1.2rem;
}

/**
 * @define Modal
 */

/**
 * Modal container is fixed (does not scroll with content)
 */

.Modal {
  height: 100%;
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 1000;
}

.Modal--box {
  height: 50vmax;
  left: 10%;
  position: fixed;
  top: 30px;
  width: 80%;
  z-index: 1000;
}

/**
 * At wider viewports, we make the topmost container the scrolling element.
 * Because there is now space around the modal, this makes it clear that there
 * is content to scroll when it overflows.
 *
 * 1. Allow child elements to space themselves more easily.
 * 2. Elastic scrolling in supported browsers.
 * 3. Auto-hiding scrollbar in supported browsers.
 * 4. Vertical overflow scrolling.
 * 5. Always keep space around the content (so it doesn't meet the edge).
 */

@media (min-width: 47em) {
  .Modal {
    display: -webkit-box;
    display: flex; /* 1 */
    -webkit-overflow-scrolling: touch; /* 2 */
    -ms-overflow-style: -ms-autohiding-scrollbar; /* 3 */
    overflow-y: auto; /* 4 */
    padding: 1.44rem; /* 5 */
  }
}

/**
 * Hide visually when hidden from screen readers
 */

.Modal[aria-hidden="true"] {
  display: none;
}

/**
 * Overlay element covers content below and also serves as a convenient
 * close/hide trigger
 *
 * 1. Without this, the overlay will mysteriously scroll with overflowing
 *    content in IE and Edge
 */

.Modal-overlay {
  background-color: #2c2a29;
  height: 100%;
  left: 0;
  opacity: 0.8;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: -1; /* 1 */
}

/**
 * Dialog container. Mostly exists for accessibility (`role="dialog"`).
 *
 * 1. Without this, the z-order of the modal compared to the overlay is
 *    unpredictable in some browsers.
 *
 * @see https://github.com/edenspiekermann/a11y-dialog#expected-dom-structure
 */

.Modal-dialog {
  position: relative; /* 1 */
}

/**
 * At small viewports, we want this element to fill the available space so
 * everything is "full-screen"
 */

@media (max-width: 46.999em) {
  .Modal-dialog {
    height: 100%;
    width: 100%;
  }
}

/**
 * At wide viewports...
 *
 * 1. Center vertically and horizontally.
 * 2. Constrain maximum width.
 * 3. Add a bit more padding to the bottom. This is purely visual, to help the
 *    modal appear a bit more balanced within the viewport.
 * 4. Set a default width, typically a percentage.
 */

@media (min-width: 47em) {
  .Modal-dialog {
    margin: auto; /* 1 */
    max-width: 40em; /* 2 */
    padding-bottom: 1.44rem; /* 3 */
    width: 80%; /* 4 */
  }
}

/**
 * At wide viewports...
 * Wider container so the content will fit better in wider screens
 */

@media (min-width: 47em) {
  .Modal-dialog--wide {
    max-width: 54.4rem;
  }
}

/**
 * Alert Box...
 * Modal for short alert messages
 */

 @media (min-width: 47em) {
  .Modal-dialog--alert {
    max-width: 28.8rem;
  }
}

/**
 * At small sizes, the document container should occupy the full parent height
 * and use flex positioning. This will allow the main element to expand to fill
 * the available space.
 */

@media (max-width: 46.999em) {
  .Modal-document {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    height: 100%;
  }
}

/**
 * Header (typically with title and close button)
 *
 * 1. Arrange child elements in a horizontal row.
 * 2. Do not occupy more height than the content would normally.
 */

.Modal-header {
  background-color: #eee;
  display: -webkit-box;
  display: flex; /* 1 */
  -webkit-box-flex: 0;
          flex: 0 0 auto; /* 2 */
}

/**
 * Close button. Designed to contain an icon, though that isn't technically
 * a strict requirement (text might look funny)
 *
 * 1. Center-align content (iconography).
 * 2. Override default button appearance properties.
 * 3. Use more interactive cursor style.
 * 4. Do not grow or shrink (only take up as much room as needed).
 * 5. Position as far to the right as possible without requiring that the
 *    element is last in the DOM order.
 * 6. We set modal padding on child elements so the click area for this will
 *    be quite large.
 * 7. Set up focus animation.
 */

.Modal-close {
  -webkit-box-align: center;
          align-items: center; /* 1 */
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; /* 2 */
  background: transparent; /* 2 */
  border: 0; /* 2 */
  color: inherit; /* 2 */
  cursor: pointer; /* 3 */
  display: -webkit-box;
  display: flex; /* 1 */
  -webkit-box-flex: 0;
          flex: 0 0 auto; /* 4 */
  font: inherit; /* 2 */
  -webkit-box-pack: center;
          justify-content: center; /* 1 */
  margin-left: auto; /* 5 */
  opacity: 0.8;
  -webkit-box-ordinal-group: 2;
          order: 1; /* 5 */
  padding: 19.2px;
  padding: 1.2rem; /* 6 */
  -webkit-transform-origin: center;
          transform-origin: center; /* 7 */
  -webkit-transition: opacity 0.3s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.3s cubic-bezier(0.77, 0, 0.175, 1);
  transition: opacity 0.3s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.3s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.3s cubic-bezier(0.77, 0, 0.175, 1), opacity 0.3s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.3s cubic-bezier(0.77, 0, 0.175, 1), opacity 0.3s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.3s cubic-bezier(0.77, 0, 0.175, 1); /* 7 */
}

/**
 * 1. Adds subtle opacity shift on :focus
 * 2. Removes default outline on :focus
 * 3. Sets desired scale for item on :focus
 */

.Modal-close:focus {
  opacity: 1; /* 1 */
  outline: 0; /* 2 */
  -webkit-transform: scale(1.25);
          transform: scale(1.25); /* 3 */
}

/**
 * Title element within header.
 *
 * 1. We set padding on child elements of the header so that an adjacent close
 *    button will easily meet its container's edge.
 * 2. This element appears to be part of the dialog "shell," so it feels a bit
 *    strange to have its text selectable.
 */

.Modal-title {
  font-size: inherit;
  line-height: 1.2;
  padding: 19.2px;
  padding: 1.2rem; /* 1 */
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 2 */
}

/**
 * If the title follows a close element, remove padding that would "double up"
 * against that button.
 */

.Modal-close + .Modal-title {
  padding-right: 0;
}

/**
 * Wrapper for the primary dialog section. This element will be flexible, but
 * because overflow-scrolling requires an explicit height property, we will
 * only use it to position the content wrapper (`Modal-content`).
 *
 * 1. Expand to fill space (but not more than necessary).
 * 2. Allow child elements to position themselves absolutely within.
 */

.Modal-main {
  background-color: #fff;
  -webkit-box-flex: 1;
          flex: 1 0 0%; /* 1 */
  position: relative; /* 2 */
}

/**
 * Content container with default padding
 */

.Modal-content {
  padding: 19.2px;
  padding: 1.2rem;
}

/**
 * At small screens, the content container is scrollable
 *
 * 1. Occupy the entirety of the parent element.
 * 2. Elastic scrolling in supported browsers.
 * 3. Auto-hiding scrollbar in supported browsers.
 * 4. Vertical overflow scrolling.
 */

@media (max-width: 46.999em) {
  .Modal-content {
    height: 100%; /* 1 */
    left: 0; /* 1 */
    -webkit-overflow-scrolling: touch; /* 2 */
    -ms-overflow-style: -ms-autohiding-scrollbar; /* 3 */
    overflow-y: auto; /* 4 */
    position: absolute; /* 1 */
    top: 0; /* 1 */
    width: 100%; /* 1 */
  }
}

/**
 * Optional footer content. Will be "sticky" at small sizes, but will scroll
 * with the rest of the modal at larger ones.
 *
 * 1. Do not occupy more height than the content would normally.
 */

.Modal-footer {
  background-color: #fff;
  border-top: 1px solid #eee;
  -webkit-box-flex: 0;
          flex: 0 0 auto; /* 1 */
  padding: 19.2px;
  padding: 1.2rem;
  position: relative;
}

/**
 * @define PageGirdle
 */

:root {
  /* keep PageGirdle-duration in sync with page-girdle.js */
}

/**
 * Provide top padding so that content never scrolls beneath sticky header.
 *
 * Note that this padding would not be necessary if all browsers supported
 * `position: sticky`.
 *
 * Also, if IE11 weren't supported we could do most transform animations on
 * this root element.
 */

.PageGirdle {
  padding-top: 57.328px;
  padding-top: 3.583rem;
}

/**
 * Additional padding unless this is a simple PageGirdle with no horizontal
 * submenu at large sizes
 */

@media (min-width: 47em) {
  .PageGirdle:not(.PageGirdle--simple) {
    padding-top: 6.569rem;
  }
}

/**
 * Whenever `PageGirdle` has started showing a menu, disable the page's default
 * scroll behavior by making it full-size and fixed-position. This relies on
 * JavaScript to visually maintain the scroll position.
 */

.PageGirdle.is-showingLeft, .PageGirdle.is-showingRight, .PageGirdle.is-showingSub, .PageGirdle.is-showingMain {
  height: 100%;
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
}

/**
 * Sticky header
 *
 * 1. This element expects two rows of content, so we stack those in a column.
 *    We use flexbox for this just in case the child content is not sized
 *    appropriately... the flexibility will cause it to adjust a bit more
 *    gracefully than it might otherwise.
 */

.PageGirdle-header {
  background: #fff;
  box-shadow: 0 0 0.162em rgba(44, 42, 41, 0.2);
  display: -webkit-box;
  display: flex; /* 1 */
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; /* 1 */
  height: 57.328px;
  height: 3.583rem;
  left: 0;
  position: fixed;
  top: 0;
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.2s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  width: 100%;
  z-index: 101;
}

@media (min-width: 47em) {
  .PageGirdle:not(.PageGirdle--simple) .PageGirdle-header {
    height: 6.569rem;
  }
}

/**
 * Move the header when left or right menus are showing.
 */

.PageGirdle.is-shownLeft .PageGirdle-header {
  -webkit-transform: translateX(86vw);
          transform: translateX(86vw);
}

.PageGirdle.is-shownRight .PageGirdle-header {
  -webkit-transform: translateX(-86vw);
          transform: translateX(-86vw);
}

/**
 * The top row of header content should grow to fill the available space.
 */

.PageGirdle-headerTop {
  -webkit-box-flex: 1;
          flex: 1 0 auto;
}

.PageGirdle-headerTop--dark {
  background-color: #2c2a29;
}

/**
 * Bottom row of content
 *
 * 1. Visual separation from top row.
 * 2. Retain natural vertical size (don't grow or shrink).
 */

.PageGirdle-headerBottom {
  border-top: 1px solid #eee; /* 1 */
  -webkit-box-flex: 0;
          flex: 0 0 auto; /* 2 */
}

/**
 * Because the bottom row is intended for a widescreen navigation element,
 * we hide it until the medium viewport. We can't control this via a utility
 * in markup because the height of the header must be known by other
 * sticky elements, for example submenus.
 */

@media (max-width: 46.999em) {
  .PageGirdle-headerBottom {
    display: none;
  }
}

.PageGirdle-left,
.PageGirdle-right {
  background: #eee;
  height: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  position: fixed;
  top: 0;
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.2s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  width: 86vw;
  z-index: 101;
}

/**
 * Left off-canvas menu
 */

.PageGirdle-left {
  left: 0;
}

.PageGirdle-left:not(.is-current),
.PageGirdle:not(.is-showingLeft) .PageGirdle-left {
  display: none;
}

.PageGirdle:not(.is-shownLeft) .PageGirdle-left {
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
}

/**
 * Right off-canvas menu
 */

.PageGirdle-right {
  right: 0;
}

.PageGirdle-right:not(.is-current),
.PageGirdle:not(.is-showingRight) .PageGirdle-right {
  display: none;
}

.PageGirdle:not(.is-shownRight) .PageGirdle-right {
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
}

/**
 * Submenu, displaying below the header
 */

.PageGirdle-sub {
  bottom: 0;
  left: 0;
  position: fixed;
  top: 57.328px;
  top: 3.583rem;
  -webkit-transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  width: 100%;
  z-index: 101;
}

/**
 * New Submenu, displaying below the header without white background
 * and with content width
 */

.PageGirdle-main {
  left: 0;
  position: absolute !important;
  top: 25.328px;
  top: 1.583rem;
  -webkit-transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  width: 1024px !important;
  width: 64rem !important;
  z-index: 101;
}

@media (min-width: 47em) {
  .PageGirdle:not(.PageGirdle--simple) .PageGirdle-sub {
    top: 6.569rem;
  }

  .PageGirdle:not(.PageGirdle--simple) .PageGirdle-main {
    top: 2.919rem;
  }
}

.PageGirdle-sub:not(.is-current),
.PageGirdle:not(.is-showingSub) .PageGirdle-sub,
.PageGirdle-main:not(.is-current),
.PageGirdle:not(.is-showingMain) .PageGirdle-main {
  display: none;
}

.PageGirdle:not(.is-shownSub) .PageGirdle-sub,
.PageGirdle:not(.is-shownMain) .PageGirdle-main {
  opacity: 0;
}

/**
 * Because submenus may be smaller than the full page height, we use an inner
 * element both visually and to control the scroll (so elastic scrolling won't
 * show the page below).
 */

.PageGirdle-subInner {
  background: #eee;
  max-height: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

.PageGirdle-mainInner {
  background: #eee;
  max-height: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

/**
 * Overlay element
 */

.PageGirdle-overlay {
  background-color: #2c2a29;
  height: 100%;
  left: 0;
  opacity: 0.8;
  position: fixed;
  top: 0;
  -webkit-transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: opacity 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  width: 100%;
  z-index: 100;
}

.PageGirdle:not(.is-showingLeft):not(.is-showingRight):not(.is-showingSub) .PageGirdle-overlay {
  display: none;
}

.PageGirdle:not(.is-shownLeft):not(.is-shownRight):not(.is-shownSub) .PageGirdle-overlay {
  opacity: 0;
}

/**
 * Overlay color changes depending on what type of menu is shown. The submenu
 * style is the alternate because it is less likely to be triggered on small
 * screens. Mobile first!
 */

.PageGirdle.is-showingSub .PageGirdle-overlay {
  background-color: #fff;
}

/**
 * Transition and disable events for page content to sync with the rest of the
 * animation.
 */

.PageGirdle-content {
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: transform 0.2s cubic-bezier(0.77, 0, 0.175, 1), -webkit-transform 0.2s cubic-bezier(0.77, 0, 0.175, 1);
}

.PageGirdle.is-showingLeft .PageGirdle-content, .PageGirdle.is-showingRight .PageGirdle-content, .PageGirdle.is-showingSub .PageGirdle-content, .PageGirdle.is-showingMain .PageGirdle-content {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.PageGirdle.is-shownLeft .PageGirdle-content {
  -webkit-transform: translateX(86vw);
          transform: translateX(86vw);
}

.PageGirdle.is-shownRight .PageGirdle-content {
  -webkit-transform: translateX(-86vw);
          transform: translateX(-86vw);
}

/**
 * Hash Fix
 *
 * Helper class to add to content that is likely to be a hash navigation target
 * to make sure it won't end up scrolled beneath the header.
 *
 * @see https://css-tricks.com/hash-tag-links-padding/
 * @see http://nicolasgallagher.com/jump-links-and-viewport-positioning/
 */

.PageGirdle-hashFix {
  background-clip: content-box;
  margin-top: -57.328px;
  margin-top: -3.583rem;
  padding-top: 57.328px;
  padding-top: 3.583rem;
}

@media (min-width: 47em) {
  .PageGirdle:not(.PageGirdle--simple) .PageGirdle-hashFix {
    margin-top: -6.569rem;
    padding-top: 6.569rem;
  }
}

/**
 * @display ProductDisplay
 */

/**
 * Apply half-inverse margins to the containing element so inner elements with
 * half-padding will have equal gaps on all edges while aligning with the
 * outermost container.
 *
 * @see http://alistapart.com/article/learning-from-lego-a-step-forward-in-modular-web-design
 */

.ProductDisplay {
  margin: -9.6px;
  margin: -0.6rem;
  position: relative;
}

/**
 * Classic clearfix. We would ususally use the much simpler `overflow: hidden`,
 * but in this case the contents may have visual effects (such as shadows) that
 * we don't want to clip.
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.ProductDisplay:before,
.ProductDisplay:after {
  content: " "; /* 1 */
  display: table; /* 1 */
}

.ProductDisplay:after {
  clear: both;
}

/**
 * Content cells that contain the header, product details and gallery. These all
 * have half-gaps applied via padding so they line up evenly regardless of
 * position. We use padding because these will float (not flex) so they won't
 * shrink to accommodate margins evenly.
 */

.ProductDisplay-cell {
  padding: 9.6px;
  padding: 0.6rem;
}

/**
 * At wider sizes, we shift to a two-column layout. By default, cells assume
 * they will be on the right (since only the gallery cell should be on the
 * left.)
 *
 * The reason we use floats here is because we want cells that were initially
 * above and below the gallery to shift up and to the right. We can't do that
 * with flexbox unless we give the containing element a fixed height. When IE11
 * compatibility is dropped, CSS Grid Layout would be an even better choice!
 */

@media (min-width: 47em) {
  .ProductDisplay-cell {
    float: right;
    width: 50%;
  }
}

/**
 * At wider viewports still, we want the gallery to take up even more space,
 * so we shrink the width of the default cells.
 */

@media (min-width: 64em) {
  .ProductDisplay-cell {
    width: 42.85714%;
  }
}

/**
 * Cells: With Gallery
 *
 * The cell that contains the gallery should occupy the opposite column at
 * wider viewport sizes.
 */

@media (min-width: 47em) {
  .ProductDisplay-cell--withGallery {
    float: left;
  }
}

/**
 * Starting here, the columns are no longer of even width. We subtract the
 * default cell width from 100% so the gallery will fill the remaining space.
 */

@media (min-width: 64em) {
  .ProductDisplay-cell--withGallery {
    width: 57.14286%;
  }
}

/**
 * Gallery
 *
 * 1. We use flexbox for this because the source order is simpler than the
 *    parent element, and it doesn't need any sort of clearfix. This will
 *    arrange the current figure and the thumbnail navigation in a horizontal
 *    row.
 * 2. Like the parent, we apply inverse half-gaps to allow even spacing between
 *    children while still aligning with the parent element's edges.
 */

.ProductDisplay-gallery {
  display: -webkit-box;
  display: flex; /* 1 */
  margin: -4.632px;
  margin: -0.2895rem; /* 2 */
  position: relative; /* 2 */
}

/**
 * While the cells are evenly spaced, we arrange the gallery contents vertically
 * instead of horizontally.
 */

@media (min-width: 47.001em) and (max-width: 63.999em) {
  .ProductDisplay-gallery {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}

/**
 * At even larger sizes, we reverse the order of the gallery contents. This is
 * because the gallery will now be too far away from the right edge of the
 * screen to get much benefit from thumbnails being on the right, and the
 * composition looks nicer when the thumbnails aren't competing directly with
 * adjacent content.
 *
 * We could also accomplish this by applying `order: -1` to
 * `.ProductDisplay-galleryNav` at this breakpoint, but then the layout would
 * be defined across two different classes.
 */

@media (min-width: 64em) {
  .ProductDisplay-gallery {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
            flex-direction: row-reverse;
  }
}

/**
 * Gallery Figure (Current/Selected)
 *
 * 1. Allow this element to occupy all available space. We use `0%` to avoid
 *    an IE bug with unitless flex basis.
 * 2. Apply half-gap to this element so it will have consistent whitespace
 *    regardless of layout.
 *
 * @see https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored
 */

.ProductDisplay-galleryFigure {
  -webkit-box-flex: 1;
          flex: 1 1 0%; /* 1 */
  margin: 4.632px;
  margin: 0.2895rem; /* 2 */
}

/**
 * While in stacked orientation, we make this element less flexible. This is
 * only needed because otherwise IE will collapse the element to `height: 0`.
 */

@media (min-width: 47.001em) and (max-width: 63.999em) {
  .ProductDisplay-galleryFigure {
    -webkit-box-flex: 0;
            flex: 0 0 auto;
  }
}

/**
 * Gallery Navigation (Column of Thumbnails)
 *
 * 1. Unlike the figure, this element should maintain a consistent, inflexible
 *    width.
 * 2. Apply the same half-gap to this element. In this case, use of `margin` is
 *    particularly important as it will simplify position of the scrollable
 *    track.
 */

.ProductDisplay-galleryNav {
  -webkit-box-flex: 0;
          flex: 0 0 44px;
  flex: 0 0 2.75rem; /* 1 */
  margin: 4.632px;
  margin: 0.2895rem; /* 2 */
  position: relative; /* 2 */
}

/**
 * Increase the nav width as available space increases.
 */

@media (min-width: 30em) {
  .ProductDisplay-galleryNav {
    flex-basis: 3.3rem;
  }
}

/**
 * When the gallery is in a vertical (stacked) orientation, we reset the
 * flex basis so it won't have limited height.
 */

@media (min-width: 47em) {
  .ProductDisplay-galleryNav {
    flex-basis: auto;
  }
}

/**
 * At the widest sizes, the gallery is back in a horizontal orientation but
 * we want the thumbs to be larger still.
 */

@media (min-width: 64em) {
  .ProductDisplay-galleryNav {
    flex-basis: 4.752rem;
  }
}

/**
 * Gallery Nav Track
 *
 * This element makes the list of thumbnails scrollable. It is only applied
 * up to a specific breakpoint, at which point the design is more flexible in
 * terms of allowing extra thumbnails.
 *
 * 1. We occupy the full height of the container, setting `height` explicitly to
 *    gain scrolling behavior when the content exceeds that (3).
 * 2. We exceed the container width by the available gaps to make the scrollable
 *    container more touch-friendly. We apply this same overage as padding, so
 *    the contents of this element will respect the parent element's whitespace.
 * 3. Allow content to scroll when it exceeds the container.
 * 4. In Webkit-based browsers, allow "elastic" scrolling of contents.
 */

@media (max-width: 46.999em) {
  .ProductDisplay-galleryNavTrack {
    height: 100%; /* 1 */
    left: -0.579rem; /* 2 */
    overflow: auto; /* 3 */
    -webkit-overflow-scrolling: touch; /* 4 */
    padding-left: 0.579rem; /* 2 */
    padding-right: 1.2rem; /* 2 */
    position: absolute; /* 1, 2 */
    right: -1.2rem; /* 2 */
    top: 0; /* 1 */
  }
}

/**
 * Gallery Nav List
 *
 * This is the containing element for the nav items (typically thumbnails).
 *
 * 1. Arrange thumbnails in a vertical stack.
 * 2. Since this is typically a list, we reset some list defaults.
 * 3. Same inverse half-gap trick as other elements.
 */

.ProductDisplay-galleryNavList {
  display: -webkit-box;
  display: flex; /* 1 */
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; /* 1 */
  list-style: none; /* 2 */
  margin: -4.632px;
  margin: -0.2895rem; /* 3 */
  padding-left: 0; /* 2 */
  position: relative; /* 3 */
}

/**
 * When the nav is below the figure, arrange children in a row instead.
 */

@media (min-width: 47.001em) and (max-width: 63.999em) {
  .ProductDisplay-galleryNavList {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

/**
 * Apply half-gaps to nav items (similar to parent elements). In this case we
 * choose `padding` over `margin` because at some breakpoints we want whitespace
 * to factor into the percentage occupied.
 */

.ProductDisplay-galleryNavItem {
  padding: 4.632px;
  padding: 0.2895rem;
}

/**
 * When items are arranged in a row, we want them to default to a width of 20%,
 * while shrinking to accommodate additional thumbnails when there are more than
 * five. This avoids the need for overflow scrolling (which feels awkward in the
 * multi-column layout) but also makes sure thumbnails don't get too large when
 * there are fewer than five.
 */

@media (min-width: 47.001em) and (max-width: 63.999em) {
  .ProductDisplay-galleryNavItem {
    -webkit-box-flex: 0;
            flex: 0 1 20%;
  }
}

/**
 * @define ScrollRow
 */

/**
 * 1. Arrange items in a horizontal row.
 * 2. Do not allow wrapping. This should be the default, but since it's critical
 *    we go ahead and specify it just in case.
 * 3. "Elastic" scrolling in iOS
 * 4. Scrollbars that don't overstay their welcome in IE/Edge
 * 5. Horizontal scrolling activated ↔
 * 6. We add vertical padding like normal, but we only add horizontal padding
 *    minus the padding present in items. This avoids the requirement for an
 *    inner element and allows the item width percentages to be accurate.
 * 7. Prevent Chrome issue where overflowing items impact page width (even if
 *    `width` or `max-width` is set! 😮)
 *
 * @see https://iamsteve.me/blog/entry/using-flexbox-for-horizontal-scrolling-navigation
 */

.ScrollRow {
  display: -webkit-box;
  display: flex; /* 1 */
  flex-wrap: nowrap; /* 2 */
  -webkit-overflow-scrolling: touch; /* 3 */
  -ms-overflow-style: -ms-autohiding-scrollbar; /* 4 */
  overflow-x: auto; /* 5 */
  padding: 19.2px 7.68px;
  padding: 1.2rem 0.48rem; /* 6 */
  position: relative; /* 7 */
}

/**
 * 1. Items should size themselves naturally (not growing or shrinking).
 * 2. Apply half horizontal gutter so it will add up to the full gutter space
 *    as items line up.
 */

.ScrollRow-item {
  -webkit-box-flex: 0;
          flex: 0 0 auto; /* 1 */
  padding: 0 11.52px;
  padding: 0 0.72rem; /* 2 */
}

/**
 * @define TweenToggle
 */

/**
 * Set consistent transition properties for child elements that will animate.
 */

.TweenToggle-fadeIn,
.TweenToggle-fadeOut,
.TweenToggle-rotate1of8,
.TweenToggle-rotateCounter1of8,
.TweenToggle-rotateCounter1of2,
.TweenToggle-scaleIn,
.TweenToggle-scaleOut {
  -webkit-transition: 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  transition: 0.2s cubic-bezier(0.77, 0, 0.175, 1);
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: transform, opacity;
  transition-property: transform, opacity, -webkit-transform;
}

/**
 * Set consistent transform origin for child elements that will animate their
 * position, scale or orientation.
 */

.TweenToggle-rotate1of8,
.TweenToggle-rotateCounter1of8,
.TweenToggle-rotateCounter1of2,
.TweenToggle-scaleIn,
.TweenToggle-scaleOut {
  -webkit-transform-origin: center;
          transform-origin: center;
}

/**
 * Visibility changes
 *
 * We use opacity for both fade-in/fade-out animations and for visibility,
 * because some browsers are quirky when it comes to `visibility: hidden`.
 */

.TweenToggle.is-on .TweenToggle-hide, .TweenToggle[aria-expanded="true"] .TweenToggle-hide, .TweenToggle:not(.is-on):not([aria-expanded="true"]) .TweenToggle-show, .TweenToggle.is-on .TweenToggle-fadeOut, .TweenToggle[aria-expanded="true"] .TweenToggle-fadeOut, .TweenToggle:not(.is-on):not([aria-expanded="true"]) .TweenToggle-fadeIn {
  opacity: 0;
}

/**
 * Rotation
 */

.TweenToggle.is-on .TweenToggle-rotate1of8, .TweenToggle[aria-expanded="true"] .TweenToggle-rotate1of8 {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.TweenToggle.is-on .TweenToggle-rotateCounter1of8, .TweenToggle[aria-expanded="true"] .TweenToggle-rotateCounter1of8 {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.TweenToggle.is-on .TweenToggle-rotate1of2, .TweenToggle[aria-expanded="true"] .TweenToggle-rotate1of2 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.TweenToggle.is-on .TweenToggle-rotateCounter1of2, .TweenToggle[aria-expanded="true"] .TweenToggle-rotateCounter1of2 {
  -webkit-transform: rotate(-180deg);
          transform: rotate(-180deg);
}

/**
 * Scale
 */

.TweenToggle.is-on .TweenToggle-scaleOut, .TweenToggle[aria-expanded="true"] .TweenToggle-scaleOut, .TweenToggle:not(.is-on):not([aria-expanded="true"]) .TweenToggle-scaleIn {
  -webkit-transform: scale(0);
          transform: scale(0);
}

/**
 * @define Zoomable
 */

/**
 * 1. Clip anything that exceeds the boundaries of this container.
 * 2. Force child element dimensions to base themselves on this container.
 */

.Zoomable {
  display: block;
  overflow: hidden; /* 1 */
  position: relative; /* 2 */
}

/**
 * The actual image object.
 *
 * 1. Fill containing element while maintaining aspect ratio.
 * 2. Transform from the top left. This will make calculations in the JavaScript
 *    component much easier.
 */

.Zoomable-object {
  display: block; /* 1 */
  height: auto; /* 1 */
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0; /* 2 */
  width: 100%; /* 1 */
}

/**
 * @define utilities
 */

/**
 * Size
 */

/* stylelint-disable plugin/selector-bem-pattern */

/* stylelint-enable */

.u-borderSm {
    border-style: solid;
    border-width: 1px;
  }

.u-borderEndsSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-top-style: solid;
    border-top-width: 1px;
  }

.u-borderSidesSm {
    border-left-style: solid;
    border-left-width: 1px;
    border-right-style: solid;
    border-right-width: 1px;
  }

.u-borderTopSm {
    border-top-style: solid;
    border-top-width: 1px;
  }

.u-borderBottomSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
  }

.u-borderLeftSm {
    border-left-style: solid;
    border-left-width: 1px;
  }

.u-borderRightSm {
    border-right-style: solid;
    border-right-width: 1px;
  }

.u-borderMd {
    border-style: solid;
    border-width: 2px;
  }

.u-borderEndsMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
    border-top-style: solid;
    border-top-width: 2px;
  }

.u-borderSidesMd {
    border-left-style: solid;
    border-left-width: 2px;
    border-right-style: solid;
    border-right-width: 2px;
  }

.u-borderTopMd {
    border-top-style: solid;
    border-top-width: 2px;
  }

.u-borderBottomMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
  }

.u-borderLeftMd {
    border-left-style: solid;
    border-left-width: 2px;
  }

.u-borderRightMd {
    border-right-style: solid;
    border-right-width: 2px;
  }

.u-borderNone {
    border-style: solid;
    border-width: 0;
  }

.u-borderEndsNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
    border-top-style: solid;
    border-top-width: 0;
  }

.u-borderSidesNone {
    border-left-style: solid;
    border-left-width: 0;
    border-right-style: solid;
    border-right-width: 0;
  }

.u-borderTopNone {
    border-top-style: solid;
    border-top-width: 0;
  }

.u-borderBottomNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
  }

.u-borderLeftNone {
    border-left-style: solid;
    border-left-width: 0;
  }

.u-borderRightNone {
    border-right-style: solid;
    border-right-width: 0;
  }

@media (min-width: 30em) {
  .u-sm-borderSm {
    border-style: solid;
    border-width: 1px;
  }
  .u-sm-borderEndsSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-top-style: solid;
    border-top-width: 1px;
  }
  .u-sm-borderSidesSm {
    border-left-style: solid;
    border-left-width: 1px;
    border-right-style: solid;
    border-right-width: 1px;
  }
  .u-sm-borderTopSm {
    border-top-style: solid;
    border-top-width: 1px;
  }
  .u-sm-borderBottomSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
  }
  .u-sm-borderLeftSm {
    border-left-style: solid;
    border-left-width: 1px;
  }
  .u-sm-borderRightSm {
    border-right-style: solid;
    border-right-width: 1px;
  }
  .u-sm-borderMd {
    border-style: solid;
    border-width: 2px;
  }
  .u-sm-borderEndsMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
    border-top-style: solid;
    border-top-width: 2px;
  }
  .u-sm-borderSidesMd {
    border-left-style: solid;
    border-left-width: 2px;
    border-right-style: solid;
    border-right-width: 2px;
  }
  .u-sm-borderTopMd {
    border-top-style: solid;
    border-top-width: 2px;
  }
  .u-sm-borderBottomMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
  }
  .u-sm-borderLeftMd {
    border-left-style: solid;
    border-left-width: 2px;
  }
  .u-sm-borderRightMd {
    border-right-style: solid;
    border-right-width: 2px;
  }
  .u-sm-borderNone {
    border-style: solid;
    border-width: 0;
  }
  .u-sm-borderEndsNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
    border-top-style: solid;
    border-top-width: 0;
  }
  .u-sm-borderSidesNone {
    border-left-style: solid;
    border-left-width: 0;
    border-right-style: solid;
    border-right-width: 0;
  }
  .u-sm-borderTopNone {
    border-top-style: solid;
    border-top-width: 0;
  }
  .u-sm-borderBottomNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
  }
  .u-sm-borderLeftNone {
    border-left-style: solid;
    border-left-width: 0;
  }
  .u-sm-borderRightNone {
    border-right-style: solid;
    border-right-width: 0;
  }
}

@media (min-width: 47em) {
  .u-md-borderSm {
    border-style: solid;
    border-width: 1px;
  }
  .u-md-borderEndsSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-top-style: solid;
    border-top-width: 1px;
  }
  .u-md-borderSidesSm {
    border-left-style: solid;
    border-left-width: 1px;
    border-right-style: solid;
    border-right-width: 1px;
  }
  .u-md-borderTopSm {
    border-top-style: solid;
    border-top-width: 1px;
  }
  .u-md-borderBottomSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
  }
  .u-md-borderLeftSm {
    border-left-style: solid;
    border-left-width: 1px;
  }
  .u-md-borderRightSm {
    border-right-style: solid;
    border-right-width: 1px;
  }
  .u-md-borderMd {
    border-style: solid;
    border-width: 2px;
  }
  .u-md-borderEndsMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
    border-top-style: solid;
    border-top-width: 2px;
  }
  .u-md-borderSidesMd {
    border-left-style: solid;
    border-left-width: 2px;
    border-right-style: solid;
    border-right-width: 2px;
  }
  .u-md-borderTopMd {
    border-top-style: solid;
    border-top-width: 2px;
  }
  .u-md-borderBottomMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
  }
  .u-md-borderLeftMd {
    border-left-style: solid;
    border-left-width: 2px;
  }
  .u-md-borderRightMd {
    border-right-style: solid;
    border-right-width: 2px;
  }
  .u-md-borderNone {
    border-style: solid;
    border-width: 0;
  }
  .u-md-borderEndsNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
    border-top-style: solid;
    border-top-width: 0;
  }
  .u-md-borderSidesNone {
    border-left-style: solid;
    border-left-width: 0;
    border-right-style: solid;
    border-right-width: 0;
  }
  .u-md-borderTopNone {
    border-top-style: solid;
    border-top-width: 0;
  }
  .u-md-borderBottomNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
  }
  .u-md-borderLeftNone {
    border-left-style: solid;
    border-left-width: 0;
  }
  .u-md-borderRightNone {
    border-right-style: solid;
    border-right-width: 0;
  }
}

@media (min-width: 64em) {
  .u-lg-borderSm {
    border-style: solid;
    border-width: 1px;
  }
  .u-lg-borderEndsSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-top-style: solid;
    border-top-width: 1px;
  }
  .u-lg-borderSidesSm {
    border-left-style: solid;
    border-left-width: 1px;
    border-right-style: solid;
    border-right-width: 1px;
  }
  .u-lg-borderTopSm {
    border-top-style: solid;
    border-top-width: 1px;
  }
  .u-lg-borderBottomSm {
    border-bottom-style: solid;
    border-bottom-width: 1px;
  }
  .u-lg-borderLeftSm {
    border-left-style: solid;
    border-left-width: 1px;
  }
  .u-lg-borderRightSm {
    border-right-style: solid;
    border-right-width: 1px;
  }
  .u-lg-borderMd {
    border-style: solid;
    border-width: 2px;
  }
  .u-lg-borderEndsMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
    border-top-style: solid;
    border-top-width: 2px;
  }
  .u-lg-borderSidesMd {
    border-left-style: solid;
    border-left-width: 2px;
    border-right-style: solid;
    border-right-width: 2px;
  }
  .u-lg-borderTopMd {
    border-top-style: solid;
    border-top-width: 2px;
  }
  .u-lg-borderBottomMd {
    border-bottom-style: solid;
    border-bottom-width: 2px;
  }
  .u-lg-borderLeftMd {
    border-left-style: solid;
    border-left-width: 2px;
  }
  .u-lg-borderRightMd {
    border-right-style: solid;
    border-right-width: 2px;
  }
  .u-lg-borderNone {
    border-style: solid;
    border-width: 0;
  }
  .u-lg-borderEndsNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
    border-top-style: solid;
    border-top-width: 0;
  }
  .u-lg-borderSidesNone {
    border-left-style: solid;
    border-left-width: 0;
    border-right-style: solid;
    border-right-width: 0;
  }
  .u-lg-borderTopNone {
    border-top-style: solid;
    border-top-width: 0;
  }
  .u-lg-borderBottomNone {
    border-bottom-style: solid;
    border-bottom-width: 0;
  }
  .u-lg-borderLeftNone {
    border-left-style: solid;
    border-left-width: 0;
  }
  .u-lg-borderRightNone {
    border-right-style: solid;
    border-right-width: 0;
  }
}

/**
 * Colors
 */

.u-borderBlack {
  border-color: #2c2a29;
}

.u-borderMercury {
  border-color: #bbb;
}

.u-borderSilver {
  border-color: #eee;
}

/** @define utilities */

.u-bgWhite {
  background-color: #fff !important;
}

.u-bgBlack {
  background-color: #2c2a29 !important;
}

.u-bgGray80 {
  background-color: #ccc !important;
}

.u-bgSalmon {
  background-color: #db908c !important;
}

.u-bgDarkPink {
  background-color: #af605b !important;
}

.u-bgLeonisa {
  background-color: #003865 !important;
}

.u-bgPurple {
  background-color: #b4b5df !important;
}

.u-bgPeach {
  background-color: #fdd086 !important;
}

.u-bgGray {
  background-color: #63666a !important;
}

.u-bgOrange {
  background-color: #f48e28 !important;
}

.u-bgMercury {
  background-color: #bbb !important;
}

.u-bgSilver {
  background-color: #eee !important;
}

.u-bgLightSilver {
  background-color: #fafafa !important;
}

.u-bgDarkBlue {
  background-color: #2f4754 !important;
}

.u-bgWine {
  background-color: #641e35 !important;
}

.u-bgSand {
  background-color: #a99a6c !important;
}

.u-bgRed {
  background-color: #d73043 !important;
}

.u-bgGreen {
  background-color: #8ec549 !important;
}

.u-bgCyan {
  background-color: #009fda !important;
}

.u-bgYellow {
  background-color: #e8aa00 !important;
}

.u-bgSeaGreen {
  background-color: #009ca6 !important;
}

.u-bgMint {
  background-color: #3cdbc0 !important;
}

.u-bgLoyaltyPeach {
  background-color: #f7ece8 !important;
}

.u-bgLoyaltyGreen {
  background-color: #aad3cd !important;
}

.u-bgLoyaltyLightGreen {
  background-color: #ddece9 !important;
}

.u-bgLoyaltyDarkGreen {
  background-color: #2e4147 !important;
}

.u-bgLoyaltyDarkGray {
  background-color: #242b33 !important;
}

.u-bgLoyaltyBlue {
  background-color: #d2ebf1 !important;
}

.u-bgLoyaltyPink {
  background-color: #e9d7e8 !important;
}

.u-bgLoyaltyPurple {
  background-color: #6f6da8 !important;
}

.u-bgLoyaltyLightOrange {
  background-color: #fde7ce !important;
}

.u-bgLoyaltyDarkOrange {
  background-color: #f28468 !important;
}

.u-bgLoyaltyOrange {
  background-color: #f3b88f !important;
}

/**
 * @define utilities
 */

/* stylelint-disable plugin/selector-bem-pattern */

/* stylelint-enable */

.u-columns1 {
      -webkit-columns: 1;
              columns: 1;
    }

.u-columns2 {
      -webkit-columns: 2;
              columns: 2;
    }

.u-columns3 {
      -webkit-columns: 3;
              columns: 3;
    }

@media (min-width: 30em) {
  .u-sm-columns1 {
      -webkit-columns: 1;
              columns: 1;
    }
  .u-sm-columns2 {
      -webkit-columns: 2;
              columns: 2;
    }
  .u-sm-columns3 {
      -webkit-columns: 3;
              columns: 3;
    }
}

@media (min-width: 47em) {
  .u-md-columns1 {
      -webkit-columns: 1;
              columns: 1;
    }
  .u-md-columns2 {
      -webkit-columns: 2;
              columns: 2;
    }
  .u-md-columns3 {
      -webkit-columns: 3;
              columns: 3;
    }
}

@media (min-width: 64em) {
  .u-lg-columns1 {
      -webkit-columns: 1;
              columns: 1;
    }
  .u-lg-columns2 {
      -webkit-columns: 2;
              columns: 2;
    }
  .u-lg-columns3 {
      -webkit-columns: 3;
              columns: 3;
    }
}

/**
 * @define utilities
 */

/**
 * 1. Center element by default, but leave unimportant so it can be overridden
 *    easily by other utilities.
 */

.u-contain {
  margin-left: auto; /* 1 */
  margin-right: auto; /* 1 */
  max-width: 1024px !important;
  max-width: 64rem !important;
}

/**
 * @define utilities
 */

/**
 * @define utilities
 * Display-type utilities
 */

.u-block {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%; /* 1 */
}

.u-table {
  display: table !important;
}

.u-tableCell {
  display: table-cell !important;
}

.u-tableRow {
  display: table-row !important;
}

/**
 * Some display utilities are useful at specific breakpoints, so we recreate
 * a few as a mixin to keep things consistent and DRY between the various
 * media queries.
 */

/* stylelint-disable plugin/selector-bem-pattern */

/* stylelint-enable */

@media (min-width: 30em) {
  .u-sm-block {
    display: block !important;
  }
  .u-sm-hidden {
    display: none !important;
  }
  .u-sm-inline {
    display: inline !important;
  }
  /**
   * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
   * inline-block will display at its default size, and not limit its width to
   * 100% of an ancestral container.
   */
  .u-sm-inlineBlock {
    display: inline-block !important;
    max-width: 100%; /* 1 */
  }
}

@media (min-width: 47em) {
  .u-md-block {
    display: block !important;
  }
  .u-md-hidden {
    display: none !important;
  }
  .u-md-inline {
    display: inline !important;
  }
  /**
   * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
   * inline-block will display at its default size, and not limit its width to
   * 100% of an ancestral container.
   */
  .u-md-inlineBlock {
    display: inline-block !important;
    max-width: 100%; /* 1 */
  }
}

@media (min-width: 64em) {
  .u-lg-block {
    display: block !important;
  }
  .u-lg-hidden {
    display: none !important;
  }
  .u-lg-inline {
    display: inline !important;
  }
  /**
   * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
   * inline-block will display at its default size, and not limit its width to
   * 100% of an ancestral container.
   */
  .u-lg-inlineBlock {
    display: inline-block !important;
    max-width: 100%; /* 1 */
  }
}

/**
 * @define utilities
 */

/** @define utilities */

/* Applies to flex container
   ========================================================================== */

/**
 * Container
 */

.u-flex {
  display: -webkit-box !important;
  display: flex !important;
}

.u-flexInline {
  display: -webkit-inline-box !important;
  display: inline-flex !important;
}

/**
 * Direction: row
 */

.u-flexRow {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important;
          flex-direction: row !important;
}

.u-flexRowReverse {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important;
          flex-direction: row-reverse !important;
}

/**
 * Direction: column
 */

.u-flexCol {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
          flex-direction: column !important;
}

.u-flexColReverse {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important;
          flex-direction: column-reverse !important;
}

/**
 * Wrap
 */

.u-flexWrap {
  flex-wrap: wrap !important;
}

.u-flexNoWrap {
  flex-wrap: nowrap !important;
}

.u-flexWrapReverse {
  flex-wrap: wrap-reverse !important;
}

/**
 * Align items along the main axis of the current line of the flex container
 */

.u-flexJustifyStart {
  -webkit-box-pack: start !important;
          justify-content: flex-start !important;
}

.u-flexJustifyEnd {
  -webkit-box-pack: end !important;
          justify-content: flex-end !important;
}

.u-flexJustifyCenter {
  -webkit-box-pack: center !important;
          justify-content: center !important;
}

.u-flexJustifyBetween {
  -webkit-box-pack: justify !important;
          justify-content: space-between !important;
}

.u-flexJustifyAround {
  justify-content: space-around !important;
}

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */

.u-flexAlignItemsStart {
  -webkit-box-align: start !important;
          align-items: flex-start !important;
}

.u-flexAlignItemsEnd {
  -webkit-box-align: end !important;
          align-items: flex-end !important;
}

.u-flexAlignItemsCenter {
  -webkit-box-align: center !important;
          align-items: center !important;
}

.u-flexAlignItemsStretch {
  -webkit-box-align: stretch !important;
          align-items: stretch !important;
}

.u-flexAlignItemsBaseline {
  -webkit-box-align: baseline !important;
          align-items: baseline !important;
}

/**
 * Aligns items within the flex container when there is extra
 * space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */

.u-flexAlignContentStart {
  align-content: flex-start !important;
}

.u-flexAlignContentEnd {
  align-content: flex-end !important;
}

.u-flexAlignContentCenter {
  align-content: center !important;
}

.u-flexAlignContentStretch {
  align-content: stretch !important;
}

.u-flexAlignContentBetween {
  align-content: space-between !important;
}

.u-flexAlignContentAround {
  align-content: space-around !important;
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.u-flexAlignSelfStart {
  align-self: flex-start !important;
}

.u-flexAlignSelfEnd {
  align-self: flex-end !important;
}

.u-flexAlignSelfCenter {
  align-self: center !important;
}

.u-flexAlignSelfStretch {
  align-self: stretch !important;
}

.u-flexAlignSelfBaseline {
  align-self: baseline !important;
}

.u-flexAlignSelfAuto {
  align-self: auto !important;
}

/**
 * Change order without editing underlying HTML
 */

.u-flexOrderFirst {
  -webkit-box-ordinal-group: 0 !important;
          order: -1 !important;
}

.u-flexOrderLast {
  -webkit-box-ordinal-group: 2 !important;
          order: 1 !important;
}

.u-flexOrderNone {
  -webkit-box-ordinal-group: 1 !important;
          order: 0 !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */

.u-flexGrow1 {
  -webkit-box-flex: 1 !important;
          flex: 1 1 0% !important; /* 1 */
}

.u-flexGrow2 {
  -webkit-box-flex: 2 !important;
          flex: 2 1 0% !important;
}

.u-flexGrow3 {
  -webkit-box-flex: 3 !important;
          flex: 3 1 0% !important;
}

.u-flexGrow4 {
  -webkit-box-flex: 4 !important;
          flex: 4 1 0% !important;
}

.u-flexGrow5 {
  -webkit-box-flex: 5 !important;
          flex: 5 1 0% !important;
}

/**
 * Specify the flex shrink factor, which determines how much the flex item will
 * shrink relative to the rest of the flex items in the flex container.
 */

.u-flexShrink0 {
  flex-shrink: 0 !important;
}

.u-flexShrink1 {
  flex-shrink: 1 !important;
}

.u-flexShrink2 {
  flex-shrink: 2 !important;
}

.u-flexShrink3 {
  flex-shrink: 3 !important;
}

.u-flexShrink4 {
  flex-shrink: 4 !important;
}

.u-flexShrink5 {
  flex-shrink: 5 !important;
}

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.u-flexExpand {
  margin: auto !important;
}

.u-flexExpandLeft {
  margin-left: auto !important;
}

.u-flexExpandRight {
  margin-right: auto !important;
}

.u-flexExpandTop {
  margin-top: auto !important;
}

.u-flexExpandBottom {
  margin-bottom: auto !important;
}

/**
 * Basis
 */

.u-flexBasisAuto {
  flex-basis: auto !important;
}

.u-flexBasis0 {
  flex-basis: 0 !important;
}

/*
 * Shorthand
 *
 * Declares all values instead of keywords like 'initial' to work around IE10
 * https://www.w3.org/TR/css-flexbox-1/#flex-common
 *
 * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
 *    This ensures it overrides flex-basis set in other utilities.
 */

/*
 * Sizes the item based on the width/height properties
 */

.u-flexInitial {
  -webkit-box-flex: 0 !important;
          flex: 0 1 auto !important;
  flex-basis: auto !important; /* 1 */
}

/*
 * Sizes the item based on the width/height properties, but makes them fully
 * flexible, so that they absorb any free space along the main axis.
 */

.u-flexAuto {
  -webkit-box-flex: 1 !important;
          flex: 1 1 auto !important;
  flex-basis: auto !important; /* 1 */
}

/*
 * Sizes the item according to the width/height properties, but makes the flex
 * item fully inflexible. Similar to initial, except that flex items are
 * not allowed to shrink, even in overflow situations.
 */

.u-flexNone {
  -webkit-box-flex: 0 !important;
          flex: 0 0 auto !important;
  flex-basis: auto !important; /* 1 */
}

/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (min-width: 30em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-sm-flex {
    display: -webkit-box !important;
    display: flex !important;
  }

  .u-sm-flexInline {
    display: -webkit-inline-box !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-sm-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
            flex-direction: row !important;
  }

  .u-sm-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-sm-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
            flex-direction: column !important;
  }

  .u-sm-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-sm-flexWrap {
    flex-wrap: wrap !important;
  }

  .u-sm-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .u-sm-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-sm-flexJustifyStart {
    -webkit-box-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-sm-flexJustifyEnd {
    -webkit-box-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-sm-flexJustifyCenter {
    -webkit-box-pack: center !important;
            justify-content: center !important;
  }

  .u-sm-flexJustifyBetween {
    -webkit-box-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-sm-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-sm-flexAlignItemsStart {
    -webkit-box-align: start !important;
            align-items: flex-start !important;
  }

  .u-sm-flexAlignItemsEnd {
    -webkit-box-align: end !important;
            align-items: flex-end !important;
  }

  .u-sm-flexAlignItemsCenter {
    -webkit-box-align: center !important;
            align-items: center !important;
  }

  .u-sm-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
            align-items: stretch !important;
  }

  .u-sm-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-sm-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .u-sm-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .u-sm-flexAlignContentCenter {
    align-content: center !important;
  }

  .u-sm-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .u-sm-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .u-sm-flexAlignContentAround {
    align-content: space-around !important;
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-sm-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .u-sm-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .u-sm-flexAlignSelfCenter {
    align-self: center !important;
  }

  .u-sm-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .u-sm-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .u-sm-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-sm-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
            order: -1 !important;
  }

  .u-sm-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
            order: 1 !important;
  }

  .u-sm-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-sm-flexGrow1 {
    -webkit-box-flex: 1 !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-sm-flexGrow2 {
    -webkit-box-flex: 2 !important;
            flex: 2 1 0% !important;
  }

  .u-sm-flexGrow3 {
    -webkit-box-flex: 3 !important;
            flex: 3 1 0% !important;
  }

  .u-sm-flexGrow4 {
    -webkit-box-flex: 4 !important;
            flex: 4 1 0% !important;
  }

  .u-sm-flexGrow5 {
    -webkit-box-flex: 5 !important;
            flex: 5 1 0% !important;
  }

  /**
   * Specify the flex shrink factor, which determines how much the flex item
   * will shrink relative to the rest of the flex items in the flex container.
   */

  .u-sm-flexShrink0 {
    flex-shrink: 0 !important;
  }

  .u-sm-flexShrink1 {
    flex-shrink: 1 !important;
  }

  .u-sm-flexShrink2 {
    flex-shrink: 2 !important;
  }

  .u-sm-flexShrink3 {
    flex-shrink: 3 !important;
  }

  .u-sm-flexShrink4 {
    flex-shrink: 4 !important;
  }

  .u-sm-flexShrink5 {
    flex-shrink: 5 !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-sm-flexExpand {
    margin: auto !important;
  }

  .u-sm-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-sm-flexExpandRight {
    margin-right: auto !important;
  }

  .u-sm-flexExpandTop {
    margin-top: auto !important;
  }

  .u-sm-flexExpandBottom {
    margin-bottom: auto !important;
  }

  /**
   * Basis
   */

  .u-sm-flexBasisAuto {
    flex-basis: auto !important;
  }

  .u-sm-flexBasis0 {
    flex-basis: 0 !important;
  }

  /*
   * Shorthand
   *
   * Declares all values instead of keywords like 'initial' to work around IE10
   * https://www.w3.org/TR/css-flexbox-1/#flex-common
   *
   * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
   *    This ensures it overrides flex-basis set in other utilities.
   */

  /*
   * Sizes the item based on the width/height properties
   */

  .u-sm-flexInitial {
    -webkit-box-flex: 0 !important;
            flex: 0 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item based on the width/height properties, but makes them fully
   * flexible, so that they absorb any free space along the main axis.
   */

  .u-sm-flexAuto {
    -webkit-box-flex: 1 !important;
            flex: 1 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item according to the width/height properties, but makes the flex
   * item fully inflexible. Similar to initial, except that flex items are
   * not allowed to shrink, even in overflow situations.
   */

  .u-sm-flexNone {
    -webkit-box-flex: 0 !important;
            flex: 0 0 auto !important;
    flex-basis: auto !important; /* 1 */
  }

}

/**
 * @define utilities
 * Size: breakpoint 1 (medium)
 */

@media (min-width: 47em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-md-flex {
    display: -webkit-box !important;
    display: flex !important;
  }

  .u-md-flexInline {
    display: -webkit-inline-box !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-md-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
            flex-direction: row !important;
  }

  .u-md-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-md-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
            flex-direction: column !important;
  }

  .u-md-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-md-flexWrap {
    flex-wrap: wrap !important;
  }

  .u-md-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .u-md-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-md-flexJustifyStart {
    -webkit-box-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-md-flexJustifyEnd {
    -webkit-box-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-md-flexJustifyCenter {
    -webkit-box-pack: center !important;
            justify-content: center !important;
  }

  .u-md-flexJustifyBetween {
    -webkit-box-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-md-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-md-flexAlignItemsStart {
    -webkit-box-align: start !important;
            align-items: flex-start !important;
  }

  .u-md-flexAlignItemsEnd {
    -webkit-box-align: end !important;
            align-items: flex-end !important;
  }

  .u-md-flexAlignItemsCenter {
    -webkit-box-align: center !important;
            align-items: center !important;
  }

  .u-md-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
            align-items: stretch !important;
  }

  .u-md-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-md-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .u-md-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .u-md-flexAlignContentCenter {
    align-content: center !important;
  }

  .u-md-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .u-md-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .u-md-flexAlignContentAround {
    align-content: space-around !important;
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-md-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .u-md-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .u-md-flexAlignSelfCenter {
    align-self: center !important;
  }

  .u-md-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .u-md-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .u-md-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-md-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
            order: -1 !important;
  }

  .u-md-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
            order: 1 !important;
  }

  .u-md-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-md-flexGrow1 {
    -webkit-box-flex: 1 !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-md-flexGrow2 {
    -webkit-box-flex: 2 !important;
            flex: 2 1 0% !important;
  }

  .u-md-flexGrow3 {
    -webkit-box-flex: 3 !important;
            flex: 3 1 0% !important;
  }

  .u-md-flexGrow4 {
    -webkit-box-flex: 4 !important;
            flex: 4 1 0% !important;
  }

  .u-md-flexGrow5 {
    -webkit-box-flex: 5 !important;
            flex: 5 1 0% !important;
  }

  /**
   * Specify the flex shrink factor, which determines how much the flex item
   * will shrink relative to the rest of the flex items in the flex container.
   */

  .u-md-flexShrink0 {
    flex-shrink: 0 !important;
  }

  .u-md-flexShrink1 {
    flex-shrink: 1 !important;
  }

  .u-md-flexShrink2 {
    flex-shrink: 2 !important;
  }

  .u-md-flexShrink3 {
    flex-shrink: 3 !important;
  }

  .u-md-flexShrink4 {
    flex-shrink: 4 !important;
  }

  .u-md-flexShrink5 {
    flex-shrink: 5 !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-md-flexExpand {
    margin: auto !important;
  }

  .u-md-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-md-flexExpandRight {
    margin-right: auto !important;
  }

  .u-md-flexExpandTop {
    margin-top: auto !important;
  }

  .u-md-flexExpandBottom {
    margin-bottom: auto !important;
  }

  /**
   * Basis
   */

  .u-md-flexBasisAuto {
    flex-basis: auto !important;
  }

  .u-md-flexBasis0 {
    flex-basis: 0 !important;
  }

  /*
   * Shorthand
   *
   * Declares all values instead of keywords like 'initial' to work around IE10
   * https://www.w3.org/TR/css-flexbox-1/#flex-common
   *
   * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
   *    This ensures it overrides flex-basis set in other utilities.
   */

  /*
   * Sizes the item based on the width/height properties
   */

  .u-md-flexInitial {
    -webkit-box-flex: 0 !important;
            flex: 0 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item based on the width/height properties, but makes them fully
   * flexible, so that they absorb any free space along the main axis.
   */

  .u-md-flexAuto {
    -webkit-box-flex: 1 !important;
            flex: 1 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item according to the width/height properties, but makes the flex
   * item fully inflexible. Similar to initial, except that flex items are
   * not allowed to shrink, even in overflow situations.
   */

  .u-md-flexNone {
    -webkit-box-flex: 0 !important;
            flex: 0 0 auto !important;
    flex-basis: auto !important; /* 1 */
  }

}

/**
 * @define utilities
 * Size: breakpoint 1 (large)
 */

@media (min-width: 64em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-lg-flex {
    display: -webkit-box !important;
    display: flex !important;
  }

  .u-lg-flexInline {
    display: -webkit-inline-box !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-lg-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
            flex-direction: row !important;
  }

  .u-lg-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-lg-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
            flex-direction: column !important;
  }

  .u-lg-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-lg-flexWrap {
    flex-wrap: wrap !important;
  }

  .u-lg-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .u-lg-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-lg-flexJustifyStart {
    -webkit-box-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-lg-flexJustifyEnd {
    -webkit-box-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-lg-flexJustifyCenter {
    -webkit-box-pack: center !important;
            justify-content: center !important;
  }

  .u-lg-flexJustifyBetween {
    -webkit-box-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-lg-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-lg-flexAlignItemsStart {
    -webkit-box-align: start !important;
            align-items: flex-start !important;
  }

  .u-lg-flexAlignItemsEnd {
    -webkit-box-align: end !important;
            align-items: flex-end !important;
  }

  .u-lg-flexAlignItemsCenter {
    -webkit-box-align: center !important;
            align-items: center !important;
  }

  .u-lg-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
            align-items: stretch !important;
  }

  .u-lg-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-lg-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .u-lg-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .u-lg-flexAlignContentCenter {
    align-content: center !important;
  }

  .u-lg-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .u-lg-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .u-lg-flexAlignContentAround {
    align-content: space-around !important;
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-lg-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .u-lg-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .u-lg-flexAlignSelfCenter {
    align-self: center !important;
  }

  .u-lg-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .u-lg-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .u-lg-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-lg-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
            order: -1 !important;
  }

  .u-lg-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
            order: 1 !important;
  }

  .u-lg-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-lg-flexGrow1 {
    -webkit-box-flex: 1 !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-lg-flexGrow2 {
    -webkit-box-flex: 2 !important;
            flex: 2 1 0% !important;
  }

  .u-lg-flexGrow3 {
    -webkit-box-flex: 3 !important;
            flex: 3 1 0% !important;
  }

  .u-lg-flexGrow4 {
    -webkit-box-flex: 4 !important;
            flex: 4 1 0% !important;
  }

  .u-lg-flexGrow5 {
    -webkit-box-flex: 5 !important;
            flex: 5 1 0% !important;
  }

  /**
   * Specify the flex shrink factor, which determines how much the flex item
   * will shrink relative to the rest of the flex items in the flex container.
   */

  .u-lg-flexShrink0 {
    flex-shrink: 0 !important;
  }

  .u-lg-flexShrink1 {
    flex-shrink: 1 !important;
  }

  .u-lg-flexShrink2 {
    flex-shrink: 2 !important;
  }

  .u-lg-flexShrink3 {
    flex-shrink: 3 !important;
  }

  .u-lg-flexShrink4 {
    flex-shrink: 4 !important;
  }

  .u-lg-flexShrink5 {
    flex-shrink: 5 !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-lg-flexExpand {
    margin: auto !important;
  }

  .u-lg-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-lg-flexExpandRight {
    margin-right: auto !important;
  }

  .u-lg-flexExpandTop {
    margin-top: auto !important;
  }

  .u-lg-flexExpandBottom {
    margin-bottom: auto !important;
  }

  /**
   * Basis
   */

  .u-lg-flexBasisAuto {
    flex-basis: auto !important;
  }

  .u-lg-flexBasis0 {
    flex-basis: 0 !important;
  }

  /*
   * Shorthand
   *
   * Declares all values instead of keywords like 'initial' to work around IE10
   * https://www.w3.org/TR/css-flexbox-1/#flex-common
   *
   * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
   *    This ensures it overrides flex-basis set in other utilities.
   */

  /*
   * Sizes the item based on the width/height properties
   */

  .u-lg-flexInitial {
    -webkit-box-flex: 0 !important;
            flex: 0 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item based on the width/height properties, but makes them fully
   * flexible, so that they absorb any free space along the main axis.
   */

  .u-lg-flexAuto {
    -webkit-box-flex: 1 !important;
            flex: 1 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item according to the width/height properties, but makes the flex
   * item fully inflexible. Similar to initial, except that flex items are
   * not allowed to shrink, even in overflow situations.
   */

  .u-lg-flexNone {
    -webkit-box-flex: 0 !important;
            flex: 0 0 auto !important;
    flex-basis: auto !important; /* 1 */
  }

}

.u-flexExpandEnds {
  margin-bottom: auto !important;
  margin-top: auto !important;
}

.u-flexExpandSides {
  margin-left: auto !important;
  margin-right: auto !important;
}

@media (min-width: 30em) {
  .u-sm-flexExpandEnds {
    margin-bottom: auto !important;
    margin-top: auto !important;
  }

  .u-sm-flexExpandSides {
    margin-left: auto !important;
    margin-right: auto !important;
  }
}

@media (min-width: 47em) {
  .u-md-flexExpandEnds {
    margin-bottom: auto !important;
    margin-top: auto !important;
  }

  .u-md-flexExpandSides {
    margin-left: auto !important;
    margin-right: auto !important;
  }
}

@media (min-width: 64em) {
  .u-lg-flexExpandEnds {
    margin-bottom: auto !important;
    margin-top: auto !important;
  }

  .u-lg-flexExpandSides {
    margin-left: auto !important;
    margin-right: auto !important;
  }
}

/**
 * @define utilities
 */

.u-linkClean, .u-linkClean:hover, .u-linkClean:focus, .u-linkClean:active, .u-linkModest:not(:hover):not(:focus):not(:active) {
  color: inherit !important;
  text-decoration: inherit !important;
}

/**
 * @define utilities
 */

/**
 * Reset default list appearance.
 */

.u-listReset,
.u-listInline {
  list-style: none;
  padding-left: 0;
}

/**
 * Because the inline list use case is so simple, we're going to fudge our
 * selector depth rule in favor of usability.
 *
 * Alternatively we could set flex display on the parent, but then the list
 * wouldn't respect text alignment, which seems counter-intuitive for this
 * particular case.
 */

/* stylelint-disable plugin/selector-bem-pattern */

.u-listInline > * {
  display: inline-block;
}

/**
 * Gap between items. This favors left positioning, but because items are likely
 * of varying lengths the differences will be hard to perceive.
 */

.u-listInline > *:not(:last-child) {
  margin-right: 0.579em;
}

/* stylelint-enable */

/**
 * @define utilities
 */

/**
 * @define utilities
 * Sizing utilities
 */

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */

.u-size1of12 {
  flex-basis: auto !important;
  width: 8.33333% !important;
}

.u-size1of10 {
  flex-basis: auto !important;
  width: 10% !important;
}

.u-size1of8 {
  flex-basis: auto !important;
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  flex-basis: auto !important;
  width: 16.66667% !important;
}

.u-size1of5,
.u-size2of10 {
  flex-basis: auto !important;
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  flex-basis: auto !important;
  width: 25% !important;
}

.u-size3of10 {
  flex-basis: auto !important;
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  flex-basis: auto !important;
  width: 33.33333% !important;
}

.u-size3of8 {
  flex-basis: auto !important;
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  flex-basis: auto !important;
  width: 40% !important;
}

.u-size5of12 {
  flex-basis: auto !important;
  width: 41.66667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  flex-basis: auto !important;
  width: 50% !important;
}

.u-size7of12 {
  flex-basis: auto !important;
  width: 58.33333% !important;
}

.u-size3of5,
.u-size6of10 {
  flex-basis: auto !important;
  width: 60% !important;
}

.u-size5of8 {
  flex-basis: auto !important;
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  flex-basis: auto !important;
  width: 66.66667% !important;
}

.u-size7of10 {
  flex-basis: auto !important;
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  flex-basis: auto !important;
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  flex-basis: auto !important;
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  flex-basis: auto !important;
  width: 83.33333% !important;
}

.u-size7of8 {
  flex-basis: auto !important;
  width: 87.5% !important;
}

.u-size9of10 {
  flex-basis: auto !important;
  width: 90% !important;
}

.u-size11of12 {
  flex-basis: auto !important;
  width: 91.66667% !important;
}

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.u-sizeFit {
  flex-basis: auto !important;
}

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex
 *    http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
 *    http://git.io/vllMt
 */

.u-sizeFill {
  -webkit-box-flex: 1 !important;
          flex: 1 1 0% !important; /* 1 */
  flex-basis: 0% !important; /* 2 */
}

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */

.u-sizeFillAlt {
  -webkit-box-flex: 1 !important;
          flex: 1 1 auto !important;
  flex-basis: auto !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  width: 100% !important;
}

/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (min-width: 30em) {

  /* Proportional widths: breakpoint 1 (small)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .u-sm-size1of12 {
    flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-sm-size1of10 {
    flex-basis: auto !important;
    width: 10% !important;
  }

  .u-sm-size1of8 {
    flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-sm-size1of6,
  .u-sm-size2of12 {
    flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-sm-size1of5,
  .u-sm-size2of10 {
    flex-basis: auto !important;
    width: 20% !important;
  }

  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    flex-basis: auto !important;
    width: 25% !important;
  }

  .u-sm-size3of10 {
    flex-basis: auto !important;
    width: 30% !important;
  }

  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-sm-size3of8 {
    flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-sm-size2of5,
  .u-sm-size4of10 {
    flex-basis: auto !important;
    width: 40% !important;
  }

  .u-sm-size5of12 {
    flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    flex-basis: auto !important;
    width: 50% !important;
  }

  .u-sm-size7of12 {
    flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-sm-size3of5,
  .u-sm-size6of10 {
    flex-basis: auto !important;
    width: 60% !important;
  }

  .u-sm-size5of8 {
    flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-sm-size7of10 {
    flex-basis: auto !important;
    width: 70% !important;
  }

  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    flex-basis: auto !important;
    width: 75% !important;
  }

  .u-sm-size4of5,
  .u-sm-size8of10 {
    flex-basis: auto !important;
    width: 80% !important;
  }

  .u-sm-size5of6,
  .u-sm-size10of12 {
    flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-sm-size7of8 {
    flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-sm-size9of10 {
    flex-basis: auto !important;
    width: 90% !important;
  }

  .u-sm-size11of12 {
    flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-sm-sizeFit {
    flex-basis: auto !important;
    width: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-sm-sizeFill {
    -webkit-box-flex: 1 !important;
            flex: 1 1 0% !important; /* 1 */
    flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-sm-sizeFillAlt {
    -webkit-box-flex: 1 !important;
            flex: 1 1 auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-sm-sizeFull {
    width: 100% !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 2 (medium)
 */

@media (min-width: 47em) {

  /* Proportional widths: breakpoint 2 (medium)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  /* postcss-bem-linter: ignore */

  .u-md-size1of12 {
    flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-md-size1of10 {
    flex-basis: auto !important;
    width: 10% !important;
  }

  .u-md-size1of8 {
    flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-md-size1of6,
  .u-md-size2of12 {
    flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-md-size1of5,
  .u-md-size2of10 {
    flex-basis: auto !important;
    width: 20% !important;
  }

  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    flex-basis: auto !important;
    width: 25% !important;
  }

  .u-md-size3of10 {
    flex-basis: auto !important;
    width: 30% !important;
  }

  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-md-size3of8 {
    flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-md-size2of5,
  .u-md-size4of10 {
    flex-basis: auto !important;
    width: 40% !important;
  }

  .u-md-size5of12 {
    flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    flex-basis: auto !important;
    width: 50% !important;
  }

  .u-md-size7of12 {
    flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-md-size3of5,
  .u-md-size6of10 {
    flex-basis: auto !important;
    width: 60% !important;
  }

  .u-md-size5of8 {
    flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-md-size7of10 {
    flex-basis: auto !important;
    width: 70% !important;
  }

  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    flex-basis: auto !important;
    width: 75% !important;
  }

  .u-md-size4of5,
  .u-md-size8of10 {
    flex-basis: auto !important;
    width: 80% !important;
  }

  .u-md-size5of6,
  .u-md-size10of12 {
    flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-md-size7of8 {
    flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-md-size9of10 {
    flex-basis: auto !important;
    width: 90% !important;
  }

  .u-md-size11of12 {
    flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-md-sizeFit {
    flex-basis: auto !important;
    width: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-md-sizeFill {
    -webkit-box-flex: 1 !important;
            flex: 1 1 0% !important; /* 1 */
    flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-md-sizeFillAlt {
    -webkit-box-flex: 1 !important;
            flex: 1 1 auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-md-sizeFull {
    width: 100% !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 3 (large)
 */

@media (min-width: 64em) {

  /* Proportional widths: breakpoint 3 (large)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .u-lg-size1of12 {
    flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-lg-size1of10 {
    flex-basis: auto !important;
    width: 10% !important;
  }

  .u-lg-size1of8 {
    flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-lg-size1of6,
  .u-lg-size2of12 {
    flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-lg-size1of5,
  .u-lg-size2of10 {
    flex-basis: auto !important;
    width: 20% !important;
  }

  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    flex-basis: auto !important;
    width: 25% !important;
  }

  .u-lg-size3of10 {
    flex-basis: auto !important;
    width: 30% !important;
  }

  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-lg-size3of8 {
    flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-lg-size2of5,
  .u-lg-size4of10 {
    flex-basis: auto !important;
    width: 40% !important;
  }

  .u-lg-size5of12 {
    flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    flex-basis: auto !important;
    width: 50% !important;
  }

  .u-lg-size7of12 {
    flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-lg-size3of5,
  .u-lg-size6of10 {
    flex-basis: auto !important;
    width: 60% !important;
  }

  .u-lg-size5of8 {
    flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-lg-size7of10 {
    flex-basis: auto !important;
    width: 70% !important;
  }

  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    flex-basis: auto !important;
    width: 75% !important;
  }

  .u-lg-size4of5,
  .u-lg-size8of10 {
    flex-basis: auto !important;
    width: 80% !important;
  }

  .u-lg-size5of6,
  .u-lg-size10of12 {
    flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-lg-size7of8 {
    flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-lg-size9of10 {
    flex-basis: auto !important;
    width: 90% !important;
  }

  .u-lg-size11of12 {
    flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-lg-sizeFit {
    flex-basis: auto !important;
    width: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-lg-sizeFill {
    -webkit-box-flex: 1 !important;
            flex: 1 1 0% !important; /* 1 */
    flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-lg-sizeFillAlt {
    -webkit-box-flex: 1 !important;
            flex: 1 1 auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-lg-sizeFull {
    width: 100% !important;
  }

}

/**
 * @define utilities
 */

/* stylelint-disable function-whitespace-after, plugin/selector-bem-pattern */

/**
 * Mixin: Make utility class that adds vertical space between adjacent items.
 *
 * @see http://alistapart.com/article/axiomatic-css-and-lobotomized-owls
 */

/**
 * Mixin: Make utility classes for adding space outside one or more edges of
 * an element.
 */

/**
 * Mixin: Make utility classes for adding space inside one or more edges of an
 * element.
 */

/**
 * Mixin: Make space between, inside and outside utilities for each step in our
 * modular scale. Optional $prefix allows for creation of responsive variations.
 */

/**
 * Actually output space utilities, default and for various breakpoints.
 */

/**
   * Negative scale steps swap `-` for `0`.
   */

.u-spaceItems06 > * + * {
    margin-top: 5.36px !important;
    margin-top: 0.335rem !important;
  }

.u-staggerItems06 > * + * {
    margin-top: 0.335em !important;
  }

.u-space06 {
    margin: 5.36px !important;
    margin: 0.335rem !important;
  }

.u-spaceEnds06 {
    margin-bottom: 5.36px !important;
    margin-bottom: 0.335rem !important;
    margin-top: 5.36px !important;
    margin-top: 0.335rem !important;
  }

.u-spaceSides06 {
    margin-left: 5.36px !important;
    margin-left: 0.335rem !important;
    margin-right: 5.36px !important;
    margin-right: 0.335rem !important;
  }

.u-spaceTop06 {
    margin-top: 5.36px !important;
    margin-top: 0.335rem !important;
  }

.u-spaceBottom06 {
    margin-bottom: 5.36px !important;
    margin-bottom: 0.335rem !important;
  }

.u-spaceLeft06 {
    margin-left: 5.36px !important;
    margin-left: 0.335rem !important;
  }

.u-spaceRight06 {
    margin-right: 5.36px !important;
    margin-right: 0.335rem !important;
  }

.u-pull06 {
    margin: -5.36px !important;
    margin: -0.335rem !important;
  }

.u-pullEnds06 {
    margin-bottom: -5.36px !important;
    margin-bottom: -0.335rem !important;
    margin-top: -5.36px !important;
    margin-top: -0.335rem !important;
  }

.u-pullSides06 {
    margin-left: -5.36px !important;
    margin-left: -0.335rem !important;
    margin-right: -5.36px !important;
    margin-right: -0.335rem !important;
  }

.u-pullTop06 {
    margin-top: -5.36px !important;
    margin-top: -0.335rem !important;
  }

.u-pullBottom06 {
    margin-bottom: -5.36px !important;
    margin-bottom: -0.335rem !important;
  }

.u-pullLeft06 {
    margin-left: -5.36px !important;
    margin-left: -0.335rem !important;
  }

.u-pullRight06 {
    margin-right: -5.36px !important;
    margin-right: -0.335rem !important;
  }

.u-pad06 {
    padding: 5.36px !important;
    padding: 0.335rem !important;
  }

.u-padEnds06 {
    padding-bottom: 5.36px !important;
    padding-bottom: 0.335rem !important;
    padding-top: 5.36px !important;
    padding-top: 0.335rem !important;
  }

.u-padSides06 {
    padding-left: 5.36px !important;
    padding-left: 0.335rem !important;
    padding-right: 5.36px !important;
    padding-right: 0.335rem !important;
  }

.u-padTop06 {
    padding-top: 5.36px !important;
    padding-top: 0.335rem !important;
  }

.u-padBottom06 {
    padding-bottom: 5.36px !important;
    padding-bottom: 0.335rem !important;
  }

.u-padLeft06 {
    padding-left: 5.36px !important;
    padding-left: 0.335rem !important;
  }

.u-padRight06 {
    padding-right: 5.36px !important;
    padding-right: 0.335rem !important;
  }

.u-spaceItems05 > * + * {
    margin-top: 6.432px !important;
    margin-top: 0.402rem !important;
  }

.u-staggerItems05 > * + * {
    margin-top: 0.402em !important;
  }

.u-space05 {
    margin: 6.432px !important;
    margin: 0.402rem !important;
  }

.u-spaceEnds05 {
    margin-bottom: 6.432px !important;
    margin-bottom: 0.402rem !important;
    margin-top: 6.432px !important;
    margin-top: 0.402rem !important;
  }

.u-spaceSides05 {
    margin-left: 6.432px !important;
    margin-left: 0.402rem !important;
    margin-right: 6.432px !important;
    margin-right: 0.402rem !important;
  }

.u-spaceTop05 {
    margin-top: 6.432px !important;
    margin-top: 0.402rem !important;
  }

.u-spaceBottom05 {
    margin-bottom: 6.432px !important;
    margin-bottom: 0.402rem !important;
  }

.u-spaceLeft05 {
    margin-left: 6.432px !important;
    margin-left: 0.402rem !important;
  }

.u-spaceRight05 {
    margin-right: 6.432px !important;
    margin-right: 0.402rem !important;
  }

.u-pull05 {
    margin: -6.432px !important;
    margin: -0.402rem !important;
  }

.u-pullEnds05 {
    margin-bottom: -6.432px !important;
    margin-bottom: -0.402rem !important;
    margin-top: -6.432px !important;
    margin-top: -0.402rem !important;
  }

.u-pullSides05 {
    margin-left: -6.432px !important;
    margin-left: -0.402rem !important;
    margin-right: -6.432px !important;
    margin-right: -0.402rem !important;
  }

.u-pullTop05 {
    margin-top: -6.432px !important;
    margin-top: -0.402rem !important;
  }

.u-pullBottom05 {
    margin-bottom: -6.432px !important;
    margin-bottom: -0.402rem !important;
  }

.u-pullLeft05 {
    margin-left: -6.432px !important;
    margin-left: -0.402rem !important;
  }

.u-pullRight05 {
    margin-right: -6.432px !important;
    margin-right: -0.402rem !important;
  }

.u-pad05 {
    padding: 6.432px !important;
    padding: 0.402rem !important;
  }

.u-padEnds05 {
    padding-bottom: 6.432px !important;
    padding-bottom: 0.402rem !important;
    padding-top: 6.432px !important;
    padding-top: 0.402rem !important;
  }

.u-padSides05 {
    padding-left: 6.432px !important;
    padding-left: 0.402rem !important;
    padding-right: 6.432px !important;
    padding-right: 0.402rem !important;
  }

.u-padTop05 {
    padding-top: 6.432px !important;
    padding-top: 0.402rem !important;
  }

.u-padBottom05 {
    padding-bottom: 6.432px !important;
    padding-bottom: 0.402rem !important;
  }

.u-padLeft05 {
    padding-left: 6.432px !important;
    padding-left: 0.402rem !important;
  }

.u-padRight05 {
    padding-right: 6.432px !important;
    padding-right: 0.402rem !important;
  }

.u-spaceItems04 > * + * {
    margin-top: 7.712px !important;
    margin-top: 0.482rem !important;
  }

.u-staggerItems04 > * + * {
    margin-top: 0.482em !important;
  }

.u-space04 {
    margin: 7.712px !important;
    margin: 0.482rem !important;
  }

.u-spaceEnds04 {
    margin-bottom: 7.712px !important;
    margin-bottom: 0.482rem !important;
    margin-top: 7.712px !important;
    margin-top: 0.482rem !important;
  }

.u-spaceSides04 {
    margin-left: 7.712px !important;
    margin-left: 0.482rem !important;
    margin-right: 7.712px !important;
    margin-right: 0.482rem !important;
  }

.u-spaceTop04 {
    margin-top: 7.712px !important;
    margin-top: 0.482rem !important;
  }

.u-spaceBottom04 {
    margin-bottom: 7.712px !important;
    margin-bottom: 0.482rem !important;
  }

.u-spaceLeft04 {
    margin-left: 7.712px !important;
    margin-left: 0.482rem !important;
  }

.u-spaceRight04 {
    margin-right: 7.712px !important;
    margin-right: 0.482rem !important;
  }

.u-pull04 {
    margin: -7.712px !important;
    margin: -0.482rem !important;
  }

.u-pullEnds04 {
    margin-bottom: -7.712px !important;
    margin-bottom: -0.482rem !important;
    margin-top: -7.712px !important;
    margin-top: -0.482rem !important;
  }

.u-pullSides04 {
    margin-left: -7.712px !important;
    margin-left: -0.482rem !important;
    margin-right: -7.712px !important;
    margin-right: -0.482rem !important;
  }

.u-pullTop04 {
    margin-top: -7.712px !important;
    margin-top: -0.482rem !important;
  }

.u-pullBottom04 {
    margin-bottom: -7.712px !important;
    margin-bottom: -0.482rem !important;
  }

.u-pullLeft04 {
    margin-left: -7.712px !important;
    margin-left: -0.482rem !important;
  }

.u-pullRight04 {
    margin-right: -7.712px !important;
    margin-right: -0.482rem !important;
  }

.u-pad04 {
    padding: 7.712px !important;
    padding: 0.482rem !important;
  }

.u-padEnds04 {
    padding-bottom: 7.712px !important;
    padding-bottom: 0.482rem !important;
    padding-top: 7.712px !important;
    padding-top: 0.482rem !important;
  }

.u-padSides04 {
    padding-left: 7.712px !important;
    padding-left: 0.482rem !important;
    padding-right: 7.712px !important;
    padding-right: 0.482rem !important;
  }

.u-padTop04 {
    padding-top: 7.712px !important;
    padding-top: 0.482rem !important;
  }

.u-padBottom04 {
    padding-bottom: 7.712px !important;
    padding-bottom: 0.482rem !important;
  }

.u-padLeft04 {
    padding-left: 7.712px !important;
    padding-left: 0.482rem !important;
  }

.u-padRight04 {
    padding-right: 7.712px !important;
    padding-right: 0.482rem !important;
  }

.u-spaceItems03 > * + * {
    margin-top: 9.264px !important;
    margin-top: 0.579rem !important;
  }

.u-staggerItems03 > * + * {
    margin-top: 0.579em !important;
  }

.u-space03 {
    margin: 9.264px !important;
    margin: 0.579rem !important;
  }

.u-spaceEnds03 {
    margin-bottom: 9.264px !important;
    margin-bottom: 0.579rem !important;
    margin-top: 9.264px !important;
    margin-top: 0.579rem !important;
  }

.u-spaceSides03 {
    margin-left: 9.264px !important;
    margin-left: 0.579rem !important;
    margin-right: 9.264px !important;
    margin-right: 0.579rem !important;
  }

.u-spaceTop03 {
    margin-top: 9.264px !important;
    margin-top: 0.579rem !important;
  }

.u-spaceBottom03 {
    margin-bottom: 9.264px !important;
    margin-bottom: 0.579rem !important;
  }

.u-spaceLeft03 {
    margin-left: 9.264px !important;
    margin-left: 0.579rem !important;
  }

.u-spaceRight03 {
    margin-right: 9.264px !important;
    margin-right: 0.579rem !important;
  }

.u-pull03 {
    margin: -9.264px !important;
    margin: -0.579rem !important;
  }

.u-pullEnds03 {
    margin-bottom: -9.264px !important;
    margin-bottom: -0.579rem !important;
    margin-top: -9.264px !important;
    margin-top: -0.579rem !important;
  }

.u-pullSides03 {
    margin-left: -9.264px !important;
    margin-left: -0.579rem !important;
    margin-right: -9.264px !important;
    margin-right: -0.579rem !important;
  }

.u-pullTop03 {
    margin-top: -9.264px !important;
    margin-top: -0.579rem !important;
  }

.u-pullBottom03 {
    margin-bottom: -9.264px !important;
    margin-bottom: -0.579rem !important;
  }

.u-pullLeft03 {
    margin-left: -9.264px !important;
    margin-left: -0.579rem !important;
  }

.u-pullRight03 {
    margin-right: -9.264px !important;
    margin-right: -0.579rem !important;
  }

.u-pad03 {
    padding: 9.264px !important;
    padding: 0.579rem !important;
  }

.u-padEnds03 {
    padding-bottom: 9.264px !important;
    padding-bottom: 0.579rem !important;
    padding-top: 9.264px !important;
    padding-top: 0.579rem !important;
  }

.u-padSides03 {
    padding-left: 9.264px !important;
    padding-left: 0.579rem !important;
    padding-right: 9.264px !important;
    padding-right: 0.579rem !important;
  }

.u-padTop03 {
    padding-top: 9.264px !important;
    padding-top: 0.579rem !important;
  }

.u-padBottom03 {
    padding-bottom: 9.264px !important;
    padding-bottom: 0.579rem !important;
  }

.u-padLeft03 {
    padding-left: 9.264px !important;
    padding-left: 0.579rem !important;
  }

.u-padRight03 {
    padding-right: 9.264px !important;
    padding-right: 0.579rem !important;
  }

.u-spaceItems02 > * + * {
    margin-top: 11.104px !important;
    margin-top: 0.694rem !important;
  }

.u-staggerItems02 > * + * {
    margin-top: 0.694em !important;
  }

.u-space02 {
    margin: 11.104px !important;
    margin: 0.694rem !important;
  }

.u-spaceEnds02 {
    margin-bottom: 11.104px !important;
    margin-bottom: 0.694rem !important;
    margin-top: 11.104px !important;
    margin-top: 0.694rem !important;
  }

.u-spaceSides02 {
    margin-left: 11.104px !important;
    margin-left: 0.694rem !important;
    margin-right: 11.104px !important;
    margin-right: 0.694rem !important;
  }

.u-spaceTop02 {
    margin-top: 11.104px !important;
    margin-top: 0.694rem !important;
  }

.u-spaceBottom02 {
    margin-bottom: 11.104px !important;
    margin-bottom: 0.694rem !important;
  }

.u-spaceLeft02 {
    margin-left: 11.104px !important;
    margin-left: 0.694rem !important;
  }

.u-spaceRight02 {
    margin-right: 11.104px !important;
    margin-right: 0.694rem !important;
  }

.u-pull02 {
    margin: -11.104px !important;
    margin: -0.694rem !important;
  }

.u-pullEnds02 {
    margin-bottom: -11.104px !important;
    margin-bottom: -0.694rem !important;
    margin-top: -11.104px !important;
    margin-top: -0.694rem !important;
  }

.u-pullSides02 {
    margin-left: -11.104px !important;
    margin-left: -0.694rem !important;
    margin-right: -11.104px !important;
    margin-right: -0.694rem !important;
  }

.u-pullTop02 {
    margin-top: -11.104px !important;
    margin-top: -0.694rem !important;
  }

.u-pullBottom02 {
    margin-bottom: -11.104px !important;
    margin-bottom: -0.694rem !important;
  }

.u-pullLeft02 {
    margin-left: -11.104px !important;
    margin-left: -0.694rem !important;
  }

.u-pullRight02 {
    margin-right: -11.104px !important;
    margin-right: -0.694rem !important;
  }

.u-pad02 {
    padding: 11.104px !important;
    padding: 0.694rem !important;
  }

.u-padEnds02 {
    padding-bottom: 11.104px !important;
    padding-bottom: 0.694rem !important;
    padding-top: 11.104px !important;
    padding-top: 0.694rem !important;
  }

.u-padSides02 {
    padding-left: 11.104px !important;
    padding-left: 0.694rem !important;
    padding-right: 11.104px !important;
    padding-right: 0.694rem !important;
  }

.u-padTop02 {
    padding-top: 11.104px !important;
    padding-top: 0.694rem !important;
  }

.u-padBottom02 {
    padding-bottom: 11.104px !important;
    padding-bottom: 0.694rem !important;
  }

.u-padLeft02 {
    padding-left: 11.104px !important;
    padding-left: 0.694rem !important;
  }

.u-padRight02 {
    padding-right: 11.104px !important;
    padding-right: 0.694rem !important;
  }

.u-spaceItems01 > * + * {
    margin-top: 13.328px !important;
    margin-top: 0.833rem !important;
  }

.u-staggerItems01 > * + * {
    margin-top: 0.833em !important;
  }

.u-space01 {
    margin: 13.328px !important;
    margin: 0.833rem !important;
  }

.u-spaceEnds01 {
    margin-bottom: 13.328px !important;
    margin-bottom: 0.833rem !important;
    margin-top: 13.328px !important;
    margin-top: 0.833rem !important;
  }

.u-spaceSides01 {
    margin-left: 13.328px !important;
    margin-left: 0.833rem !important;
    margin-right: 13.328px !important;
    margin-right: 0.833rem !important;
  }

.u-spaceTop01 {
    margin-top: 13.328px !important;
    margin-top: 0.833rem !important;
  }

.u-spaceBottom01 {
    margin-bottom: 13.328px !important;
    margin-bottom: 0.833rem !important;
  }

.u-spaceLeft01 {
    margin-left: 13.328px !important;
    margin-left: 0.833rem !important;
  }

.u-spaceRight01 {
    margin-right: 13.328px !important;
    margin-right: 0.833rem !important;
  }

.u-pull01 {
    margin: -13.328px !important;
    margin: -0.833rem !important;
  }

.u-pullEnds01 {
    margin-bottom: -13.328px !important;
    margin-bottom: -0.833rem !important;
    margin-top: -13.328px !important;
    margin-top: -0.833rem !important;
  }

.u-pullSides01 {
    margin-left: -13.328px !important;
    margin-left: -0.833rem !important;
    margin-right: -13.328px !important;
    margin-right: -0.833rem !important;
  }

.u-pullTop01 {
    margin-top: -13.328px !important;
    margin-top: -0.833rem !important;
  }

.u-pullBottom01 {
    margin-bottom: -13.328px !important;
    margin-bottom: -0.833rem !important;
  }

.u-pullLeft01 {
    margin-left: -13.328px !important;
    margin-left: -0.833rem !important;
  }

.u-pullRight01 {
    margin-right: -13.328px !important;
    margin-right: -0.833rem !important;
  }

.u-pad01 {
    padding: 13.328px !important;
    padding: 0.833rem !important;
  }

.u-padEnds01 {
    padding-bottom: 13.328px !important;
    padding-bottom: 0.833rem !important;
    padding-top: 13.328px !important;
    padding-top: 0.833rem !important;
  }

.u-padSides01 {
    padding-left: 13.328px !important;
    padding-left: 0.833rem !important;
    padding-right: 13.328px !important;
    padding-right: 0.833rem !important;
  }

.u-padTop01 {
    padding-top: 13.328px !important;
    padding-top: 0.833rem !important;
  }

.u-padBottom01 {
    padding-bottom: 13.328px !important;
    padding-bottom: 0.833rem !important;
  }

.u-padLeft01 {
    padding-left: 13.328px !important;
    padding-left: 0.833rem !important;
  }

.u-padRight01 {
    padding-right: 13.328px !important;
    padding-right: 0.833rem !important;
  }

/**
   * Default values omit the suffix and use the `0` step.
   */

.u-spaceItems > * + * {
    margin-top: 16px !important;
    margin-top: 1rem !important;
  }

.u-staggerItems > * + * {
    margin-top: 1em !important;
  }

.u-space {
    margin: 16px !important;
    margin: 1rem !important;
  }

.u-spaceEnds {
    margin-bottom: 16px !important;
    margin-bottom: 1rem !important;
    margin-top: 16px !important;
    margin-top: 1rem !important;
  }

.u-spaceSides {
    margin-left: 16px !important;
    margin-left: 1rem !important;
    margin-right: 16px !important;
    margin-right: 1rem !important;
  }

.u-spaceTop {
    margin-top: 16px !important;
    margin-top: 1rem !important;
  }

.u-spaceBottom {
    margin-bottom: 16px !important;
    margin-bottom: 1rem !important;
  }

.u-spaceLeft {
    margin-left: 16px !important;
    margin-left: 1rem !important;
  }

.u-spaceRight {
    margin-right: 16px !important;
    margin-right: 1rem !important;
  }

.u-pull {
    margin: -16px !important;
    margin: -1rem !important;
  }

.u-pullEnds {
    margin-bottom: -16px !important;
    margin-bottom: -1rem !important;
    margin-top: -16px !important;
    margin-top: -1rem !important;
  }

.u-pullSides {
    margin-left: -16px !important;
    margin-left: -1rem !important;
    margin-right: -16px !important;
    margin-right: -1rem !important;
  }

.u-pullTop {
    margin-top: -16px !important;
    margin-top: -1rem !important;
  }

.u-pullBottom {
    margin-bottom: -16px !important;
    margin-bottom: -1rem !important;
  }

.u-pullLeft {
    margin-left: -16px !important;
    margin-left: -1rem !important;
  }

.u-pullRight {
    margin-right: -16px !important;
    margin-right: -1rem !important;
  }

.u-pad {
    padding: 16px !important;
    padding: 1rem !important;
  }

.u-padEnds {
    padding-bottom: 16px !important;
    padding-bottom: 1rem !important;
    padding-top: 16px !important;
    padding-top: 1rem !important;
  }

.u-padSides {
    padding-left: 16px !important;
    padding-left: 1rem !important;
    padding-right: 16px !important;
    padding-right: 1rem !important;
  }

.u-padTop {
    padding-top: 16px !important;
    padding-top: 1rem !important;
  }

.u-padBottom {
    padding-bottom: 16px !important;
    padding-bottom: 1rem !important;
  }

.u-padLeft {
    padding-left: 16px !important;
    padding-left: 1rem !important;
  }

.u-padRight {
    padding-right: 16px !important;
    padding-right: 1rem !important;
  }

/**
   * Positive scale steps.
   */

.u-spaceItems1 > * + * {
    margin-top: 19.2px !important;
    margin-top: 1.2rem !important;
  }

.u-staggerItems1 > * + * {
    margin-top: 1.2em !important;
  }

.u-space1 {
    margin: 19.2px !important;
    margin: 1.2rem !important;
  }

.u-spaceEnds1 {
    margin-bottom: 19.2px !important;
    margin-bottom: 1.2rem !important;
    margin-top: 19.2px !important;
    margin-top: 1.2rem !important;
  }

.u-spaceSides1 {
    margin-left: 19.2px !important;
    margin-left: 1.2rem !important;
    margin-right: 19.2px !important;
    margin-right: 1.2rem !important;
  }

.u-spaceTop1 {
    margin-top: 19.2px !important;
    margin-top: 1.2rem !important;
  }

.u-spaceBottom1 {
    margin-bottom: 19.2px !important;
    margin-bottom: 1.2rem !important;
  }

.u-spaceLeft1 {
    margin-left: 19.2px !important;
    margin-left: 1.2rem !important;
  }

.u-spaceRight1 {
    margin-right: 19.2px !important;
    margin-right: 1.2rem !important;
  }

.u-pull1 {
    margin: -19.2px !important;
    margin: -1.2rem !important;
  }

.u-pullEnds1 {
    margin-bottom: -19.2px !important;
    margin-bottom: -1.2rem !important;
    margin-top: -19.2px !important;
    margin-top: -1.2rem !important;
  }

.u-pullSides1 {
    margin-left: -19.2px !important;
    margin-left: -1.2rem !important;
    margin-right: -19.2px !important;
    margin-right: -1.2rem !important;
  }

.u-pullTop1 {
    margin-top: -19.2px !important;
    margin-top: -1.2rem !important;
  }

.u-pullBottom1 {
    margin-bottom: -19.2px !important;
    margin-bottom: -1.2rem !important;
  }

.u-pullLeft1 {
    margin-left: -19.2px !important;
    margin-left: -1.2rem !important;
  }

.u-pullRight1 {
    margin-right: -19.2px !important;
    margin-right: -1.2rem !important;
  }

.u-pad1 {
    padding: 19.2px !important;
    padding: 1.2rem !important;
  }

.u-padEnds1 {
    padding-bottom: 19.2px !important;
    padding-bottom: 1.2rem !important;
    padding-top: 19.2px !important;
    padding-top: 1.2rem !important;
  }

.u-padSides1 {
    padding-left: 19.2px !important;
    padding-left: 1.2rem !important;
    padding-right: 19.2px !important;
    padding-right: 1.2rem !important;
  }

.u-padTop1 {
    padding-top: 19.2px !important;
    padding-top: 1.2rem !important;
  }

.u-padBottom1 {
    padding-bottom: 19.2px !important;
    padding-bottom: 1.2rem !important;
  }

.u-padLeft1 {
    padding-left: 19.2px !important;
    padding-left: 1.2rem !important;
  }

.u-padRight1 {
    padding-right: 19.2px !important;
    padding-right: 1.2rem !important;
  }

.u-spaceItems2 > * + * {
    margin-top: 23.04px !important;
    margin-top: 1.44rem !important;
  }

.u-staggerItems2 > * + * {
    margin-top: 1.44em !important;
  }

.u-space2 {
    margin: 23.04px !important;
    margin: 1.44rem !important;
  }

.u-spaceEnds2 {
    margin-bottom: 23.04px !important;
    margin-bottom: 1.44rem !important;
    margin-top: 23.04px !important;
    margin-top: 1.44rem !important;
  }

.u-spaceSides2 {
    margin-left: 23.04px !important;
    margin-left: 1.44rem !important;
    margin-right: 23.04px !important;
    margin-right: 1.44rem !important;
  }

.u-spaceTop2 {
    margin-top: 23.04px !important;
    margin-top: 1.44rem !important;
  }

.u-spaceBottom2 {
    margin-bottom: 23.04px !important;
    margin-bottom: 1.44rem !important;
  }

.u-spaceLeft2 {
    margin-left: 23.04px !important;
    margin-left: 1.44rem !important;
  }

.u-spaceRight2 {
    margin-right: 23.04px !important;
    margin-right: 1.44rem !important;
  }

.u-pull2 {
    margin: -23.04px !important;
    margin: -1.44rem !important;
  }

.u-pullEnds2 {
    margin-bottom: -23.04px !important;
    margin-bottom: -1.44rem !important;
    margin-top: -23.04px !important;
    margin-top: -1.44rem !important;
  }

.u-pullSides2 {
    margin-left: -23.04px !important;
    margin-left: -1.44rem !important;
    margin-right: -23.04px !important;
    margin-right: -1.44rem !important;
  }

.u-pullTop2 {
    margin-top: -23.04px !important;
    margin-top: -1.44rem !important;
  }

.u-pullBottom2 {
    margin-bottom: -23.04px !important;
    margin-bottom: -1.44rem !important;
  }

.u-pullLeft2 {
    margin-left: -23.04px !important;
    margin-left: -1.44rem !important;
  }

.u-pullRight2 {
    margin-right: -23.04px !important;
    margin-right: -1.44rem !important;
  }

.u-pad2 {
    padding: 23.04px !important;
    padding: 1.44rem !important;
  }

.u-padEnds2 {
    padding-bottom: 23.04px !important;
    padding-bottom: 1.44rem !important;
    padding-top: 23.04px !important;
    padding-top: 1.44rem !important;
  }

.u-padSides2 {
    padding-left: 23.04px !important;
    padding-left: 1.44rem !important;
    padding-right: 23.04px !important;
    padding-right: 1.44rem !important;
  }

.u-padTop2 {
    padding-top: 23.04px !important;
    padding-top: 1.44rem !important;
  }

.u-padBottom2 {
    padding-bottom: 23.04px !important;
    padding-bottom: 1.44rem !important;
  }

.u-padLeft2 {
    padding-left: 23.04px !important;
    padding-left: 1.44rem !important;
  }

.u-padRight2 {
    padding-right: 23.04px !important;
    padding-right: 1.44rem !important;
  }

.u-spaceItems3 > * + * {
    margin-top: 27.648px !important;
    margin-top: 1.728rem !important;
  }

.u-staggerItems3 > * + * {
    margin-top: 1.728em !important;
  }

.u-space3 {
    margin: 27.648px !important;
    margin: 1.728rem !important;
  }

.u-spaceEnds3 {
    margin-bottom: 27.648px !important;
    margin-bottom: 1.728rem !important;
    margin-top: 27.648px !important;
    margin-top: 1.728rem !important;
  }

.u-spaceSides3 {
    margin-left: 27.648px !important;
    margin-left: 1.728rem !important;
    margin-right: 27.648px !important;
    margin-right: 1.728rem !important;
  }

.u-spaceTop3 {
    margin-top: 27.648px !important;
    margin-top: 1.728rem !important;
  }

.u-spaceBottom3 {
    margin-bottom: 27.648px !important;
    margin-bottom: 1.728rem !important;
  }

.u-spaceLeft3 {
    margin-left: 27.648px !important;
    margin-left: 1.728rem !important;
  }

.u-spaceRight3 {
    margin-right: 27.648px !important;
    margin-right: 1.728rem !important;
  }

.u-pull3 {
    margin: -27.648px !important;
    margin: -1.728rem !important;
  }

.u-pullEnds3 {
    margin-bottom: -27.648px !important;
    margin-bottom: -1.728rem !important;
    margin-top: -27.648px !important;
    margin-top: -1.728rem !important;
  }

.u-pullSides3 {
    margin-left: -27.648px !important;
    margin-left: -1.728rem !important;
    margin-right: -27.648px !important;
    margin-right: -1.728rem !important;
  }

.u-pullTop3 {
    margin-top: -27.648px !important;
    margin-top: -1.728rem !important;
  }

.u-pullBottom3 {
    margin-bottom: -27.648px !important;
    margin-bottom: -1.728rem !important;
  }

.u-pullLeft3 {
    margin-left: -27.648px !important;
    margin-left: -1.728rem !important;
  }

.u-pullRight3 {
    margin-right: -27.648px !important;
    margin-right: -1.728rem !important;
  }

.u-pad3 {
    padding: 27.648px !important;
    padding: 1.728rem !important;
  }

.u-padEnds3 {
    padding-bottom: 27.648px !important;
    padding-bottom: 1.728rem !important;
    padding-top: 27.648px !important;
    padding-top: 1.728rem !important;
  }

.u-padSides3 {
    padding-left: 27.648px !important;
    padding-left: 1.728rem !important;
    padding-right: 27.648px !important;
    padding-right: 1.728rem !important;
  }

.u-padTop3 {
    padding-top: 27.648px !important;
    padding-top: 1.728rem !important;
  }

.u-padBottom3 {
    padding-bottom: 27.648px !important;
    padding-bottom: 1.728rem !important;
  }

.u-padLeft3 {
    padding-left: 27.648px !important;
    padding-left: 1.728rem !important;
  }

.u-padRight3 {
    padding-right: 27.648px !important;
    padding-right: 1.728rem !important;
  }

.u-spaceItems4 > * + * {
    margin-top: 33.184px !important;
    margin-top: 2.074rem !important;
  }

.u-staggerItems4 > * + * {
    margin-top: 2.074em !important;
  }

.u-space4 {
    margin: 33.184px !important;
    margin: 2.074rem !important;
  }

.u-spaceEnds4 {
    margin-bottom: 33.184px !important;
    margin-bottom: 2.074rem !important;
    margin-top: 33.184px !important;
    margin-top: 2.074rem !important;
  }

.u-spaceSides4 {
    margin-left: 33.184px !important;
    margin-left: 2.074rem !important;
    margin-right: 33.184px !important;
    margin-right: 2.074rem !important;
  }

.u-spaceTop4 {
    margin-top: 33.184px !important;
    margin-top: 2.074rem !important;
  }

.u-spaceBottom4 {
    margin-bottom: 33.184px !important;
    margin-bottom: 2.074rem !important;
  }

.u-spaceLeft4 {
    margin-left: 33.184px !important;
    margin-left: 2.074rem !important;
  }

.u-spaceRight4 {
    margin-right: 33.184px !important;
    margin-right: 2.074rem !important;
  }

.u-pull4 {
    margin: -33.184px !important;
    margin: -2.074rem !important;
  }

.u-pullEnds4 {
    margin-bottom: -33.184px !important;
    margin-bottom: -2.074rem !important;
    margin-top: -33.184px !important;
    margin-top: -2.074rem !important;
  }

.u-pullSides4 {
    margin-left: -33.184px !important;
    margin-left: -2.074rem !important;
    margin-right: -33.184px !important;
    margin-right: -2.074rem !important;
  }

.u-pullTop4 {
    margin-top: -33.184px !important;
    margin-top: -2.074rem !important;
  }

.u-pullBottom4 {
    margin-bottom: -33.184px !important;
    margin-bottom: -2.074rem !important;
  }

.u-pullLeft4 {
    margin-left: -33.184px !important;
    margin-left: -2.074rem !important;
  }

.u-pullRight4 {
    margin-right: -33.184px !important;
    margin-right: -2.074rem !important;
  }

.u-pad4 {
    padding: 33.184px !important;
    padding: 2.074rem !important;
  }

.u-padEnds4 {
    padding-bottom: 33.184px !important;
    padding-bottom: 2.074rem !important;
    padding-top: 33.184px !important;
    padding-top: 2.074rem !important;
  }

.u-padSides4 {
    padding-left: 33.184px !important;
    padding-left: 2.074rem !important;
    padding-right: 33.184px !important;
    padding-right: 2.074rem !important;
  }

.u-padTop4 {
    padding-top: 33.184px !important;
    padding-top: 2.074rem !important;
  }

.u-padBottom4 {
    padding-bottom: 33.184px !important;
    padding-bottom: 2.074rem !important;
  }

.u-padLeft4 {
    padding-left: 33.184px !important;
    padding-left: 2.074rem !important;
  }

.u-padRight4 {
    padding-right: 33.184px !important;
    padding-right: 2.074rem !important;
  }

.u-spaceItems5 > * + * {
    margin-top: 39.808px !important;
    margin-top: 2.488rem !important;
  }

.u-staggerItems5 > * + * {
    margin-top: 2.488em !important;
  }

.u-space5 {
    margin: 39.808px !important;
    margin: 2.488rem !important;
  }

.u-spaceEnds5 {
    margin-bottom: 39.808px !important;
    margin-bottom: 2.488rem !important;
    margin-top: 39.808px !important;
    margin-top: 2.488rem !important;
  }

.u-spaceSides5 {
    margin-left: 39.808px !important;
    margin-left: 2.488rem !important;
    margin-right: 39.808px !important;
    margin-right: 2.488rem !important;
  }

.u-spaceTop5 {
    margin-top: 39.808px !important;
    margin-top: 2.488rem !important;
  }

.u-spaceBottom5 {
    margin-bottom: 39.808px !important;
    margin-bottom: 2.488rem !important;
  }

.u-spaceLeft5 {
    margin-left: 39.808px !important;
    margin-left: 2.488rem !important;
  }

.u-spaceRight5 {
    margin-right: 39.808px !important;
    margin-right: 2.488rem !important;
  }

.u-pull5 {
    margin: -39.808px !important;
    margin: -2.488rem !important;
  }

.u-pullEnds5 {
    margin-bottom: -39.808px !important;
    margin-bottom: -2.488rem !important;
    margin-top: -39.808px !important;
    margin-top: -2.488rem !important;
  }

.u-pullSides5 {
    margin-left: -39.808px !important;
    margin-left: -2.488rem !important;
    margin-right: -39.808px !important;
    margin-right: -2.488rem !important;
  }

.u-pullTop5 {
    margin-top: -39.808px !important;
    margin-top: -2.488rem !important;
  }

.u-pullBottom5 {
    margin-bottom: -39.808px !important;
    margin-bottom: -2.488rem !important;
  }

.u-pullLeft5 {
    margin-left: -39.808px !important;
    margin-left: -2.488rem !important;
  }

.u-pullRight5 {
    margin-right: -39.808px !important;
    margin-right: -2.488rem !important;
  }

.u-pad5 {
    padding: 39.808px !important;
    padding: 2.488rem !important;
  }

.u-padEnds5 {
    padding-bottom: 39.808px !important;
    padding-bottom: 2.488rem !important;
    padding-top: 39.808px !important;
    padding-top: 2.488rem !important;
  }

.u-padSides5 {
    padding-left: 39.808px !important;
    padding-left: 2.488rem !important;
    padding-right: 39.808px !important;
    padding-right: 2.488rem !important;
  }

.u-padTop5 {
    padding-top: 39.808px !important;
    padding-top: 2.488rem !important;
  }

.u-padBottom5 {
    padding-bottom: 39.808px !important;
    padding-bottom: 2.488rem !important;
  }

.u-padLeft5 {
    padding-left: 39.808px !important;
    padding-left: 2.488rem !important;
  }

.u-padRight5 {
    padding-right: 39.808px !important;
    padding-right: 2.488rem !important;
  }

.u-spaceItems6 > * + * {
    margin-top: 47.776px !important;
    margin-top: 2.986rem !important;
  }

.u-staggerItems6 > * + * {
    margin-top: 2.986em !important;
  }

.u-space6 {
    margin: 47.776px !important;
    margin: 2.986rem !important;
  }

.u-spaceEnds6 {
    margin-bottom: 47.776px !important;
    margin-bottom: 2.986rem !important;
    margin-top: 47.776px !important;
    margin-top: 2.986rem !important;
  }

.u-spaceSides6 {
    margin-left: 47.776px !important;
    margin-left: 2.986rem !important;
    margin-right: 47.776px !important;
    margin-right: 2.986rem !important;
  }

.u-spaceTop6 {
    margin-top: 47.776px !important;
    margin-top: 2.986rem !important;
  }

.u-spaceBottom6 {
    margin-bottom: 47.776px !important;
    margin-bottom: 2.986rem !important;
  }

.u-spaceLeft6 {
    margin-left: 47.776px !important;
    margin-left: 2.986rem !important;
  }

.u-spaceRight6 {
    margin-right: 47.776px !important;
    margin-right: 2.986rem !important;
  }

.u-pull6 {
    margin: -47.776px !important;
    margin: -2.986rem !important;
  }

.u-pullEnds6 {
    margin-bottom: -47.776px !important;
    margin-bottom: -2.986rem !important;
    margin-top: -47.776px !important;
    margin-top: -2.986rem !important;
  }

.u-pullSides6 {
    margin-left: -47.776px !important;
    margin-left: -2.986rem !important;
    margin-right: -47.776px !important;
    margin-right: -2.986rem !important;
  }

.u-pullTop6 {
    margin-top: -47.776px !important;
    margin-top: -2.986rem !important;
  }

.u-pullBottom6 {
    margin-bottom: -47.776px !important;
    margin-bottom: -2.986rem !important;
  }

.u-pullLeft6 {
    margin-left: -47.776px !important;
    margin-left: -2.986rem !important;
  }

.u-pullRight6 {
    margin-right: -47.776px !important;
    margin-right: -2.986rem !important;
  }

.u-pad6 {
    padding: 47.776px !important;
    padding: 2.986rem !important;
  }

.u-padEnds6 {
    padding-bottom: 47.776px !important;
    padding-bottom: 2.986rem !important;
    padding-top: 47.776px !important;
    padding-top: 2.986rem !important;
  }

.u-padSides6 {
    padding-left: 47.776px !important;
    padding-left: 2.986rem !important;
    padding-right: 47.776px !important;
    padding-right: 2.986rem !important;
  }

.u-padTop6 {
    padding-top: 47.776px !important;
    padding-top: 2.986rem !important;
  }

.u-padBottom6 {
    padding-bottom: 47.776px !important;
    padding-bottom: 2.986rem !important;
  }

.u-padLeft6 {
    padding-left: 47.776px !important;
    padding-left: 2.986rem !important;
  }

.u-padRight6 {
    padding-right: 47.776px !important;
    padding-right: 2.986rem !important;
  }

/**
   * Reset utilities. These come last to give them slight precedence over the
   * other utilities to make it easier to clear whitespace across breakpoints.
   */

.u-spaceNone {
    margin: 0 !important;
  }

.u-spaceEndsNone {
    margin-bottom: 0 !important;
    margin-top: 0 !important;
  }

.u-spaceSidesNone {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }

.u-spaceTopNone {
    margin-top: 0 !important;
  }

.u-spaceBottomNone {
    margin-bottom: 0 !important;
  }

.u-spaceLeftNone {
    margin-left: 0 !important;
  }

.u-spaceRightNone {
    margin-right: 0 !important;
  }

.u-padNone {
    padding: 0 !important;
  }

.u-padEndsNone {
    padding-bottom: 0 !important;
    padding-top: 0 !important;
  }

.u-padSidesNone {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }

.u-padTopNone {
    padding-top: 0 !important;
  }

.u-padBottomNone {
    padding-bottom: 0 !important;
  }

.u-padLeftNone {
    padding-left: 0 !important;
  }

.u-padRightNone {
    padding-right: 0 !important;
  }

@media (min-width: 30em) {
  /**
   * Negative scale steps swap `-` for `0`.
   */
  .u-sm-spaceItems06 > * + * {
    margin-top: 0.335rem !important;
  }
  .u-sm-staggerItems06 > * + * {
    margin-top: 0.335em !important;
  }
  .u-sm-space06 {
    margin: 0.335rem !important;
  }
  .u-sm-spaceEnds06 {
    margin-bottom: 0.335rem !important;
    margin-top: 0.335rem !important;
  }
  .u-sm-spaceSides06 {
    margin-left: 0.335rem !important;
    margin-right: 0.335rem !important;
  }
  .u-sm-spaceTop06 {
    margin-top: 0.335rem !important;
  }
  .u-sm-spaceBottom06 {
    margin-bottom: 0.335rem !important;
  }
  .u-sm-spaceLeft06 {
    margin-left: 0.335rem !important;
  }
  .u-sm-spaceRight06 {
    margin-right: 0.335rem !important;
  }
  .u-sm-pull06 {
    margin: -0.335rem !important;
  }
  .u-sm-pullEnds06 {
    margin-bottom: -0.335rem !important;
    margin-top: -0.335rem !important;
  }
  .u-sm-pullSides06 {
    margin-left: -0.335rem !important;
    margin-right: -0.335rem !important;
  }
  .u-sm-pullTop06 {
    margin-top: -0.335rem !important;
  }
  .u-sm-pullBottom06 {
    margin-bottom: -0.335rem !important;
  }
  .u-sm-pullLeft06 {
    margin-left: -0.335rem !important;
  }
  .u-sm-pullRight06 {
    margin-right: -0.335rem !important;
  }
  .u-sm-pad06 {
    padding: 0.335rem !important;
  }
  .u-sm-padEnds06 {
    padding-bottom: 0.335rem !important;
    padding-top: 0.335rem !important;
  }
  .u-sm-padSides06 {
    padding-left: 0.335rem !important;
    padding-right: 0.335rem !important;
  }
  .u-sm-padTop06 {
    padding-top: 0.335rem !important;
  }
  .u-sm-padBottom06 {
    padding-bottom: 0.335rem !important;
  }
  .u-sm-padLeft06 {
    padding-left: 0.335rem !important;
  }
  .u-sm-padRight06 {
    padding-right: 0.335rem !important;
  }
  .u-sm-spaceItems05 > * + * {
    margin-top: 0.402rem !important;
  }
  .u-sm-staggerItems05 > * + * {
    margin-top: 0.402em !important;
  }
  .u-sm-space05 {
    margin: 0.402rem !important;
  }
  .u-sm-spaceEnds05 {
    margin-bottom: 0.402rem !important;
    margin-top: 0.402rem !important;
  }
  .u-sm-spaceSides05 {
    margin-left: 0.402rem !important;
    margin-right: 0.402rem !important;
  }
  .u-sm-spaceTop05 {
    margin-top: 0.402rem !important;
  }
  .u-sm-spaceBottom05 {
    margin-bottom: 0.402rem !important;
  }
  .u-sm-spaceLeft05 {
    margin-left: 0.402rem !important;
  }
  .u-sm-spaceRight05 {
    margin-right: 0.402rem !important;
  }
  .u-sm-pull05 {
    margin: -0.402rem !important;
  }
  .u-sm-pullEnds05 {
    margin-bottom: -0.402rem !important;
    margin-top: -0.402rem !important;
  }
  .u-sm-pullSides05 {
    margin-left: -0.402rem !important;
    margin-right: -0.402rem !important;
  }
  .u-sm-pullTop05 {
    margin-top: -0.402rem !important;
  }
  .u-sm-pullBottom05 {
    margin-bottom: -0.402rem !important;
  }
  .u-sm-pullLeft05 {
    margin-left: -0.402rem !important;
  }
  .u-sm-pullRight05 {
    margin-right: -0.402rem !important;
  }
  .u-sm-pad05 {
    padding: 0.402rem !important;
  }
  .u-sm-padEnds05 {
    padding-bottom: 0.402rem !important;
    padding-top: 0.402rem !important;
  }
  .u-sm-padSides05 {
    padding-left: 0.402rem !important;
    padding-right: 0.402rem !important;
  }
  .u-sm-padTop05 {
    padding-top: 0.402rem !important;
  }
  .u-sm-padBottom05 {
    padding-bottom: 0.402rem !important;
  }
  .u-sm-padLeft05 {
    padding-left: 0.402rem !important;
  }
  .u-sm-padRight05 {
    padding-right: 0.402rem !important;
  }
  .u-sm-spaceItems04 > * + * {
    margin-top: 0.482rem !important;
  }
  .u-sm-staggerItems04 > * + * {
    margin-top: 0.482em !important;
  }
  .u-sm-space04 {
    margin: 0.482rem !important;
  }
  .u-sm-spaceEnds04 {
    margin-bottom: 0.482rem !important;
    margin-top: 0.482rem !important;
  }
  .u-sm-spaceSides04 {
    margin-left: 0.482rem !important;
    margin-right: 0.482rem !important;
  }
  .u-sm-spaceTop04 {
    margin-top: 0.482rem !important;
  }
  .u-sm-spaceBottom04 {
    margin-bottom: 0.482rem !important;
  }
  .u-sm-spaceLeft04 {
    margin-left: 0.482rem !important;
  }
  .u-sm-spaceRight04 {
    margin-right: 0.482rem !important;
  }
  .u-sm-pull04 {
    margin: -0.482rem !important;
  }
  .u-sm-pullEnds04 {
    margin-bottom: -0.482rem !important;
    margin-top: -0.482rem !important;
  }
  .u-sm-pullSides04 {
    margin-left: -0.482rem !important;
    margin-right: -0.482rem !important;
  }
  .u-sm-pullTop04 {
    margin-top: -0.482rem !important;
  }
  .u-sm-pullBottom04 {
    margin-bottom: -0.482rem !important;
  }
  .u-sm-pullLeft04 {
    margin-left: -0.482rem !important;
  }
  .u-sm-pullRight04 {
    margin-right: -0.482rem !important;
  }
  .u-sm-pad04 {
    padding: 0.482rem !important;
  }
  .u-sm-padEnds04 {
    padding-bottom: 0.482rem !important;
    padding-top: 0.482rem !important;
  }
  .u-sm-padSides04 {
    padding-left: 0.482rem !important;
    padding-right: 0.482rem !important;
  }
  .u-sm-padTop04 {
    padding-top: 0.482rem !important;
  }
  .u-sm-padBottom04 {
    padding-bottom: 0.482rem !important;
  }
  .u-sm-padLeft04 {
    padding-left: 0.482rem !important;
  }
  .u-sm-padRight04 {
    padding-right: 0.482rem !important;
  }
  .u-sm-spaceItems03 > * + * {
    margin-top: 0.579rem !important;
  }
  .u-sm-staggerItems03 > * + * {
    margin-top: 0.579em !important;
  }
  .u-sm-space03 {
    margin: 0.579rem !important;
  }
  .u-sm-spaceEnds03 {
    margin-bottom: 0.579rem !important;
    margin-top: 0.579rem !important;
  }
  .u-sm-spaceSides03 {
    margin-left: 0.579rem !important;
    margin-right: 0.579rem !important;
  }
  .u-sm-spaceTop03 {
    margin-top: 0.579rem !important;
  }
  .u-sm-spaceBottom03 {
    margin-bottom: 0.579rem !important;
  }
  .u-sm-spaceLeft03 {
    margin-left: 0.579rem !important;
  }
  .u-sm-spaceRight03 {
    margin-right: 0.579rem !important;
  }
  .u-sm-pull03 {
    margin: -0.579rem !important;
  }
  .u-sm-pullEnds03 {
    margin-bottom: -0.579rem !important;
    margin-top: -0.579rem !important;
  }
  .u-sm-pullSides03 {
    margin-left: -0.579rem !important;
    margin-right: -0.579rem !important;
  }
  .u-sm-pullTop03 {
    margin-top: -0.579rem !important;
  }
  .u-sm-pullBottom03 {
    margin-bottom: -0.579rem !important;
  }
  .u-sm-pullLeft03 {
    margin-left: -0.579rem !important;
  }
  .u-sm-pullRight03 {
    margin-right: -0.579rem !important;
  }
  .u-sm-pad03 {
    padding: 0.579rem !important;
  }
  .u-sm-padEnds03 {
    padding-bottom: 0.579rem !important;
    padding-top: 0.579rem !important;
  }
  .u-sm-padSides03 {
    padding-left: 0.579rem !important;
    padding-right: 0.579rem !important;
  }
  .u-sm-padTop03 {
    padding-top: 0.579rem !important;
  }
  .u-sm-padBottom03 {
    padding-bottom: 0.579rem !important;
  }
  .u-sm-padLeft03 {
    padding-left: 0.579rem !important;
  }
  .u-sm-padRight03 {
    padding-right: 0.579rem !important;
  }
  .u-sm-spaceItems02 > * + * {
    margin-top: 0.694rem !important;
  }
  .u-sm-staggerItems02 > * + * {
    margin-top: 0.694em !important;
  }
  .u-sm-space02 {
    margin: 0.694rem !important;
  }
  .u-sm-spaceEnds02 {
    margin-bottom: 0.694rem !important;
    margin-top: 0.694rem !important;
  }
  .u-sm-spaceSides02 {
    margin-left: 0.694rem !important;
    margin-right: 0.694rem !important;
  }
  .u-sm-spaceTop02 {
    margin-top: 0.694rem !important;
  }
  .u-sm-spaceBottom02 {
    margin-bottom: 0.694rem !important;
  }
  .u-sm-spaceLeft02 {
    margin-left: 0.694rem !important;
  }
  .u-sm-spaceRight02 {
    margin-right: 0.694rem !important;
  }
  .u-sm-pull02 {
    margin: -0.694rem !important;
  }
  .u-sm-pullEnds02 {
    margin-bottom: -0.694rem !important;
    margin-top: -0.694rem !important;
  }
  .u-sm-pullSides02 {
    margin-left: -0.694rem !important;
    margin-right: -0.694rem !important;
  }
  .u-sm-pullTop02 {
    margin-top: -0.694rem !important;
  }
  .u-sm-pullBottom02 {
    margin-bottom: -0.694rem !important;
  }
  .u-sm-pullLeft02 {
    margin-left: -0.694rem !important;
  }
  .u-sm-pullRight02 {
    margin-right: -0.694rem !important;
  }
  .u-sm-pad02 {
    padding: 0.694rem !important;
  }
  .u-sm-padEnds02 {
    padding-bottom: 0.694rem !important;
    padding-top: 0.694rem !important;
  }
  .u-sm-padSides02 {
    padding-left: 0.694rem !important;
    padding-right: 0.694rem !important;
  }
  .u-sm-padTop02 {
    padding-top: 0.694rem !important;
  }
  .u-sm-padBottom02 {
    padding-bottom: 0.694rem !important;
  }
  .u-sm-padLeft02 {
    padding-left: 0.694rem !important;
  }
  .u-sm-padRight02 {
    padding-right: 0.694rem !important;
  }
  .u-sm-spaceItems01 > * + * {
    margin-top: 0.833rem !important;
  }
  .u-sm-staggerItems01 > * + * {
    margin-top: 0.833em !important;
  }
  .u-sm-space01 {
    margin: 0.833rem !important;
  }
  .u-sm-spaceEnds01 {
    margin-bottom: 0.833rem !important;
    margin-top: 0.833rem !important;
  }
  .u-sm-spaceSides01 {
    margin-left: 0.833rem !important;
    margin-right: 0.833rem !important;
  }
  .u-sm-spaceTop01 {
    margin-top: 0.833rem !important;
  }
  .u-sm-spaceBottom01 {
    margin-bottom: 0.833rem !important;
  }
  .u-sm-spaceLeft01 {
    margin-left: 0.833rem !important;
  }
  .u-sm-spaceRight01 {
    margin-right: 0.833rem !important;
  }
  .u-sm-pull01 {
    margin: -0.833rem !important;
  }
  .u-sm-pullEnds01 {
    margin-bottom: -0.833rem !important;
    margin-top: -0.833rem !important;
  }
  .u-sm-pullSides01 {
    margin-left: -0.833rem !important;
    margin-right: -0.833rem !important;
  }
  .u-sm-pullTop01 {
    margin-top: -0.833rem !important;
  }
  .u-sm-pullBottom01 {
    margin-bottom: -0.833rem !important;
  }
  .u-sm-pullLeft01 {
    margin-left: -0.833rem !important;
  }
  .u-sm-pullRight01 {
    margin-right: -0.833rem !important;
  }
  .u-sm-pad01 {
    padding: 0.833rem !important;
  }
  .u-sm-padEnds01 {
    padding-bottom: 0.833rem !important;
    padding-top: 0.833rem !important;
  }
  .u-sm-padSides01 {
    padding-left: 0.833rem !important;
    padding-right: 0.833rem !important;
  }
  .u-sm-padTop01 {
    padding-top: 0.833rem !important;
  }
  .u-sm-padBottom01 {
    padding-bottom: 0.833rem !important;
  }
  .u-sm-padLeft01 {
    padding-left: 0.833rem !important;
  }
  .u-sm-padRight01 {
    padding-right: 0.833rem !important;
  }
  /**
   * Default values omit the suffix and use the `0` step.
   */
  .u-sm-spaceItems > * + * {
    margin-top: 1rem !important;
  }
  .u-sm-staggerItems > * + * {
    margin-top: 1em !important;
  }
  .u-sm-space {
    margin: 1rem !important;
  }
  .u-sm-spaceEnds {
    margin-bottom: 1rem !important;
    margin-top: 1rem !important;
  }
  .u-sm-spaceSides {
    margin-left: 1rem !important;
    margin-right: 1rem !important;
  }
  .u-sm-spaceTop {
    margin-top: 1rem !important;
  }
  .u-sm-spaceBottom {
    margin-bottom: 1rem !important;
  }
  .u-sm-spaceLeft {
    margin-left: 1rem !important;
  }
  .u-sm-spaceRight {
    margin-right: 1rem !important;
  }
  .u-sm-pull {
    margin: -1rem !important;
  }
  .u-sm-pullEnds {
    margin-bottom: -1rem !important;
    margin-top: -1rem !important;
  }
  .u-sm-pullSides {
    margin-left: -1rem !important;
    margin-right: -1rem !important;
  }
  .u-sm-pullTop {
    margin-top: -1rem !important;
  }
  .u-sm-pullBottom {
    margin-bottom: -1rem !important;
  }
  .u-sm-pullLeft {
    margin-left: -1rem !important;
  }
  .u-sm-pullRight {
    margin-right: -1rem !important;
  }
  .u-sm-pad {
    padding: 1rem !important;
  }
  .u-sm-padEnds {
    padding-bottom: 1rem !important;
    padding-top: 1rem !important;
  }
  .u-sm-padSides {
    padding-left: 1rem !important;
    padding-right: 1rem !important;
  }
  .u-sm-padTop {
    padding-top: 1rem !important;
  }
  .u-sm-padBottom {
    padding-bottom: 1rem !important;
  }
  .u-sm-padLeft {
    padding-left: 1rem !important;
  }
  .u-sm-padRight {
    padding-right: 1rem !important;
  }
  /**
   * Positive scale steps.
   */
  .u-sm-spaceItems1 > * + * {
    margin-top: 1.2rem !important;
  }
  .u-sm-staggerItems1 > * + * {
    margin-top: 1.2em !important;
  }
  .u-sm-space1 {
    margin: 1.2rem !important;
  }
  .u-sm-spaceEnds1 {
    margin-bottom: 1.2rem !important;
    margin-top: 1.2rem !important;
  }
  .u-sm-spaceSides1 {
    margin-left: 1.2rem !important;
    margin-right: 1.2rem !important;
  }
  .u-sm-spaceTop1 {
    margin-top: 1.2rem !important;
  }
  .u-sm-spaceBottom1 {
    margin-bottom: 1.2rem !important;
  }
  .u-sm-spaceLeft1 {
    margin-left: 1.2rem !important;
  }
  .u-sm-spaceRight1 {
    margin-right: 1.2rem !important;
  }
  .u-sm-pull1 {
    margin: -1.2rem !important;
  }
  .u-sm-pullEnds1 {
    margin-bottom: -1.2rem !important;
    margin-top: -1.2rem !important;
  }
  .u-sm-pullSides1 {
    margin-left: -1.2rem !important;
    margin-right: -1.2rem !important;
  }
  .u-sm-pullTop1 {
    margin-top: -1.2rem !important;
  }
  .u-sm-pullBottom1 {
    margin-bottom: -1.2rem !important;
  }
  .u-sm-pullLeft1 {
    margin-left: -1.2rem !important;
  }
  .u-sm-pullRight1 {
    margin-right: -1.2rem !important;
  }
  .u-sm-pad1 {
    padding: 1.2rem !important;
  }
  .u-sm-padEnds1 {
    padding-bottom: 1.2rem !important;
    padding-top: 1.2rem !important;
  }
  .u-sm-padSides1 {
    padding-left: 1.2rem !important;
    padding-right: 1.2rem !important;
  }
  .u-sm-padTop1 {
    padding-top: 1.2rem !important;
  }
  .u-sm-padBottom1 {
    padding-bottom: 1.2rem !important;
  }
  .u-sm-padLeft1 {
    padding-left: 1.2rem !important;
  }
  .u-sm-padRight1 {
    padding-right: 1.2rem !important;
  }
  .u-sm-spaceItems2 > * + * {
    margin-top: 1.44rem !important;
  }
  .u-sm-staggerItems2 > * + * {
    margin-top: 1.44em !important;
  }
  .u-sm-space2 {
    margin: 1.44rem !important;
  }
  .u-sm-spaceEnds2 {
    margin-bottom: 1.44rem !important;
    margin-top: 1.44rem !important;
  }
  .u-sm-spaceSides2 {
    margin-left: 1.44rem !important;
    margin-right: 1.44rem !important;
  }
  .u-sm-spaceTop2 {
    margin-top: 1.44rem !important;
  }
  .u-sm-spaceBottom2 {
    margin-bottom: 1.44rem !important;
  }
  .u-sm-spaceLeft2 {
    margin-left: 1.44rem !important;
  }
  .u-sm-spaceRight2 {
    margin-right: 1.44rem !important;
  }
  .u-sm-pull2 {
    margin: -1.44rem !important;
  }
  .u-sm-pullEnds2 {
    margin-bottom: -1.44rem !important;
    margin-top: -1.44rem !important;
  }
  .u-sm-pullSides2 {
    margin-left: -1.44rem !important;
    margin-right: -1.44rem !important;
  }
  .u-sm-pullTop2 {
    margin-top: -1.44rem !important;
  }
  .u-sm-pullBottom2 {
    margin-bottom: -1.44rem !important;
  }
  .u-sm-pullLeft2 {
    margin-left: -1.44rem !important;
  }
  .u-sm-pullRight2 {
    margin-right: -1.44rem !important;
  }
  .u-sm-pad2 {
    padding: 1.44rem !important;
  }
  .u-sm-padEnds2 {
    padding-bottom: 1.44rem !important;
    padding-top: 1.44rem !important;
  }
  .u-sm-padSides2 {
    padding-left: 1.44rem !important;
    padding-right: 1.44rem !important;
  }
  .u-sm-padTop2 {
    padding-top: 1.44rem !important;
  }
  .u-sm-padBottom2 {
    padding-bottom: 1.44rem !important;
  }
  .u-sm-padLeft2 {
    padding-left: 1.44rem !important;
  }
  .u-sm-padRight2 {
    padding-right: 1.44rem !important;
  }
  .u-sm-spaceItems3 > * + * {
    margin-top: 1.728rem !important;
  }
  .u-sm-staggerItems3 > * + * {
    margin-top: 1.728em !important;
  }
  .u-sm-space3 {
    margin: 1.728rem !important;
  }
  .u-sm-spaceEnds3 {
    margin-bottom: 1.728rem !important;
    margin-top: 1.728rem !important;
  }
  .u-sm-spaceSides3 {
    margin-left: 1.728rem !important;
    margin-right: 1.728rem !important;
  }
  .u-sm-spaceTop3 {
    margin-top: 1.728rem !important;
  }
  .u-sm-spaceBottom3 {
    margin-bottom: 1.728rem !important;
  }
  .u-sm-spaceLeft3 {
    margin-left: 1.728rem !important;
  }
  .u-sm-spaceRight3 {
    margin-right: 1.728rem !important;
  }
  .u-sm-pull3 {
    margin: -1.728rem !important;
  }
  .u-sm-pullEnds3 {
    margin-bottom: -1.728rem !important;
    margin-top: -1.728rem !important;
  }
  .u-sm-pullSides3 {
    margin-left: -1.728rem !important;
    margin-right: -1.728rem !important;
  }
  .u-sm-pullTop3 {
    margin-top: -1.728rem !important;
  }
  .u-sm-pullBottom3 {
    margin-bottom: -1.728rem !important;
  }
  .u-sm-pullLeft3 {
    margin-left: -1.728rem !important;
  }
  .u-sm-pullRight3 {
    margin-right: -1.728rem !important;
  }
  .u-sm-pad3 {
    padding: 1.728rem !important;
  }
  .u-sm-padEnds3 {
    padding-bottom: 1.728rem !important;
    padding-top: 1.728rem !important;
  }
  .u-sm-padSides3 {
    padding-left: 1.728rem !important;
    padding-right: 1.728rem !important;
  }
  .u-sm-padTop3 {
    padding-top: 1.728rem !important;
  }
  .u-sm-padBottom3 {
    padding-bottom: 1.728rem !important;
  }
  .u-sm-padLeft3 {
    padding-left: 1.728rem !important;
  }
  .u-sm-padRight3 {
    padding-right: 1.728rem !important;
  }
  .u-sm-spaceItems4 > * + * {
    margin-top: 2.074rem !important;
  }
  .u-sm-staggerItems4 > * + * {
    margin-top: 2.074em !important;
  }
  .u-sm-space4 {
    margin: 2.074rem !important;
  }
  .u-sm-spaceEnds4 {
    margin-bottom: 2.074rem !important;
    margin-top: 2.074rem !important;
  }
  .u-sm-spaceSides4 {
    margin-left: 2.074rem !important;
    margin-right: 2.074rem !important;
  }
  .u-sm-spaceTop4 {
    margin-top: 2.074rem !important;
  }
  .u-sm-spaceBottom4 {
    margin-bottom: 2.074rem !important;
  }
  .u-sm-spaceLeft4 {
    margin-left: 2.074rem !important;
  }
  .u-sm-spaceRight4 {
    margin-right: 2.074rem !important;
  }
  .u-sm-pull4 {
    margin: -2.074rem !important;
  }
  .u-sm-pullEnds4 {
    margin-bottom: -2.074rem !important;
    margin-top: -2.074rem !important;
  }
  .u-sm-pullSides4 {
    margin-left: -2.074rem !important;
    margin-right: -2.074rem !important;
  }
  .u-sm-pullTop4 {
    margin-top: -2.074rem !important;
  }
  .u-sm-pullBottom4 {
    margin-bottom: -2.074rem !important;
  }
  .u-sm-pullLeft4 {
    margin-left: -2.074rem !important;
  }
  .u-sm-pullRight4 {
    margin-right: -2.074rem !important;
  }
  .u-sm-pad4 {
    padding: 2.074rem !important;
  }
  .u-sm-padEnds4 {
    padding-bottom: 2.074rem !important;
    padding-top: 2.074rem !important;
  }
  .u-sm-padSides4 {
    padding-left: 2.074rem !important;
    padding-right: 2.074rem !important;
  }
  .u-sm-padTop4 {
    padding-top: 2.074rem !important;
  }
  .u-sm-padBottom4 {
    padding-bottom: 2.074rem !important;
  }
  .u-sm-padLeft4 {
    padding-left: 2.074rem !important;
  }
  .u-sm-padRight4 {
    padding-right: 2.074rem !important;
  }
  .u-sm-spaceItems5 > * + * {
    margin-top: 2.488rem !important;
  }
  .u-sm-staggerItems5 > * + * {
    margin-top: 2.488em !important;
  }
  .u-sm-space5 {
    margin: 2.488rem !important;
  }
  .u-sm-spaceEnds5 {
    margin-bottom: 2.488rem !important;
    margin-top: 2.488rem !important;
  }
  .u-sm-spaceSides5 {
    margin-left: 2.488rem !important;
    margin-right: 2.488rem !important;
  }
  .u-sm-spaceTop5 {
    margin-top: 2.488rem !important;
  }
  .u-sm-spaceBottom5 {
    margin-bottom: 2.488rem !important;
  }
  .u-sm-spaceLeft5 {
    margin-left: 2.488rem !important;
  }
  .u-sm-spaceRight5 {
    margin-right: 2.488rem !important;
  }
  .u-sm-pull5 {
    margin: -2.488rem !important;
  }
  .u-sm-pullEnds5 {
    margin-bottom: -2.488rem !important;
    margin-top: -2.488rem !important;
  }
  .u-sm-pullSides5 {
    margin-left: -2.488rem !important;
    margin-right: -2.488rem !important;
  }
  .u-sm-pullTop5 {
    margin-top: -2.488rem !important;
  }
  .u-sm-pullBottom5 {
    margin-bottom: -2.488rem !important;
  }
  .u-sm-pullLeft5 {
    margin-left: -2.488rem !important;
  }
  .u-sm-pullRight5 {
    margin-right: -2.488rem !important;
  }
  .u-sm-pad5 {
    padding: 2.488rem !important;
  }
  .u-sm-padEnds5 {
    padding-bottom: 2.488rem !important;
    padding-top: 2.488rem !important;
  }
  .u-sm-padSides5 {
    padding-left: 2.488rem !important;
    padding-right: 2.488rem !important;
  }
  .u-sm-padTop5 {
    padding-top: 2.488rem !important;
  }
  .u-sm-padBottom5 {
    padding-bottom: 2.488rem !important;
  }
  .u-sm-padLeft5 {
    padding-left: 2.488rem !important;
  }
  .u-sm-padRight5 {
    padding-right: 2.488rem !important;
  }
  .u-sm-spaceItems6 > * + * {
    margin-top: 2.986rem !important;
  }
  .u-sm-staggerItems6 > * + * {
    margin-top: 2.986em !important;
  }
  .u-sm-space6 {
    margin: 2.986rem !important;
  }
  .u-sm-spaceEnds6 {
    margin-bottom: 2.986rem !important;
    margin-top: 2.986rem !important;
  }
  .u-sm-spaceSides6 {
    margin-left: 2.986rem !important;
    margin-right: 2.986rem !important;
  }
  .u-sm-spaceTop6 {
    margin-top: 2.986rem !important;
  }
  .u-sm-spaceBottom6 {
    margin-bottom: 2.986rem !important;
  }
  .u-sm-spaceLeft6 {
    margin-left: 2.986rem !important;
  }
  .u-sm-spaceRight6 {
    margin-right: 2.986rem !important;
  }
  .u-sm-pull6 {
    margin: -2.986rem !important;
  }
  .u-sm-pullEnds6 {
    margin-bottom: -2.986rem !important;
    margin-top: -2.986rem !important;
  }
  .u-sm-pullSides6 {
    margin-left: -2.986rem !important;
    margin-right: -2.986rem !important;
  }
  .u-sm-pullTop6 {
    margin-top: -2.986rem !important;
  }
  .u-sm-pullBottom6 {
    margin-bottom: -2.986rem !important;
  }
  .u-sm-pullLeft6 {
    margin-left: -2.986rem !important;
  }
  .u-sm-pullRight6 {
    margin-right: -2.986rem !important;
  }
  .u-sm-pad6 {
    padding: 2.986rem !important;
  }
  .u-sm-padEnds6 {
    padding-bottom: 2.986rem !important;
    padding-top: 2.986rem !important;
  }
  .u-sm-padSides6 {
    padding-left: 2.986rem !important;
    padding-right: 2.986rem !important;
  }
  .u-sm-padTop6 {
    padding-top: 2.986rem !important;
  }
  .u-sm-padBottom6 {
    padding-bottom: 2.986rem !important;
  }
  .u-sm-padLeft6 {
    padding-left: 2.986rem !important;
  }
  .u-sm-padRight6 {
    padding-right: 2.986rem !important;
  }
  /**
   * Reset utilities. These come last to give them slight precedence over the
   * other utilities to make it easier to clear whitespace across breakpoints.
   */
  .u-sm-spaceNone {
    margin: 0 !important;
  }
  .u-sm-spaceEndsNone {
    margin-bottom: 0 !important;
    margin-top: 0 !important;
  }
  .u-sm-spaceSidesNone {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  .u-sm-spaceTopNone {
    margin-top: 0 !important;
  }
  .u-sm-spaceBottomNone {
    margin-bottom: 0 !important;
  }
  .u-sm-spaceLeftNone {
    margin-left: 0 !important;
  }
  .u-sm-spaceRightNone {
    margin-right: 0 !important;
  }
  .u-sm-padNone {
    padding: 0 !important;
  }
  .u-sm-padEndsNone {
    padding-bottom: 0 !important;
    padding-top: 0 !important;
  }
  .u-sm-padSidesNone {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
  .u-sm-padTopNone {
    padding-top: 0 !important;
  }
  .u-sm-padBottomNone {
    padding-bottom: 0 !important;
  }
  .u-sm-padLeftNone {
    padding-left: 0 !important;
  }
  .u-sm-padRightNone {
    padding-right: 0 !important;
  }
}

@media (min-width: 47em) {
  /**
   * Negative scale steps swap `-` for `0`.
   */
  .u-md-spaceItems06 > * + * {
    margin-top: 0.335rem !important;
  }
  .u-md-staggerItems06 > * + * {
    margin-top: 0.335em !important;
  }
  .u-md-space06 {
    margin: 0.335rem !important;
  }
  .u-md-spaceEnds06 {
    margin-bottom: 0.335rem !important;
    margin-top: 0.335rem !important;
  }
  .u-md-spaceSides06 {
    margin-left: 0.335rem !important;
    margin-right: 0.335rem !important;
  }
  .u-md-spaceTop06 {
    margin-top: 0.335rem !important;
  }
  .u-md-spaceBottom06 {
    margin-bottom: 0.335rem !important;
  }
  .u-md-spaceLeft06 {
    margin-left: 0.335rem !important;
  }
  .u-md-spaceRight06 {
    margin-right: 0.335rem !important;
  }
  .u-md-pull06 {
    margin: -0.335rem !important;
  }
  .u-md-pullEnds06 {
    margin-bottom: -0.335rem !important;
    margin-top: -0.335rem !important;
  }
  .u-md-pullSides06 {
    margin-left: -0.335rem !important;
    margin-right: -0.335rem !important;
  }
  .u-md-pullTop06 {
    margin-top: -0.335rem !important;
  }
  .u-md-pullBottom06 {
    margin-bottom: -0.335rem !important;
  }
  .u-md-pullLeft06 {
    margin-left: -0.335rem !important;
  }
  .u-md-pullRight06 {
    margin-right: -0.335rem !important;
  }
  .u-md-pad06 {
    padding: 0.335rem !important;
  }
  .u-md-padEnds06 {
    padding-bottom: 0.335rem !important;
    padding-top: 0.335rem !important;
  }
  .u-md-padSides06 {
    padding-left: 0.335rem !important;
    padding-right: 0.335rem !important;
  }
  .u-md-padTop06 {
    padding-top: 0.335rem !important;
  }
  .u-md-padBottom06 {
    padding-bottom: 0.335rem !important;
  }
  .u-md-padLeft06 {
    padding-left: 0.335rem !important;
  }
  .u-md-padRight06 {
    padding-right: 0.335rem !important;
  }
  .u-md-spaceItems05 > * + * {
    margin-top: 0.402rem !important;
  }
  .u-md-staggerItems05 > * + * {
    margin-top: 0.402em !important;
  }
  .u-md-space05 {
    margin: 0.402rem !important;
  }
  .u-md-spaceEnds05 {
    margin-bottom: 0.402rem !important;
    margin-top: 0.402rem !important;
  }
  .u-md-spaceSides05 {
    margin-left: 0.402rem !important;
    margin-right: 0.402rem !important;
  }
  .u-md-spaceTop05 {
    margin-top: 0.402rem !important;
  }
  .u-md-spaceBottom05 {
    margin-bottom: 0.402rem !important;
  }
  .u-md-spaceLeft05 {
    margin-left: 0.402rem !important;
  }
  .u-md-spaceRight05 {
    margin-right: 0.402rem !important;
  }
  .u-md-pull05 {
    margin: -0.402rem !important;
  }
  .u-md-pullEnds05 {
    margin-bottom: -0.402rem !important;
    margin-top: -0.402rem !important;
  }
  .u-md-pullSides05 {
    margin-left: -0.402rem !important;
    margin-right: -0.402rem !important;
  }
  .u-md-pullTop05 {
    margin-top: -0.402rem !important;
  }
  .u-md-pullBottom05 {
    margin-bottom: -0.402rem !important;
  }
  .u-md-pullLeft05 {
    margin-left: -0.402rem !important;
  }
  .u-md-pullRight05 {
    margin-right: -0.402rem !important;
  }
  .u-md-pad05 {
    padding: 0.402rem !important;
  }
  .u-md-padEnds05 {
    padding-bottom: 0.402rem !important;
    padding-top: 0.402rem !important;
  }
  .u-md-padSides05 {
    padding-left: 0.402rem !important;
    padding-right: 0.402rem !important;
  }
  .u-md-padTop05 {
    padding-top: 0.402rem !important;
  }
  .u-md-padBottom05 {
    padding-bottom: 0.402rem !important;
  }
  .u-md-padLeft05 {
    padding-left: 0.402rem !important;
  }
  .u-md-padRight05 {
    padding-right: 0.402rem !important;
  }
  .u-md-spaceItems04 > * + * {
    margin-top: 0.482rem !important;
  }
  .u-md-staggerItems04 > * + * {
    margin-top: 0.482em !important;
  }
  .u-md-space04 {
    margin: 0.482rem !important;
  }
  .u-md-spaceEnds04 {
    margin-bottom: 0.482rem !important;
    margin-top: 0.482rem !important;
  }
  .u-md-spaceSides04 {
    margin-left: 0.482rem !important;
    margin-right: 0.482rem !important;
  }
  .u-md-spaceTop04 {
    margin-top: 0.482rem !important;
  }
  .u-md-spaceBottom04 {
    margin-bottom: 0.482rem !important;
  }
  .u-md-spaceLeft04 {
    margin-left: 0.482rem !important;
  }
  .u-md-spaceRight04 {
    margin-right: 0.482rem !important;
  }
  .u-md-pull04 {
    margin: -0.482rem !important;
  }
  .u-md-pullEnds04 {
    margin-bottom: -0.482rem !important;
    margin-top: -0.482rem !important;
  }
  .u-md-pullSides04 {
    margin-left: -0.482rem !important;
    margin-right: -0.482rem !important;
  }
  .u-md-pullTop04 {
    margin-top: -0.482rem !important;
  }
  .u-md-pullBottom04 {
    margin-bottom: -0.482rem !important;
  }
  .u-md-pullLeft04 {
    margin-left: -0.482rem !important;
  }
  .u-md-pullRight04 {
    margin-right: -0.482rem !important;
  }
  .u-md-pad04 {
    padding: 0.482rem !important;
  }
  .u-md-padEnds04 {
    padding-bottom: 0.482rem !important;
    padding-top: 0.482rem !important;
  }
  .u-md-padSides04 {
    padding-left: 0.482rem !important;
    padding-right: 0.482rem !important;
  }
  .u-md-padTop04 {
    padding-top: 0.482rem !important;
  }
  .u-md-padBottom04 {
    padding-bottom: 0.482rem !important;
  }
  .u-md-padLeft04 {
    padding-left: 0.482rem !important;
  }
  .u-md-padRight04 {
    padding-right: 0.482rem !important;
  }
  .u-md-spaceItems03 > * + * {
    margin-top: 0.579rem !important;
  }
  .u-md-staggerItems03 > * + * {
    margin-top: 0.579em !important;
  }
  .u-md-space03 {
    margin: 0.579rem !important;
  }
  .u-md-spaceEnds03 {
    margin-bottom: 0.579rem !important;
    margin-top: 0.579rem !important;
  }
  .u-md-spaceSides03 {
    margin-left: 0.579rem !important;
    margin-right: 0.579rem !important;
  }
  .u-md-spaceTop03 {
    margin-top: 0.579rem !important;
  }
  .u-md-spaceBottom03 {
    margin-bottom: 0.579rem !important;
  }
  .u-md-spaceLeft03 {
    margin-left: 0.579rem !important;
  }
  .u-md-spaceRight03 {
    margin-right: 0.579rem !important;
  }
  .u-md-pull03 {
    margin: -0.579rem !important;
  }
  .u-md-pullEnds03 {
    margin-bottom: -0.579rem !important;
    margin-top: -0.579rem !important;
  }
  .u-md-pullSides03 {
    margin-left: -0.579rem !important;
    margin-right: -0.579rem !important;
  }
  .u-md-pullTop03 {
    margin-top: -0.579rem !important;
  }
  .u-md-pullBottom03 {
    margin-bottom: -0.579rem !important;
  }
  .u-md-pullLeft03 {
    margin-left: -0.579rem !important;
  }
  .u-md-pullRight03 {
    margin-right: -0.579rem !important;
  }
  .u-md-pad03 {
    padding: 0.579rem !important;
  }
  .u-md-padEnds03 {
    padding-bottom: 0.579rem !important;
    padding-top: 0.579rem !important;
  }
  .u-md-padSides03 {
    padding-left: 0.579rem !important;
    padding-right: 0.579rem !important;
  }
  .u-md-padTop03 {
    padding-top: 0.579rem !important;
  }
  .u-md-padBottom03 {
    padding-bottom: 0.579rem !important;
  }
  .u-md-padLeft03 {
    padding-left: 0.579rem !important;
  }
  .u-md-padRight03 {
    padding-right: 0.579rem !important;
  }
  .u-md-spaceItems02 > * + * {
    margin-top: 0.694rem !important;
  }
  .u-md-staggerItems02 > * + * {
    margin-top: 0.694em !important;
  }
  .u-md-space02 {
    margin: 0.694rem !important;
  }
  .u-md-spaceEnds02 {
    margin-bottom: 0.694rem !important;
    margin-top: 0.694rem !important;
  }
  .u-md-spaceSides02 {
    margin-left: 0.694rem !important;
    margin-right: 0.694rem !important;
  }
  .u-md-spaceTop02 {
    margin-top: 0.694rem !important;
  }
  .u-md-spaceBottom02 {
    margin-bottom: 0.694rem !important;
  }
  .u-md-spaceLeft02 {
    margin-left: 0.694rem !important;
  }
  .u-md-spaceRight02 {
    margin-right: 0.694rem !important;
  }
  .u-md-pull02 {
    margin: -0.694rem !important;
  }
  .u-md-pullEnds02 {
    margin-bottom: -0.694rem !important;
    margin-top: -0.694rem !important;
  }
  .u-md-pullSides02 {
    margin-left: -0.694rem !important;
    margin-right: -0.694rem !important;
  }
  .u-md-pullTop02 {
    margin-top: -0.694rem !important;
  }
  .u-md-pullBottom02 {
    margin-bottom: -0.694rem !important;
  }
  .u-md-pullLeft02 {
    margin-left: -0.694rem !important;
  }
  .u-md-pullRight02 {
    margin-right: -0.694rem !important;
  }
  .u-md-pad02 {
    padding: 0.694rem !important;
  }
  .u-md-padEnds02 {
    padding-bottom: 0.694rem !important;
    padding-top: 0.694rem !important;
  }
  .u-md-padSides02 {
    padding-left: 0.694rem !important;
    padding-right: 0.694rem !important;
  }
  .u-md-padTop02 {
    padding-top: 0.694rem !important;
  }
  .u-md-padBottom02 {
    padding-bottom: 0.694rem !important;
  }
  .u-md-padLeft02 {
    padding-left: 0.694rem !important;
  }
  .u-md-padRight02 {
    padding-right: 0.694rem !important;
  }
  .u-md-spaceItems01 > * + * {
    margin-top: 0.833rem !important;
  }
  .u-md-staggerItems01 > * + * {
    margin-top: 0.833em !important;
  }
  .u-md-space01 {
    margin: 0.833rem !important;
  }
  .u-md-spaceEnds01 {
    margin-bottom: 0.833rem !important;
    margin-top: 0.833rem !important;
  }
  .u-md-spaceSides01 {
    margin-left: 0.833rem !important;
    margin-right: 0.833rem !important;
  }
  .u-md-spaceTop01 {
    margin-top: 0.833rem !important;
  }
  .u-md-spaceBottom01 {
    margin-bottom: 0.833rem !important;
  }
  .u-md-spaceLeft01 {
    margin-left: 0.833rem !important;
  }
  .u-md-spaceRight01 {
    margin-right: 0.833rem !important;
  }
  .u-md-pull01 {
    margin: -0.833rem !important;
  }
  .u-md-pullEnds01 {
    margin-bottom: -0.833rem !important;
    margin-top: -0.833rem !important;
  }
  .u-md-pullSides01 {
    margin-left: -0.833rem !important;
    margin-right: -0.833rem !important;
  }
  .u-md-pullTop01 {
    margin-top: -0.833rem !important;
  }
  .u-md-pullBottom01 {
    margin-bottom: -0.833rem !important;
  }
  .u-md-pullLeft01 {
    margin-left: -0.833rem !important;
  }
  .u-md-pullRight01 {
    margin-right: -0.833rem !important;
  }
  .u-md-pad01 {
    padding: 0.833rem !important;
  }
  .u-md-padEnds01 {
    padding-bottom: 0.833rem !important;
    padding-top: 0.833rem !important;
  }
  .u-md-padSides01 {
    padding-left: 0.833rem !important;
    padding-right: 0.833rem !important;
  }
  .u-md-padTop01 {
    padding-top: 0.833rem !important;
  }
  .u-md-padBottom01 {
    padding-bottom: 0.833rem !important;
  }
  .u-md-padLeft01 {
    padding-left: 0.833rem !important;
  }
  .u-md-padRight01 {
    padding-right: 0.833rem !important;
  }
  /**
   * Default values omit the suffix and use the `0` step.
   */
  .u-md-spaceItems > * + * {
    margin-top: 1rem !important;
  }
  .u-md-staggerItems > * + * {
    margin-top: 1em !important;
  }
  .u-md-space {
    margin: 1rem !important;
  }
  .u-md-spaceEnds {
    margin-bottom: 1rem !important;
    margin-top: 1rem !important;
  }
  .u-md-spaceSides {
    margin-left: 1rem !important;
    margin-right: 1rem !important;
  }
  .u-md-spaceTop {
    margin-top: 1rem !important;
  }
  .u-md-spaceBottom {
    margin-bottom: 1rem !important;
  }
  .u-md-spaceLeft {
    margin-left: 1rem !important;
  }
  .u-md-spaceRight {
    margin-right: 1rem !important;
  }
  .u-md-pull {
    margin: -1rem !important;
  }
  .u-md-pullEnds {
    margin-bottom: -1rem !important;
    margin-top: -1rem !important;
  }
  .u-md-pullSides {
    margin-left: -1rem !important;
    margin-right: -1rem !important;
  }
  .u-md-pullTop {
    margin-top: -1rem !important;
  }
  .u-md-pullBottom {
    margin-bottom: -1rem !important;
  }
  .u-md-pullLeft {
    margin-left: -1rem !important;
  }
  .u-md-pullRight {
    margin-right: -1rem !important;
  }
  .u-md-pad {
    padding: 1rem !important;
  }
  .u-md-padEnds {
    padding-bottom: 1rem !important;
    padding-top: 1rem !important;
  }
  .u-md-padSides {
    padding-left: 1rem !important;
    padding-right: 1rem !important;
  }
  .u-md-padTop {
    padding-top: 1rem !important;
  }
  .u-md-padBottom {
    padding-bottom: 1rem !important;
  }
  .u-md-padLeft {
    padding-left: 1rem !important;
  }
  .u-md-padRight {
    padding-right: 1rem !important;
  }
  /**
   * Positive scale steps.
   */
  .u-md-spaceItems1 > * + * {
    margin-top: 1.2rem !important;
  }
  .u-md-staggerItems1 > * + * {
    margin-top: 1.2em !important;
  }
  .u-md-space1 {
    margin: 1.2rem !important;
  }
  .u-md-spaceEnds1 {
    margin-bottom: 1.2rem !important;
    margin-top: 1.2rem !important;
  }
  .u-md-spaceSides1 {
    margin-left: 1.2rem !important;
    margin-right: 1.2rem !important;
  }
  .u-md-spaceTop1 {
    margin-top: 1.2rem !important;
  }
  .u-md-spaceBottom1 {
    margin-bottom: 1.2rem !important;
  }
  .u-md-spaceLeft1 {
    margin-left: 1.2rem !important;
  }
  .u-md-spaceRight1 {
    margin-right: 1.2rem !important;
  }
  .u-md-pull1 {
    margin: -1.2rem !important;
  }
  .u-md-pullEnds1 {
    margin-bottom: -1.2rem !important;
    margin-top: -1.2rem !important;
  }
  .u-md-pullSides1 {
    margin-left: -1.2rem !important;
    margin-right: -1.2rem !important;
  }
  .u-md-pullTop1 {
    margin-top: -1.2rem !important;
  }
  .u-md-pullBottom1 {
    margin-bottom: -1.2rem !important;
  }
  .u-md-pullLeft1 {
    margin-left: -1.2rem !important;
  }
  .u-md-pullRight1 {
    margin-right: -1.2rem !important;
  }
  .u-md-pad1 {
    padding: 1.2rem !important;
  }
  .u-md-padEnds1 {
    padding-bottom: 1.2rem !important;
    padding-top: 1.2rem !important;
  }
  .u-md-padSides1 {
    padding-left: 1.2rem !important;
    padding-right: 1.2rem !important;
  }
  .u-md-padTop1 {
    padding-top: 1.2rem !important;
  }
  .u-md-padBottom1 {
    padding-bottom: 1.2rem !important;
  }
  .u-md-padLeft1 {
    padding-left: 1.2rem !important;
  }
  .u-md-padRight1 {
    padding-right: 1.2rem !important;
  }
  .u-md-spaceItems2 > * + * {
    margin-top: 1.44rem !important;
  }
  .u-md-staggerItems2 > * + * {
    margin-top: 1.44em !important;
  }
  .u-md-space2 {
    margin: 1.44rem !important;
  }
  .u-md-spaceEnds2 {
    margin-bottom: 1.44rem !important;
    margin-top: 1.44rem !important;
  }
  .u-md-spaceSides2 {
    margin-left: 1.44rem !important;
    margin-right: 1.44rem !important;
  }
  .u-md-spaceTop2 {
    margin-top: 1.44rem !important;
  }
  .u-md-spaceBottom2 {
    margin-bottom: 1.44rem !important;
  }
  .u-md-spaceLeft2 {
    margin-left: 1.44rem !important;
  }
  .u-md-spaceRight2 {
    margin-right: 1.44rem !important;
  }
  .u-md-pull2 {
    margin: -1.44rem !important;
  }
  .u-md-pullEnds2 {
    margin-bottom: -1.44rem !important;
    margin-top: -1.44rem !important;
  }
  .u-md-pullSides2 {
    margin-left: -1.44rem !important;
    margin-right: -1.44rem !important;
  }
  .u-md-pullTop2 {
    margin-top: -1.44rem !important;
  }
  .u-md-pullBottom2 {
    margin-bottom: -1.44rem !important;
  }
  .u-md-pullLeft2 {
    margin-left: -1.44rem !important;
  }
  .u-md-pullRight2 {
    margin-right: -1.44rem !important;
  }
  .u-md-pad2 {
    padding: 1.44rem !important;
  }
  .u-md-padEnds2 {
    padding-bottom: 1.44rem !important;
    padding-top: 1.44rem !important;
  }
  .u-md-padSides2 {
    padding-left: 1.44rem !important;
    padding-right: 1.44rem !important;
  }
  .u-md-padTop2 {
    padding-top: 1.44rem !important;
  }
  .u-md-padBottom2 {
    padding-bottom: 1.44rem !important;
  }
  .u-md-padLeft2 {
    padding-left: 1.44rem !important;
  }
  .u-md-padRight2 {
    padding-right: 1.44rem !important;
  }
  .u-md-spaceItems3 > * + * {
    margin-top: 1.728rem !important;
  }
  .u-md-staggerItems3 > * + * {
    margin-top: 1.728em !important;
  }
  .u-md-space3 {
    margin: 1.728rem !important;
  }
  .u-md-spaceEnds3 {
    margin-bottom: 1.728rem !important;
    margin-top: 1.728rem !important;
  }
  .u-md-spaceSides3 {
    margin-left: 1.728rem !important;
    margin-right: 1.728rem !important;
  }
  .u-md-spaceTop3 {
    margin-top: 1.728rem !important;
  }
  .u-md-spaceBottom3 {
    margin-bottom: 1.728rem !important;
  }
  .u-md-spaceLeft3 {
    margin-left: 1.728rem !important;
  }
  .u-md-spaceRight3 {
    margin-right: 1.728rem !important;
  }
  .u-md-pull3 {
    margin: -1.728rem !important;
  }
  .u-md-pullEnds3 {
    margin-bottom: -1.728rem !important;
    margin-top: -1.728rem !important;
  }
  .u-md-pullSides3 {
    margin-left: -1.728rem !important;
    margin-right: -1.728rem !important;
  }
  .u-md-pullTop3 {
    margin-top: -1.728rem !important;
  }
  .u-md-pullBottom3 {
    margin-bottom: -1.728rem !important;
  }
  .u-md-pullLeft3 {
    margin-left: -1.728rem !important;
  }
  .u-md-pullRight3 {
    margin-right: -1.728rem !important;
  }
  .u-md-pad3 {
    padding: 1.728rem !important;
  }
  .u-md-padEnds3 {
    padding-bottom: 1.728rem !important;
    padding-top: 1.728rem !important;
  }
  .u-md-padSides3 {
    padding-left: 1.728rem !important;
    padding-right: 1.728rem !important;
  }
  .u-md-padTop3 {
    padding-top: 1.728rem !important;
  }
  .u-md-padBottom3 {
    padding-bottom: 1.728rem !important;
  }
  .u-md-padLeft3 {
    padding-left: 1.728rem !important;
  }
  .u-md-padRight3 {
    padding-right: 1.728rem !important;
  }
  .u-md-spaceItems4 > * + * {
    margin-top: 2.074rem !important;
  }
  .u-md-staggerItems4 > * + * {
    margin-top: 2.074em !important;
  }
  .u-md-space4 {
    margin: 2.074rem !important;
  }
  .u-md-spaceEnds4 {
    margin-bottom: 2.074rem !important;
    margin-top: 2.074rem !important;
  }
  .u-md-spaceSides4 {
    margin-left: 2.074rem !important;
    margin-right: 2.074rem !important;
  }
  .u-md-spaceTop4 {
    margin-top: 2.074rem !important;
  }
  .u-md-spaceBottom4 {
    margin-bottom: 2.074rem !important;
  }
  .u-md-spaceLeft4 {
    margin-left: 2.074rem !important;
  }
  .u-md-spaceRight4 {
    margin-right: 2.074rem !important;
  }
  .u-md-pull4 {
    margin: -2.074rem !important;
  }
  .u-md-pullEnds4 {
    margin-bottom: -2.074rem !important;
    margin-top: -2.074rem !important;
  }
  .u-md-pullSides4 {
    margin-left: -2.074rem !important;
    margin-right: -2.074rem !important;
  }
  .u-md-pullTop4 {
    margin-top: -2.074rem !important;
  }
  .u-md-pullBottom4 {
    margin-bottom: -2.074rem !important;
  }
  .u-md-pullLeft4 {
    margin-left: -2.074rem !important;
  }
  .u-md-pullRight4 {
    margin-right: -2.074rem !important;
  }
  .u-md-pad4 {
    padding: 2.074rem !important;
  }
  .u-md-padEnds4 {
    padding-bottom: 2.074rem !important;
    padding-top: 2.074rem !important;
  }
  .u-md-padSides4 {
    padding-left: 2.074rem !important;
    padding-right: 2.074rem !important;
  }
  .u-md-padTop4 {
    padding-top: 2.074rem !important;
  }
  .u-md-padBottom4 {
    padding-bottom: 2.074rem !important;
  }
  .u-md-padLeft4 {
    padding-left: 2.074rem !important;
  }
  .u-md-padRight4 {
    padding-right: 2.074rem !important;
  }
  .u-md-spaceItems5 > * + * {
    margin-top: 2.488rem !important;
  }
  .u-md-staggerItems5 > * + * {
    margin-top: 2.488em !important;
  }
  .u-md-space5 {
    margin: 2.488rem !important;
  }
  .u-md-spaceEnds5 {
    margin-bottom: 2.488rem !important;
    margin-top: 2.488rem !important;
  }
  .u-md-spaceSides5 {
    margin-left: 2.488rem !important;
    margin-right: 2.488rem !important;
  }
  .u-md-spaceTop5 {
    margin-top: 2.488rem !important;
  }
  .u-md-spaceBottom5 {
    margin-bottom: 2.488rem !important;
  }
  .u-md-spaceLeft5 {
    margin-left: 2.488rem !important;
  }
  .u-md-spaceRight5 {
    margin-right: 2.488rem !important;
  }
  .u-md-pull5 {
    margin: -2.488rem !important;
  }
  .u-md-pullEnds5 {
    margin-bottom: -2.488rem !important;
    margin-top: -2.488rem !important;
  }
  .u-md-pullSides5 {
    margin-left: -2.488rem !important;
    margin-right: -2.488rem !important;
  }
  .u-md-pullTop5 {
    margin-top: -2.488rem !important;
  }
  .u-md-pullBottom5 {
    margin-bottom: -2.488rem !important;
  }
  .u-md-pullLeft5 {
    margin-left: -2.488rem !important;
  }
  .u-md-pullRight5 {
    margin-right: -2.488rem !important;
  }
  .u-md-pad5 {
    padding: 2.488rem !important;
  }
  .u-md-padEnds5 {
    padding-bottom: 2.488rem !important;
    padding-top: 2.488rem !important;
  }
  .u-md-padSides5 {
    padding-left: 2.488rem !important;
    padding-right: 2.488rem !important;
  }
  .u-md-padTop5 {
    padding-top: 2.488rem !important;
  }
  .u-md-padBottom5 {
    padding-bottom: 2.488rem !important;
  }
  .u-md-padLeft5 {
    padding-left: 2.488rem !important;
  }
  .u-md-padRight5 {
    padding-right: 2.488rem !important;
  }
  .u-md-spaceItems6 > * + * {
    margin-top: 2.986rem !important;
  }
  .u-md-staggerItems6 > * + * {
    margin-top: 2.986em !important;
  }
  .u-md-space6 {
    margin: 2.986rem !important;
  }
  .u-md-spaceEnds6 {
    margin-bottom: 2.986rem !important;
    margin-top: 2.986rem !important;
  }
  .u-md-spaceSides6 {
    margin-left: 2.986rem !important;
    margin-right: 2.986rem !important;
  }
  .u-md-spaceTop6 {
    margin-top: 2.986rem !important;
  }
  .u-md-spaceBottom6 {
    margin-bottom: 2.986rem !important;
  }
  .u-md-spaceLeft6 {
    margin-left: 2.986rem !important;
  }
  .u-md-spaceRight6 {
    margin-right: 2.986rem !important;
  }
  .u-md-pull6 {
    margin: -2.986rem !important;
  }
  .u-md-pullEnds6 {
    margin-bottom: -2.986rem !important;
    margin-top: -2.986rem !important;
  }
  .u-md-pullSides6 {
    margin-left: -2.986rem !important;
    margin-right: -2.986rem !important;
  }
  .u-md-pullTop6 {
    margin-top: -2.986rem !important;
  }
  .u-md-pullBottom6 {
    margin-bottom: -2.986rem !important;
  }
  .u-md-pullLeft6 {
    margin-left: -2.986rem !important;
  }
  .u-md-pullRight6 {
    margin-right: -2.986rem !important;
  }
  .u-md-pad6 {
    padding: 2.986rem !important;
  }
  .u-md-padEnds6 {
    padding-bottom: 2.986rem !important;
    padding-top: 2.986rem !important;
  }
  .u-md-padSides6 {
    padding-left: 2.986rem !important;
    padding-right: 2.986rem !important;
  }
  .u-md-padTop6 {
    padding-top: 2.986rem !important;
  }
  .u-md-padBottom6 {
    padding-bottom: 2.986rem !important;
  }
  .u-md-padLeft6 {
    padding-left: 2.986rem !important;
  }
  .u-md-padRight6 {
    padding-right: 2.986rem !important;
  }
  /**
   * Reset utilities. These come last to give them slight precedence over the
   * other utilities to make it easier to clear whitespace across breakpoints.
   */
  .u-md-spaceNone {
    margin: 0 !important;
  }
  .u-md-spaceEndsNone {
    margin-bottom: 0 !important;
    margin-top: 0 !important;
  }
  .u-md-spaceSidesNone {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  .u-md-spaceTopNone {
    margin-top: 0 !important;
  }
  .u-md-spaceBottomNone {
    margin-bottom: 0 !important;
  }
  .u-md-spaceLeftNone {
    margin-left: 0 !important;
  }
  .u-md-spaceRightNone {
    margin-right: 0 !important;
  }
  .u-md-padNone {
    padding: 0 !important;
  }
  .u-md-padEndsNone {
    padding-bottom: 0 !important;
    padding-top: 0 !important;
  }
  .u-md-padSidesNone {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
  .u-md-padTopNone {
    padding-top: 0 !important;
  }
  .u-md-padBottomNone {
    padding-bottom: 0 !important;
  }
  .u-md-padLeftNone {
    padding-left: 0 !important;
  }
  .u-md-padRightNone {
    padding-right: 0 !important;
  }
}

@media (min-width: 64em) {
  /**
   * Negative scale steps swap `-` for `0`.
   */
  .u-lg-spaceItems06 > * + * {
    margin-top: 0.335rem !important;
  }
  .u-lg-staggerItems06 > * + * {
    margin-top: 0.335em !important;
  }
  .u-lg-space06 {
    margin: 0.335rem !important;
  }
  .u-lg-spaceEnds06 {
    margin-bottom: 0.335rem !important;
    margin-top: 0.335rem !important;
  }
  .u-lg-spaceSides06 {
    margin-left: 0.335rem !important;
    margin-right: 0.335rem !important;
  }
  .u-lg-spaceTop06 {
    margin-top: 0.335rem !important;
  }
  .u-lg-spaceBottom06 {
    margin-bottom: 0.335rem !important;
  }
  .u-lg-spaceLeft06 {
    margin-left: 0.335rem !important;
  }
  .u-lg-spaceRight06 {
    margin-right: 0.335rem !important;
  }
  .u-lg-pull06 {
    margin: -0.335rem !important;
  }
  .u-lg-pullEnds06 {
    margin-bottom: -0.335rem !important;
    margin-top: -0.335rem !important;
  }
  .u-lg-pullSides06 {
    margin-left: -0.335rem !important;
    margin-right: -0.335rem !important;
  }
  .u-lg-pullTop06 {
    margin-top: -0.335rem !important;
  }
  .u-lg-pullBottom06 {
    margin-bottom: -0.335rem !important;
  }
  .u-lg-pullLeft06 {
    margin-left: -0.335rem !important;
  }
  .u-lg-pullRight06 {
    margin-right: -0.335rem !important;
  }
  .u-lg-pad06 {
    padding: 0.335rem !important;
  }
  .u-lg-padEnds06 {
    padding-bottom: 0.335rem !important;
    padding-top: 0.335rem !important;
  }
  .u-lg-padSides06 {
    padding-left: 0.335rem !important;
    padding-right: 0.335rem !important;
  }
  .u-lg-padTop06 {
    padding-top: 0.335rem !important;
  }
  .u-lg-padBottom06 {
    padding-bottom: 0.335rem !important;
  }
  .u-lg-padLeft06 {
    padding-left: 0.335rem !important;
  }
  .u-lg-padRight06 {
    padding-right: 0.335rem !important;
  }
  .u-lg-spaceItems05 > * + * {
    margin-top: 0.402rem !important;
  }
  .u-lg-staggerItems05 > * + * {
    margin-top: 0.402em !important;
  }
  .u-lg-space05 {
    margin: 0.402rem !important;
  }
  .u-lg-spaceEnds05 {
    margin-bottom: 0.402rem !important;
    margin-top: 0.402rem !important;
  }
  .u-lg-spaceSides05 {
    margin-left: 0.402rem !important;
    margin-right: 0.402rem !important;
  }
  .u-lg-spaceTop05 {
    margin-top: 0.402rem !important;
  }
  .u-lg-spaceBottom05 {
    margin-bottom: 0.402rem !important;
  }
  .u-lg-spaceLeft05 {
    margin-left: 0.402rem !important;
  }
  .u-lg-spaceRight05 {
    margin-right: 0.402rem !important;
  }
  .u-lg-pull05 {
    margin: -0.402rem !important;
  }
  .u-lg-pullEnds05 {
    margin-bottom: -0.402rem !important;
    margin-top: -0.402rem !important;
  }
  .u-lg-pullSides05 {
    margin-left: -0.402rem !important;
    margin-right: -0.402rem !important;
  }
  .u-lg-pullTop05 {
    margin-top: -0.402rem !important;
  }
  .u-lg-pullBottom05 {
    margin-bottom: -0.402rem !important;
  }
  .u-lg-pullLeft05 {
    margin-left: -0.402rem !important;
  }
  .u-lg-pullRight05 {
    margin-right: -0.402rem !important;
  }
  .u-lg-pad05 {
    padding: 0.402rem !important;
  }
  .u-lg-padEnds05 {
    padding-bottom: 0.402rem !important;
    padding-top: 0.402rem !important;
  }
  .u-lg-padSides05 {
    padding-left: 0.402rem !important;
    padding-right: 0.402rem !important;
  }
  .u-lg-padTop05 {
    padding-top: 0.402rem !important;
  }
  .u-lg-padBottom05 {
    padding-bottom: 0.402rem !important;
  }
  .u-lg-padLeft05 {
    padding-left: 0.402rem !important;
  }
  .u-lg-padRight05 {
    padding-right: 0.402rem !important;
  }
  .u-lg-spaceItems04 > * + * {
    margin-top: 0.482rem !important;
  }
  .u-lg-staggerItems04 > * + * {
    margin-top: 0.482em !important;
  }
  .u-lg-space04 {
    margin: 0.482rem !important;
  }
  .u-lg-spaceEnds04 {
    margin-bottom: 0.482rem !important;
    margin-top: 0.482rem !important;
  }
  .u-lg-spaceSides04 {
    margin-left: 0.482rem !important;
    margin-right: 0.482rem !important;
  }
  .u-lg-spaceTop04 {
    margin-top: 0.482rem !important;
  }
  .u-lg-spaceBottom04 {
    margin-bottom: 0.482rem !important;
  }
  .u-lg-spaceLeft04 {
    margin-left: 0.482rem !important;
  }
  .u-lg-spaceRight04 {
    margin-right: 0.482rem !important;
  }
  .u-lg-pull04 {
    margin: -0.482rem !important;
  }
  .u-lg-pullEnds04 {
    margin-bottom: -0.482rem !important;
    margin-top: -0.482rem !important;
  }
  .u-lg-pullSides04 {
    margin-left: -0.482rem !important;
    margin-right: -0.482rem !important;
  }
  .u-lg-pullTop04 {
    margin-top: -0.482rem !important;
  }
  .u-lg-pullBottom04 {
    margin-bottom: -0.482rem !important;
  }
  .u-lg-pullLeft04 {
    margin-left: -0.482rem !important;
  }
  .u-lg-pullRight04 {
    margin-right: -0.482rem !important;
  }
  .u-lg-pad04 {
    padding: 0.482rem !important;
  }
  .u-lg-padEnds04 {
    padding-bottom: 0.482rem !important;
    padding-top: 0.482rem !important;
  }
  .u-lg-padSides04 {
    padding-left: 0.482rem !important;
    padding-right: 0.482rem !important;
  }
  .u-lg-padTop04 {
    padding-top: 0.482rem !important;
  }
  .u-lg-padBottom04 {
    padding-bottom: 0.482rem !important;
  }
  .u-lg-padLeft04 {
    padding-left: 0.482rem !important;
  }
  .u-lg-padRight04 {
    padding-right: 0.482rem !important;
  }
  .u-lg-spaceItems03 > * + * {
    margin-top: 0.579rem !important;
  }
  .u-lg-staggerItems03 > * + * {
    margin-top: 0.579em !important;
  }
  .u-lg-space03 {
    margin: 0.579rem !important;
  }
  .u-lg-spaceEnds03 {
    margin-bottom: 0.579rem !important;
    margin-top: 0.579rem !important;
  }
  .u-lg-spaceSides03 {
    margin-left: 0.579rem !important;
    margin-right: 0.579rem !important;
  }
  .u-lg-spaceTop03 {
    margin-top: 0.579rem !important;
  }
  .u-lg-spaceBottom03 {
    margin-bottom: 0.579rem !important;
  }
  .u-lg-spaceLeft03 {
    margin-left: 0.579rem !important;
  }
  .u-lg-spaceRight03 {
    margin-right: 0.579rem !important;
  }
  .u-lg-pull03 {
    margin: -0.579rem !important;
  }
  .u-lg-pullEnds03 {
    margin-bottom: -0.579rem !important;
    margin-top: -0.579rem !important;
  }
  .u-lg-pullSides03 {
    margin-left: -0.579rem !important;
    margin-right: -0.579rem !important;
  }
  .u-lg-pullTop03 {
    margin-top: -0.579rem !important;
  }
  .u-lg-pullBottom03 {
    margin-bottom: -0.579rem !important;
  }
  .u-lg-pullLeft03 {
    margin-left: -0.579rem !important;
  }
  .u-lg-pullRight03 {
    margin-right: -0.579rem !important;
  }
  .u-lg-pad03 {
    padding: 0.579rem !important;
  }
  .u-lg-padEnds03 {
    padding-bottom: 0.579rem !important;
    padding-top: 0.579rem !important;
  }
  .u-lg-padSides03 {
    padding-left: 0.579rem !important;
    padding-right: 0.579rem !important;
  }
  .u-lg-padTop03 {
    padding-top: 0.579rem !important;
  }
  .u-lg-padBottom03 {
    padding-bottom: 0.579rem !important;
  }
  .u-lg-padLeft03 {
    padding-left: 0.579rem !important;
  }
  .u-lg-padRight03 {
    padding-right: 0.579rem !important;
  }
  .u-lg-spaceItems02 > * + * {
    margin-top: 0.694rem !important;
  }
  .u-lg-staggerItems02 > * + * {
    margin-top: 0.694em !important;
  }
  .u-lg-space02 {
    margin: 0.694rem !important;
  }
  .u-lg-spaceEnds02 {
    margin-bottom: 0.694rem !important;
    margin-top: 0.694rem !important;
  }
  .u-lg-spaceSides02 {
    margin-left: 0.694rem !important;
    margin-right: 0.694rem !important;
  }
  .u-lg-spaceTop02 {
    margin-top: 0.694rem !important;
  }
  .u-lg-spaceBottom02 {
    margin-bottom: 0.694rem !important;
  }
  .u-lg-spaceLeft02 {
    margin-left: 0.694rem !important;
  }
  .u-lg-spaceRight02 {
    margin-right: 0.694rem !important;
  }
  .u-lg-pull02 {
    margin: -0.694rem !important;
  }
  .u-lg-pullEnds02 {
    margin-bottom: -0.694rem !important;
    margin-top: -0.694rem !important;
  }
  .u-lg-pullSides02 {
    margin-left: -0.694rem !important;
    margin-right: -0.694rem !important;
  }
  .u-lg-pullTop02 {
    margin-top: -0.694rem !important;
  }
  .u-lg-pullBottom02 {
    margin-bottom: -0.694rem !important;
  }
  .u-lg-pullLeft02 {
    margin-left: -0.694rem !important;
  }
  .u-lg-pullRight02 {
    margin-right: -0.694rem !important;
  }
  .u-lg-pad02 {
    padding: 0.694rem !important;
  }
  .u-lg-padEnds02 {
    padding-bottom: 0.694rem !important;
    padding-top: 0.694rem !important;
  }
  .u-lg-padSides02 {
    padding-left: 0.694rem !important;
    padding-right: 0.694rem !important;
  }
  .u-lg-padTop02 {
    padding-top: 0.694rem !important;
  }
  .u-lg-padBottom02 {
    padding-bottom: 0.694rem !important;
  }
  .u-lg-padLeft02 {
    padding-left: 0.694rem !important;
  }
  .u-lg-padRight02 {
    padding-right: 0.694rem !important;
  }
  .u-lg-spaceItems01 > * + * {
    margin-top: 0.833rem !important;
  }
  .u-lg-staggerItems01 > * + * {
    margin-top: 0.833em !important;
  }
  .u-lg-space01 {
    margin: 0.833rem !important;
  }
  .u-lg-spaceEnds01 {
    margin-bottom: 0.833rem !important;
    margin-top: 0.833rem !important;
  }
  .u-lg-spaceSides01 {
    margin-left: 0.833rem !important;
    margin-right: 0.833rem !important;
  }
  .u-lg-spaceTop01 {
    margin-top: 0.833rem !important;
  }
  .u-lg-spaceBottom01 {
    margin-bottom: 0.833rem !important;
  }
  .u-lg-spaceLeft01 {
    margin-left: 0.833rem !important;
  }
  .u-lg-spaceRight01 {
    margin-right: 0.833rem !important;
  }
  .u-lg-pull01 {
    margin: -0.833rem !important;
  }
  .u-lg-pullEnds01 {
    margin-bottom: -0.833rem !important;
    margin-top: -0.833rem !important;
  }
  .u-lg-pullSides01 {
    margin-left: -0.833rem !important;
    margin-right: -0.833rem !important;
  }
  .u-lg-pullTop01 {
    margin-top: -0.833rem !important;
  }
  .u-lg-pullBottom01 {
    margin-bottom: -0.833rem !important;
  }
  .u-lg-pullLeft01 {
    margin-left: -0.833rem !important;
  }
  .u-lg-pullRight01 {
    margin-right: -0.833rem !important;
  }
  .u-lg-pad01 {
    padding: 0.833rem !important;
  }
  .u-lg-padEnds01 {
    padding-bottom: 0.833rem !important;
    padding-top: 0.833rem !important;
  }
  .u-lg-padSides01 {
    padding-left: 0.833rem !important;
    padding-right: 0.833rem !important;
  }
  .u-lg-padTop01 {
    padding-top: 0.833rem !important;
  }
  .u-lg-padBottom01 {
    padding-bottom: 0.833rem !important;
  }
  .u-lg-padLeft01 {
    padding-left: 0.833rem !important;
  }
  .u-lg-padRight01 {
    padding-right: 0.833rem !important;
  }
  /**
   * Default values omit the suffix and use the `0` step.
   */
  .u-lg-spaceItems > * + * {
    margin-top: 1rem !important;
  }
  .u-lg-staggerItems > * + * {
    margin-top: 1em !important;
  }
  .u-lg-space {
    margin: 1rem !important;
  }
  .u-lg-spaceEnds {
    margin-bottom: 1rem !important;
    margin-top: 1rem !important;
  }
  .u-lg-spaceSides {
    margin-left: 1rem !important;
    margin-right: 1rem !important;
  }
  .u-lg-spaceTop {
    margin-top: 1rem !important;
  }
  .u-lg-spaceBottom {
    margin-bottom: 1rem !important;
  }
  .u-lg-spaceLeft {
    margin-left: 1rem !important;
  }
  .u-lg-spaceRight {
    margin-right: 1rem !important;
  }
  .u-lg-pull {
    margin: -1rem !important;
  }
  .u-lg-pullEnds {
    margin-bottom: -1rem !important;
    margin-top: -1rem !important;
  }
  .u-lg-pullSides {
    margin-left: -1rem !important;
    margin-right: -1rem !important;
  }
  .u-lg-pullTop {
    margin-top: -1rem !important;
  }
  .u-lg-pullBottom {
    margin-bottom: -1rem !important;
  }
  .u-lg-pullLeft {
    margin-left: -1rem !important;
  }
  .u-lg-pullRight {
    margin-right: -1rem !important;
  }
  .u-lg-pad {
    padding: 1rem !important;
  }
  .u-lg-padEnds {
    padding-bottom: 1rem !important;
    padding-top: 1rem !important;
  }
  .u-lg-padSides {
    padding-left: 1rem !important;
    padding-right: 1rem !important;
  }
  .u-lg-padTop {
    padding-top: 1rem !important;
  }
  .u-lg-padBottom {
    padding-bottom: 1rem !important;
  }
  .u-lg-padLeft {
    padding-left: 1rem !important;
  }
  .u-lg-padRight {
    padding-right: 1rem !important;
  }
  /**
   * Positive scale steps.
   */
  .u-lg-spaceItems1 > * + * {
    margin-top: 1.2rem !important;
  }
  .u-lg-staggerItems1 > * + * {
    margin-top: 1.2em !important;
  }
  .u-lg-space1 {
    margin: 1.2rem !important;
  }
  .u-lg-spaceEnds1 {
    margin-bottom: 1.2rem !important;
    margin-top: 1.2rem !important;
  }
  .u-lg-spaceSides1 {
    margin-left: 1.2rem !important;
    margin-right: 1.2rem !important;
  }
  .u-lg-spaceTop1 {
    margin-top: 1.2rem !important;
  }
  .u-lg-spaceBottom1 {
    margin-bottom: 1.2rem !important;
  }
  .u-lg-spaceLeft1 {
    margin-left: 1.2rem !important;
  }
  .u-lg-spaceRight1 {
    margin-right: 1.2rem !important;
  }
  .u-lg-pull1 {
    margin: -1.2rem !important;
  }
  .u-lg-pullEnds1 {
    margin-bottom: -1.2rem !important;
    margin-top: -1.2rem !important;
  }
  .u-lg-pullSides1 {
    margin-left: -1.2rem !important;
    margin-right: -1.2rem !important;
  }
  .u-lg-pullTop1 {
    margin-top: -1.2rem !important;
  }
  .u-lg-pullBottom1 {
    margin-bottom: -1.2rem !important;
  }
  .u-lg-pullLeft1 {
    margin-left: -1.2rem !important;
  }
  .u-lg-pullRight1 {
    margin-right: -1.2rem !important;
  }
  .u-lg-pad1 {
    padding: 1.2rem !important;
  }
  .u-lg-padEnds1 {
    padding-bottom: 1.2rem !important;
    padding-top: 1.2rem !important;
  }
  .u-lg-padSides1 {
    padding-left: 1.2rem !important;
    padding-right: 1.2rem !important;
  }
  .u-lg-padTop1 {
    padding-top: 1.2rem !important;
  }
  .u-lg-padBottom1 {
    padding-bottom: 1.2rem !important;
  }
  .u-lg-padLeft1 {
    padding-left: 1.2rem !important;
  }
  .u-lg-padRight1 {
    padding-right: 1.2rem !important;
  }
  .u-lg-spaceItems2 > * + * {
    margin-top: 1.44rem !important;
  }
  .u-lg-staggerItems2 > * + * {
    margin-top: 1.44em !important;
  }
  .u-lg-space2 {
    margin: 1.44rem !important;
  }
  .u-lg-spaceEnds2 {
    margin-bottom: 1.44rem !important;
    margin-top: 1.44rem !important;
  }
  .u-lg-spaceSides2 {
    margin-left: 1.44rem !important;
    margin-right: 1.44rem !important;
  }
  .u-lg-spaceTop2 {
    margin-top: 1.44rem !important;
  }
  .u-lg-spaceBottom2 {
    margin-bottom: 1.44rem !important;
  }
  .u-lg-spaceLeft2 {
    margin-left: 1.44rem !important;
  }
  .u-lg-spaceRight2 {
    margin-right: 1.44rem !important;
  }
  .u-lg-pull2 {
    margin: -1.44rem !important;
  }
  .u-lg-pullEnds2 {
    margin-bottom: -1.44rem !important;
    margin-top: -1.44rem !important;
  }
  .u-lg-pullSides2 {
    margin-left: -1.44rem !important;
    margin-right: -1.44rem !important;
  }
  .u-lg-pullTop2 {
    margin-top: -1.44rem !important;
  }
  .u-lg-pullBottom2 {
    margin-bottom: -1.44rem !important;
  }
  .u-lg-pullLeft2 {
    margin-left: -1.44rem !important;
  }
  .u-lg-pullRight2 {
    margin-right: -1.44rem !important;
  }
  .u-lg-pad2 {
    padding: 1.44rem !important;
  }
  .u-lg-padEnds2 {
    padding-bottom: 1.44rem !important;
    padding-top: 1.44rem !important;
  }
  .u-lg-padSides2 {
    padding-left: 1.44rem !important;
    padding-right: 1.44rem !important;
  }
  .u-lg-padTop2 {
    padding-top: 1.44rem !important;
  }
  .u-lg-padBottom2 {
    padding-bottom: 1.44rem !important;
  }
  .u-lg-padLeft2 {
    padding-left: 1.44rem !important;
  }
  .u-lg-padRight2 {
    padding-right: 1.44rem !important;
  }
  .u-lg-spaceItems3 > * + * {
    margin-top: 1.728rem !important;
  }
  .u-lg-staggerItems3 > * + * {
    margin-top: 1.728em !important;
  }
  .u-lg-space3 {
    margin: 1.728rem !important;
  }
  .u-lg-spaceEnds3 {
    margin-bottom: 1.728rem !important;
    margin-top: 1.728rem !important;
  }
  .u-lg-spaceSides3 {
    margin-left: 1.728rem !important;
    margin-right: 1.728rem !important;
  }
  .u-lg-spaceTop3 {
    margin-top: 1.728rem !important;
  }
  .u-lg-spaceBottom3 {
    margin-bottom: 1.728rem !important;
  }
  .u-lg-spaceLeft3 {
    margin-left: 1.728rem !important;
  }
  .u-lg-spaceRight3 {
    margin-right: 1.728rem !important;
  }
  .u-lg-pull3 {
    margin: -1.728rem !important;
  }
  .u-lg-pullEnds3 {
    margin-bottom: -1.728rem !important;
    margin-top: -1.728rem !important;
  }
  .u-lg-pullSides3 {
    margin-left: -1.728rem !important;
    margin-right: -1.728rem !important;
  }
  .u-lg-pullTop3 {
    margin-top: -1.728rem !important;
  }
  .u-lg-pullBottom3 {
    margin-bottom: -1.728rem !important;
  }
  .u-lg-pullLeft3 {
    margin-left: -1.728rem !important;
  }
  .u-lg-pullRight3 {
    margin-right: -1.728rem !important;
  }
  .u-lg-pad3 {
    padding: 1.728rem !important;
  }
  .u-lg-padEnds3 {
    padding-bottom: 1.728rem !important;
    padding-top: 1.728rem !important;
  }
  .u-lg-padSides3 {
    padding-left: 1.728rem !important;
    padding-right: 1.728rem !important;
  }
  .u-lg-padTop3 {
    padding-top: 1.728rem !important;
  }
  .u-lg-padBottom3 {
    padding-bottom: 1.728rem !important;
  }
  .u-lg-padLeft3 {
    padding-left: 1.728rem !important;
  }
  .u-lg-padRight3 {
    padding-right: 1.728rem !important;
  }
  .u-lg-spaceItems4 > * + * {
    margin-top: 2.074rem !important;
  }
  .u-lg-staggerItems4 > * + * {
    margin-top: 2.074em !important;
  }
  .u-lg-space4 {
    margin: 2.074rem !important;
  }
  .u-lg-spaceEnds4 {
    margin-bottom: 2.074rem !important;
    margin-top: 2.074rem !important;
  }
  .u-lg-spaceSides4 {
    margin-left: 2.074rem !important;
    margin-right: 2.074rem !important;
  }
  .u-lg-spaceTop4 {
    margin-top: 2.074rem !important;
  }
  .u-lg-spaceBottom4 {
    margin-bottom: 2.074rem !important;
  }
  .u-lg-spaceLeft4 {
    margin-left: 2.074rem !important;
  }
  .u-lg-spaceRight4 {
    margin-right: 2.074rem !important;
  }
  .u-lg-pull4 {
    margin: -2.074rem !important;
  }
  .u-lg-pullEnds4 {
    margin-bottom: -2.074rem !important;
    margin-top: -2.074rem !important;
  }
  .u-lg-pullSides4 {
    margin-left: -2.074rem !important;
    margin-right: -2.074rem !important;
  }
  .u-lg-pullTop4 {
    margin-top: -2.074rem !important;
  }
  .u-lg-pullBottom4 {
    margin-bottom: -2.074rem !important;
  }
  .u-lg-pullLeft4 {
    margin-left: -2.074rem !important;
  }
  .u-lg-pullRight4 {
    margin-right: -2.074rem !important;
  }
  .u-lg-pad4 {
    padding: 2.074rem !important;
  }
  .u-lg-padEnds4 {
    padding-bottom: 2.074rem !important;
    padding-top: 2.074rem !important;
  }
  .u-lg-padSides4 {
    padding-left: 2.074rem !important;
    padding-right: 2.074rem !important;
  }
  .u-lg-padTop4 {
    padding-top: 2.074rem !important;
  }
  .u-lg-padBottom4 {
    padding-bottom: 2.074rem !important;
  }
  .u-lg-padLeft4 {
    padding-left: 2.074rem !important;
  }
  .u-lg-padRight4 {
    padding-right: 2.074rem !important;
  }
  .u-lg-spaceItems5 > * + * {
    margin-top: 2.488rem !important;
  }
  .u-lg-staggerItems5 > * + * {
    margin-top: 2.488em !important;
  }
  .u-lg-space5 {
    margin: 2.488rem !important;
  }
  .u-lg-spaceEnds5 {
    margin-bottom: 2.488rem !important;
    margin-top: 2.488rem !important;
  }
  .u-lg-spaceSides5 {
    margin-left: 2.488rem !important;
    margin-right: 2.488rem !important;
  }
  .u-lg-spaceTop5 {
    margin-top: 2.488rem !important;
  }
  .u-lg-spaceBottom5 {
    margin-bottom: 2.488rem !important;
  }
  .u-lg-spaceLeft5 {
    margin-left: 2.488rem !important;
  }
  .u-lg-spaceRight5 {
    margin-right: 2.488rem !important;
  }
  .u-lg-pull5 {
    margin: -2.488rem !important;
  }
  .u-lg-pullEnds5 {
    margin-bottom: -2.488rem !important;
    margin-top: -2.488rem !important;
  }
  .u-lg-pullSides5 {
    margin-left: -2.488rem !important;
    margin-right: -2.488rem !important;
  }
  .u-lg-pullTop5 {
    margin-top: -2.488rem !important;
  }
  .u-lg-pullBottom5 {
    margin-bottom: -2.488rem !important;
  }
  .u-lg-pullLeft5 {
    margin-left: -2.488rem !important;
  }
  .u-lg-pullRight5 {
    margin-right: -2.488rem !important;
  }
  .u-lg-pad5 {
    padding: 2.488rem !important;
  }
  .u-lg-padEnds5 {
    padding-bottom: 2.488rem !important;
    padding-top: 2.488rem !important;
  }
  .u-lg-padSides5 {
    padding-left: 2.488rem !important;
    padding-right: 2.488rem !important;
  }
  .u-lg-padTop5 {
    padding-top: 2.488rem !important;
  }
  .u-lg-padBottom5 {
    padding-bottom: 2.488rem !important;
  }
  .u-lg-padLeft5 {
    padding-left: 2.488rem !important;
  }
  .u-lg-padRight5 {
    padding-right: 2.488rem !important;
  }
  .u-lg-spaceItems6 > * + * {
    margin-top: 2.986rem !important;
  }
  .u-lg-staggerItems6 > * + * {
    margin-top: 2.986em !important;
  }
  .u-lg-space6 {
    margin: 2.986rem !important;
  }
  .u-lg-spaceEnds6 {
    margin-bottom: 2.986rem !important;
    margin-top: 2.986rem !important;
  }
  .u-lg-spaceSides6 {
    margin-left: 2.986rem !important;
    margin-right: 2.986rem !important;
  }
  .u-lg-spaceTop6 {
    margin-top: 2.986rem !important;
  }
  .u-lg-spaceBottom6 {
    margin-bottom: 2.986rem !important;
  }
  .u-lg-spaceLeft6 {
    margin-left: 2.986rem !important;
  }
  .u-lg-spaceRight6 {
    margin-right: 2.986rem !important;
  }
  .u-lg-pull6 {
    margin: -2.986rem !important;
  }
  .u-lg-pullEnds6 {
    margin-bottom: -2.986rem !important;
    margin-top: -2.986rem !important;
  }
  .u-lg-pullSides6 {
    margin-left: -2.986rem !important;
    margin-right: -2.986rem !important;
  }
  .u-lg-pullTop6 {
    margin-top: -2.986rem !important;
  }
  .u-lg-pullBottom6 {
    margin-bottom: -2.986rem !important;
  }
  .u-lg-pullLeft6 {
    margin-left: -2.986rem !important;
  }
  .u-lg-pullRight6 {
    margin-right: -2.986rem !important;
  }
  .u-lg-pad6 {
    padding: 2.986rem !important;
  }
  .u-lg-padEnds6 {
    padding-bottom: 2.986rem !important;
    padding-top: 2.986rem !important;
  }
  .u-lg-padSides6 {
    padding-left: 2.986rem !important;
    padding-right: 2.986rem !important;
  }
  .u-lg-padTop6 {
    padding-top: 2.986rem !important;
  }
  .u-lg-padBottom6 {
    padding-bottom: 2.986rem !important;
  }
  .u-lg-padLeft6 {
    padding-left: 2.986rem !important;
  }
  .u-lg-padRight6 {
    padding-right: 2.986rem !important;
  }
  /**
   * Reset utilities. These come last to give them slight precedence over the
   * other utilities to make it easier to clear whitespace across breakpoints.
   */
  .u-lg-spaceNone {
    margin: 0 !important;
  }
  .u-lg-spaceEndsNone {
    margin-bottom: 0 !important;
    margin-top: 0 !important;
  }
  .u-lg-spaceSidesNone {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  .u-lg-spaceTopNone {
    margin-top: 0 !important;
  }
  .u-lg-spaceBottomNone {
    margin-bottom: 0 !important;
  }
  .u-lg-spaceLeftNone {
    margin-left: 0 !important;
  }
  .u-lg-spaceRightNone {
    margin-right: 0 !important;
  }
  .u-lg-padNone {
    padding: 0 !important;
  }
  .u-lg-padEndsNone {
    padding-bottom: 0 !important;
    padding-top: 0 !important;
  }
  .u-lg-padSidesNone {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
  .u-lg-padTopNone {
    padding-top: 0 !important;
  }
  .u-lg-padBottomNone {
    padding-bottom: 0 !important;
  }
  .u-lg-padLeftNone {
    padding-left: 0 !important;
  }
  .u-lg-padRightNone {
    padding-right: 0 !important;
  }
}

/* stylelint-enable */

/**
 * @define utilities
 */

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, IE 10+
 * 2. Safari 7 and future browsers
 * 3. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 */

.u-textKern {
  -webkit-font-feature-settings: "kern" 1, "kern";
          font-feature-settings: "kern" 1, "kern"; /* 1 */
  -webkit-font-kerning: normal;
          font-kerning: normal; /* 2 */
  text-rendering: optimizeLegibility; /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%; /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important; /* 2 */
}

/**
 * Size and line-height
 */

/* stylelint-disable plugin/selector-bem-pattern */

.u-textSize01 {
    font-size: 13.328px !important;
    font-size: 0.833rem !important;
  }

.u-textSize {
    font-size: 16px !important;
    font-size: 1rem !important;
  }

.u-lineHeight {
    line-height: 1 !important;
  }

.u-textSize1 {
    font-size: 19.2px !important;
    font-size: 1.2rem !important;
  }

.u-textSize2 {
    font-size: 23.04px !important;
    font-size: 1.44rem !important;
  }

.u-textSize3 {
    font-size: 27.648px !important;
    font-size: 1.728rem !important;
  }

.u-textSize4 {
    font-size: 33.184px !important;
    font-size: 2.074rem !important;
  }

.u-textSize5 {
    font-size: 39.808px !important;
    font-size: 2.488rem !important;
  }

.u-textSize6 {
    font-size: 47.776px !important;
    font-size: 2.986rem !important;
  }

.u-textShrink6 {
    font-size: 0.335em !important;
  }

.u-textShrink5 {
    font-size: 0.402em !important;
  }

.u-textShrink4 {
    font-size: 0.482em !important;
  }

.u-textShrink3 {
    font-size: 0.579em !important;
  }

.u-textShrink2 {
    font-size: 0.694em !important;
  }

.u-textShrink1 {
    font-size: 0.833em !important;
  }

.u-textShrink {
    font-size: 1em !important;
  }

.u-textGrow {
    font-size: 1em !important;
  }

.u-textGrow1 {
    font-size: 1.2em !important;
  }

.u-textGrow2 {
    font-size: 1.44em !important;
  }

.u-textGrow3 {
    font-size: 1.728em !important;
  }

.u-textGrow4 {
    font-size: 2.074em !important;
  }

.u-textGrow5 {
    font-size: 2.488em !important;
  }

.u-textGrow6 {
    font-size: 2.986em !important;
  }

.u-lineHeight1 {
    line-height: 1.2 !important;
  }

.u-lineHeight2 {
    line-height: 1.44 !important;
  }

@media (min-width: 30em) {
  .u-sm-textSize01 {
    font-size: 0.833rem !important;
  }
  .u-sm-textSize {
    font-size: 1rem !important;
  }
  .u-sm-lineHeight {
    line-height: 1 !important;
  }
  .u-sm-textSize1 {
    font-size: 1.2rem !important;
  }
  .u-sm-textSize2 {
    font-size: 1.44rem !important;
  }
  .u-sm-textSize3 {
    font-size: 1.728rem !important;
  }
  .u-sm-textSize4 {
    font-size: 2.074rem !important;
  }
  .u-sm-textSize5 {
    font-size: 2.488rem !important;
  }
  .u-sm-textSize6 {
    font-size: 2.986rem !important;
  }
  .u-sm-textShrink6 {
    font-size: 0.335em !important;
  }
  .u-sm-textShrink5 {
    font-size: 0.402em !important;
  }
  .u-sm-textShrink4 {
    font-size: 0.482em !important;
  }
  .u-sm-textShrink3 {
    font-size: 0.579em !important;
  }
  .u-sm-textShrink2 {
    font-size: 0.694em !important;
  }
  .u-sm-textShrink1 {
    font-size: 0.833em !important;
  }
  .u-sm-textShrink {
    font-size: 1em !important;
  }
  .u-sm-textGrow {
    font-size: 1em !important;
  }
  .u-sm-textGrow1 {
    font-size: 1.2em !important;
  }
  .u-sm-textGrow2 {
    font-size: 1.44em !important;
  }
  .u-sm-textGrow3 {
    font-size: 1.728em !important;
  }
  .u-sm-textGrow4 {
    font-size: 2.074em !important;
  }
  .u-sm-textGrow5 {
    font-size: 2.488em !important;
  }
  .u-sm-textGrow6 {
    font-size: 2.986em !important;
  }
  .u-sm-lineHeight1 {
    line-height: 1.2 !important;
  }
  .u-sm-lineHeight2 {
    line-height: 1.44 !important;
  }
}

@media (min-width: 47em) {
  .u-md-textSize01 {
    font-size: 0.833rem !important;
  }
  .u-md-textSize {
    font-size: 1rem !important;
  }
  .u-md-lineHeight {
    line-height: 1 !important;
  }
  .u-md-textSize1 {
    font-size: 1.2rem !important;
  }
  .u-md-textSize2 {
    font-size: 1.44rem !important;
  }
  .u-md-textSize3 {
    font-size: 1.728rem !important;
  }
  .u-md-textSize4 {
    font-size: 2.074rem !important;
  }
  .u-md-textSize5 {
    font-size: 2.488rem !important;
  }
  .u-md-textSize6 {
    font-size: 2.986rem !important;
  }
  .u-md-textShrink6 {
    font-size: 0.335em !important;
  }
  .u-md-textShrink5 {
    font-size: 0.402em !important;
  }
  .u-md-textShrink4 {
    font-size: 0.482em !important;
  }
  .u-md-textShrink3 {
    font-size: 0.579em !important;
  }
  .u-md-textShrink2 {
    font-size: 0.694em !important;
  }
  .u-md-textShrink1 {
    font-size: 0.833em !important;
  }
  .u-md-textShrink {
    font-size: 1em !important;
  }
  .u-md-textGrow {
    font-size: 1em !important;
  }
  .u-md-textGrow1 {
    font-size: 1.2em !important;
  }
  .u-md-textGrow2 {
    font-size: 1.44em !important;
  }
  .u-md-textGrow3 {
    font-size: 1.728em !important;
  }
  .u-md-textGrow4 {
    font-size: 2.074em !important;
  }
  .u-md-textGrow5 {
    font-size: 2.488em !important;
  }
  .u-md-textGrow6 {
    font-size: 2.986em !important;
  }
  .u-md-lineHeight1 {
    line-height: 1.2 !important;
  }
  .u-md-lineHeight2 {
    line-height: 1.44 !important;
  }
}

@media (min-width: 64em) {
  .u-lg-textSize01 {
    font-size: 0.833rem !important;
  }
  .u-lg-textSize {
    font-size: 1rem !important;
  }
  .u-lg-lineHeight {
    line-height: 1 !important;
  }
  .u-lg-textSize1 {
    font-size: 1.2rem !important;
  }
  .u-lg-textSize2 {
    font-size: 1.44rem !important;
  }
  .u-lg-textSize3 {
    font-size: 1.728rem !important;
  }
  .u-lg-textSize4 {
    font-size: 2.074rem !important;
  }
  .u-lg-textSize5 {
    font-size: 2.488rem !important;
  }
  .u-lg-textSize6 {
    font-size: 2.986rem !important;
  }
  .u-lg-textShrink6 {
    font-size: 0.335em !important;
  }
  .u-lg-textShrink5 {
    font-size: 0.402em !important;
  }
  .u-lg-textShrink4 {
    font-size: 0.482em !important;
  }
  .u-lg-textShrink3 {
    font-size: 0.579em !important;
  }
  .u-lg-textShrink2 {
    font-size: 0.694em !important;
  }
  .u-lg-textShrink1 {
    font-size: 0.833em !important;
  }
  .u-lg-textShrink {
    font-size: 1em !important;
  }
  .u-lg-textGrow {
    font-size: 1em !important;
  }
  .u-lg-textGrow1 {
    font-size: 1.2em !important;
  }
  .u-lg-textGrow2 {
    font-size: 1.44em !important;
  }
  .u-lg-textGrow3 {
    font-size: 1.728em !important;
  }
  .u-lg-textGrow4 {
    font-size: 2.074em !important;
  }
  .u-lg-textGrow5 {
    font-size: 2.488em !important;
  }
  .u-lg-textGrow6 {
    font-size: 2.986em !important;
  }
  .u-lg-lineHeight1 {
    line-height: 1.2 !important;
  }
  .u-lg-lineHeight2 {
    line-height: 1.44 !important;
  }
}

/* stylelint-enable */

/**
 * Color
 */

.u-textBlack {
  color: #2c2a29 !important;
}

.u-textGray {
  color: #63666a !important;
}

.u-textMercury {
  color: #bbb !important;
}

.u-textLeonisa {
  color: #003865 !important;
}

.u-textDarkPink {
  color: #af605b !important;
}

.u-textDarkOrange {
  color: #d76e23 !important;
}

.u-textOrange {
  color: #f48e28 !important;
}

.u-textWine {
  color: #641e35 !important;
}

.u-textRed {
  color: #d73043 !important;
}

.u-textGreen {
  color: #8ec549 !important;
}

.u-textCyan {
  color: #009fda !important;
}

.u-textYellow {
  color: #e8aa00 !important;
}

.u-textMint {
  color: #3cdbc0 !important;
}

.u-textSand {
  color: #a99a6c !important;
}

.u-textDarkBlue {
  color: #2f4754 !important;
}

.u-textSeaGreen {
  color: #009ca6 !important;
}

.u-textLoyaltyGreen {
  color: #aad3cd !important;
}

.u-textLoyaltyDarkGreen {
  color: #2e4147 !important;
}

.u-textLoyaltyDarkGray {
  color: #242b33 !important;
}

.u-textLoyaltyPurple {
  color: #6f6da8 !important;
}

.u-textLoyaltyOrange {
  color: #f3b88f !important;
}

.u-textLoyaltyDarkOrange {
  color: #f28468 !important;
}

/**
 * Note: The following text color utilities do not meet contrast guidelines,
 * they should only be used for presentational elements (such as iconography
 * or visual indicators) or against dark backgrounds with sufficient contrast.
 */

.u-textWhite {
  color: #fff !important;
}

.u-textSalmon {
  color: #db908c !important;
}

.u-textPeach {
  color: #fdd086 !important;
}

.u-textLoyaltyBlue {
  color: #d2ebf1 !important;
}

.u-textLoyaltyPink {
  color: #e9d7e8 !important;
}

.u-textLoyaltyPeach {
  color: #f7ece8 !important;
}

.u-textLoyaltyLightGreen {
  color: #ddece9 !important;
}

.u-textLoyaltyLightOrange {
  color: #fde7ce !important;
}

/**
 * Alignment
 */

@media (min-width: 30em) {
  .u-sm-textCenter {
    text-align: center !important;
  }

  .u-sm-textLeft {
    text-align: left !important;
  }

  .u-sm-textRight {
    text-align: right !important;
  }
}

@media (min-width: 47em) {
  .u-md-textCenter {
    text-align: center !important;
  }

  .u-md-textLeft {
    text-align: left !important;
  }

  .u-md-textRight {
    text-align: right !important;
  }
}

@media (min-width: 64em) {
  .u-lg-textCenter {
    text-align: center !important;
  }

  .u-lg-textLeft {
    text-align: left !important;
  }

  .u-lg-textRight {
    text-align: right !important;
  }
}

/**
 * Weight
 */

.u-textNormal {
  font-weight: 400 !important;
}

.u-textSemibold {
  font-weight: 500 !important;
}

.u-textBold {
  font-weight: 700 !important;
}

/**
 * Case
 */

.u-textCapitalize {
  text-transform: capitalize !important;
}

.u-textUpper {
  text-transform: uppercase !important;
}

/*
 * Font
 */

.u-textSerif {
  font-stretch: normal;
  font-style: normal;
  font-weight: 100;
  font-family: serif;
}

.fonts-loaded .u-textSerif {
  font-family: Canela Web;
}

/*
 * Spacing
 */

.u-textSpacingLoose {
  letter-spacing: 0.15em !important;
}
